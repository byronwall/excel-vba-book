question,answer
"<p>I'm trying to build a 'heatmap' based on <a href=""http://flowingdata.com/2010/01/21/how-to-make-a-heatmap-a-quick-and-easy-solution/"" rel=""nofollow noreferrer"">this</a> tutorial. My data.frame looks like this: </p>

<p><img src=""https://i.stack.imgur.com/SELEx.jpg"" alt=""enter image description here""></p>

<p>and the result looks like this:</p>

<p><img src=""https://i.stack.imgur.com/jFagl.jpg"" alt=""enter image description here""></p>

<p>Code:</p>

<pre><code>row.names(data) &lt;-data$X)
data&lt;-data[,2:5]
data_matrix&lt;-data.matrix(data)
heat_result&lt;-heatmap(data_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale=""column"", margins=c(5,10))
</code></pre>

<p>My question is this: if you look at the data.frame for Bing and Baidu on March (marked in yellow) the result on the heat map is identical (both strong red). I assume the heatmap show the colors with respect to the specific 'search engine' over the period of months and not with respect to all other search engines. So how can I set-up the heatmap in such way that the color-result will be relatively to all the other search-engines? I expect to see red-ish' color Bing in march. </p>
","<p>You can change the scaling with the scale parameter.  Changing that to ""none"" will prevent the rescaling across the column before the colors are drawn.  The final line of code below is what you want.</p>

<p><a href=""https://stat.ethz.ch/R-manual/R-devel/library/stats/html/heatmap.html"" rel=""nofollow noreferrer"">https://stat.ethz.ch/R-manual/R-devel/library/stats/html/heatmap.html</a></p>

<pre><code>set.seed(42)

#uniform sampling, b is much larger than a
a = runif(10,1,10)
b = runif(10,10,100)

data = as.matrix(cbind(a,b))

#scale across columns
heatmap(data, Rowv=NA, Colv=NA, col = heat.colors(256), scale=""column"", margins=c(5,10))

#color across whole dataset.
heatmap(data, Rowv=NA, Colv=NA, col = heat.colors(256), scale=""none"", margins=c(5,10))
</code></pre>

<p>Images:</p>

<p>Here is the scale=""column"":
<img src=""https://i.stack.imgur.com/UIB1j.png"" alt=""scale on columns""></p>

<p>And here is the scale=""none"":
<img src=""https://i.stack.imgur.com/vcwfA.png"" alt=""scale on none""></p>
"
"<p>I'm learning VBA as a means to speed up some processes at my work. I have to send rooming lists to properties in PDF format generated form excel. I have the following code that works great, but I get an error message whenever one of the worksheets is hidden. I have to hide sheets often as properties change from trip to trip.</p>

<p>I want to PDF the Worksheets from the 4th sheet to the sheetname ""Post"". Whenever I hide a sheet in between these I get the following error message ""Run-time error '5': Invalid procedure call or argument""</p>

<p>Here's the code: </p>

<pre><code>Sub SaveAllPDF()
Dim I As Integer
Dim Fname As String
Dim TabCount As Long


TabCount = Sheets(""Post"").Index

' Begin the loop.

For I = 4 To TabCount
Sheets(I).Activate
With ActiveSheet
Fname = .Range(""C15"") &amp; "" "" &amp; .Range("" B1"")
ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, FileName:= _
""C:\Users\brandon.ford\Desktop\Operation Automated\"" &amp; Fname,     
Quality:=xlQualityStandard, _
IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=False
End With
Next I
End Sub
</code></pre>

<p>Anyone have any ideas how to remedy this problem so the 'For I = 4 to TabCount' ignores any hidden tabs? Any help would be MUCH appreciated, I've been trying to tackle this problem for a long time and do not have much VBA knowledge. </p>
","<p>With your current loop, this is best avoided by simply checking that the WorkSheet is visible before trying to export.  The Visible property contains this info.  The value should be xlSheetVisible if the sheet is visible.</p>

<p>Here is the full code with the check:</p>

<pre><code>Sub SaveAllPDF()
Dim I As Integer
Dim Fname As String
Dim TabCount As Long


TabCount = Sheets(""Post"").Index

' Begin the loop.

For I = 4 To TabCount
Sheets(I).Activate
With ActiveSheet
    If .Visible = xlSheetVisible Then

        Fname = .Range(""C15"") &amp; "" "" &amp; .Range("" B1"")
        ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, FileName:= _
        ""C:\Users\brandon.ford\Desktop\Operation Automated\"" &amp; Fname,
        Quality:=xlQualityStandard, _
        IncludeDocProperties:=True, IgnorePrintAreas:=False, OpenAfterPublish:=False

    End If
End With
Next I
End Sub
</code></pre>
"
"<p>Chart = xy Scatter</p>

<p>I have a chart on which I have set a Horizontal Axis Crosses-Axis value = 200. And that chart looks as follows:</p>

<p><img src=""https://i.stack.imgur.com/ISljx.png"" alt=""enter image description here""></p>

<p>Now I wish to reverse the order of the y-axis labels. But when I check ""Values in reverse order"" the x-axis labels jump above the x-axis line as follows:</p>

<p><img src=""https://i.stack.imgur.com/UbxpI.png"" alt=""enter image description here""></p>

<p>I'd like the x-axis labels to be bellow the x-axis line. I have been trying various VBA code and just various excel options. Such as:</p>

<p>.TickLabels.Offset (this offsets the x-axis labels further away from the x-axis, will not accept negative numbers)</p>

<p>I wanted to add a large MarginTop value to the x-axis labels, but I was unable to figure out the VBA code and the option is greyed out in Excel.</p>

<p>Any possible thoughts or solutions would be very much appreciated.</p>
","<p>If you can live with the x-axis being at the bottom of the chart, you can get the labels back ""under"" the axis by changing the TickLabelPosition to be equal to xlTickLabelPositionHigh.  It looks better if you also cross the y-axis at the ""Maximum axis value"".  This puts the axis formatting at the bottom (really the maximum value) with the labels.</p>

<p>You can get all these settings from the normal menus.  If you need VBA to do this, here is a starting point:</p>

<pre><code>Sub reverseAxisAndLabelAtBottom()

    Dim cht As Chart
    Dim x_axis As Axis
    Dim y_axis As Axis

    'using the ActiveChart... assumes it is selected

    Set cht = ActiveChart
    Set x_axis = cht.Axes(xlCategory)
    Set y_axis = cht.Axes(xlValue)

    y_axis.ReversePlotOrder = True
    x_axis.TickLabelPosition = xlTickLabelPositionHigh
    y_axis.Crosses = xlAxisCrossesMaximum


End Sub
</code></pre>

<p>I also tried to do this by adding a dummy series and putting reversed y-axis on the secondary axis.  This gets the labels right, but then the y-axis is forced over to the far right.  I would not call that an ""ideal"" way of doing it.</p>

<p>Before/after pictures with some random data.
<img src=""https://i.stack.imgur.com/mcL96.png"" alt=""before"">
<img src=""https://i.stack.imgur.com/FUHiy.png"" alt=""after""></p>
"
"<p>I am trying to use a macro to delete data that follows after a certain word/phrase in excel.</p>

<p>The problem is the cell position can vary depending on how many lines there are in the spreadsheet after the report has been run/exported. I need a solution, if possible, to target a certain phrase (using the find function i presume) and delete 30 cells down from that wherever the text may be (no cet cell).</p>

<p>Is this possible?</p>
","<p>This is possible, but the specifics of what you want are not the clearest.  Here is some code that will get you started.  It looks for a given phrase in all of the cells on the sheet.  If it finds it, it adds the 30 cells below that one into a group that is slated for deletion.  Once it searches all the cells, it deletes the groups that were collected.</p>

<p>Since we are iterating through the collection that we want to delete from, I collect the cells to delete (using Union) and delete them after the loop closes.</p>

<p>This may not be the fastest code since it searches all cells in the UsedRange, but it should work for most uses.</p>

<pre><code>Sub deleteBelowPhrase()

    Dim cell As Range
    Dim sht As Worksheet

    Dim phrase As String
    Dim deleteRows As Integer

    'these are the parameters
    phrase = ""DELETE BELOW ME""
    deleteRows = 30

    'assumes you are searching the active sheet
    Set sht = ActiveSheet

    Dim del_range As Range
    Dim del_cell As Range

    For Each cell In sht.UsedRange

        'check for the phrase in the cell
        If InStr(cell.Value2, phrase) &gt; 0 Then

            'get a reference to the range to delete
            Set del_cell = sht.Range(cell.Offset(1), cell.Offset(deleteRows))

            'create object to delete or add to existing
            If del_range Is Nothing Then
                Set del_range = del_cell
            Else
                Set del_range = Union(del_range, del_cell)
            End If
        End If

    Next cell

    'delete the block of cells that are collected
    del_range.Delete xlShiftUp

End Sub
</code></pre>

<h1>Before</h1>

<p><img src=""https://i.stack.imgur.com/Qfuxv.png"" alt=""before""></p>

<h1>After</h1>

<p><img src=""https://i.stack.imgur.com/hHYMs.png"" alt=""after""></p>
"
"<p>I would like to chart the states of a machine over a period of time. For example it may be ""running"" for 2 hours and then ""stopped"" for 1 hour, and there may be several times each state occurs. Using a stacked bar chart I'd like to display the state and the amount of time it stays in the state.
I'm finding that excel is assigning a new color and legend entry to each new state instance even if that state has already occurred.<br>
How can I make same-named states within a chart have the same color (e.g. every time ""running"" is displayed it has the same color and a single legend entry)? Thanks</p>
","<p>The state name is stored as the Series Name.  There is a series for each stack in the Chart.  It is possible to iterate through series and style them based on the Series Name.  It is also possible to remove entries from the Legend using the LegendEntries object.</p>

<p>Combining these into a loop, you can update the series color if it matches a title and then remove the item from the Legend if it is not one of the first two Series.  This assumes that ""running"" and ""stopped"" alternate at the start and are the entries to keep in the Legend.  If this is not the case, you could do more logic to spot the entries to keep.</p>

<pre><code>Sub style_chart()

    Dim cht As Chart
    Dim ser As Series

    'uses the active chart... assume it is selected
    Set cht = ActiveChart

    With cht
        'reset legend so that it matches series
        .HasLegend = False
        .HasLegend = True

        'iterate backwards to delete
        For i = .SeriesCollection.Count To 1 Step -1
            Set ser = .SeriesCollection(i)

            'set series colors based on name
            If ser.Name = ""running"" Then
                ser.Format.Fill.ForeColor.RGB = RGB(0, 176, 80)
            ElseIf ser.Name = ""stopped"" Then
                ser.Format.Fill.ForeColor.RGB = RGB(255, 0, 0)
            End If

            'delete the legend entry if after first 2
            If i &gt; 2 Then
                .Legend.LegendEntries(i).Delete
            End If
        Next i
    End With

End Sub
</code></pre>

<h1>Before</h1>

<p><img src=""https://i.stack.imgur.com/SQn83.png"" alt=""before""></p>

<h1>After</h1>

<p><img src=""https://i.stack.imgur.com/iCoBV.png"" alt=""after""></p>
"
"<p>I got VBA code to populate some T-SQL query data in an Excel file. In that data, one column contains values of Red, Amber, Green and N/A. Now I want background Color for according to those values (Red, Amber, Green and White). How can I do this in VBA?</p>

<p><strong>Edited:</strong> I need Like this:</p>

<pre><code>id firstname lastname complaint
1  paul      nixon    RED
2  John      nathon   RED
3  sera      teag     AMBER
4  CLARE     walker   GREEN
</code></pre>

<p>Now I want background color for column 'complaint' according to cell value, like if cell value RED I want that background color also RED etc.. in VBA code.</p>
","<p>Changing the background color of a cell is simple.  Determining what color to change it to is the key step here.  If you know that those 4 colors are the only options, I would just pound out the cases and set the colors.  If you find this growing to more colors, you may want to define them in a Dictionary and do a lookup instead of the SELECT-CASE construction.</p>

<p>This simple code would work with your example.  You will want to define the Range better (probably not ""D2:D5"") based on your real application and tweak the colors.</p>

<pre><code>Sub ColorWithText()

    Dim cell As Range

    For Each cell In Range(""D2:D5"")
        Select Case UCase(cell.Value)
            Case ""RED""
                cell.Interior.Color = RGB(255, 0, 0)
            Case ""AMBER""
                cell.Interior.Color = RGB(255, 191, 0)
            Case ""GREEN""
                cell.Interior.Color = RGB(0, 255, 0)
            Case ""WHITE""
                cell.Interior.Color = RGB(255, 255, 255)
        End Select
    Next cell
End Sub
</code></pre>

<p>Here is a picture of my Excel instance after the code runs.
<img src=""https://i.stack.imgur.com/BNyEa.png"" alt=""image with colors applied""></p>
"
"<p>I have a list of stock prices pulled from Google finance and placed in different sheets in my Excel. I'm wondering, Can I refresh Excel sheet every SECOND (not minute) according to the Google finance stock price?</p>
","<p>This can be done without having a macro constantly running.  It relies on the <strong>Application.OnTime</strong> method which allows an action to be scheduled out in the future. I have used this approach to force Excel to refresh data from external sources.</p>

<p>The code below is based nearly exclusively on the code at this link: <a href=""http://www.cpearson.com/excel/ontime.aspx"" rel=""nofollow"">http://www.cpearson.com/excel/ontime.aspx</a></p>

<p>The reference for Application.OnTime is at: <a href=""https://msdn.microsoft.com/en-us/library/office/ff196165.aspx"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/office/ff196165.aspx</a></p>

<pre><code>Dim RunWhen As Date

Sub StartTimer()
    Dim secondsBetween As Integer
    secondsBetween = 1

    RunWhen = Now + TimeSerial(0, 0, secondsBetween)
    Application.OnTime EarliestTime:=RunWhen, Procedure:=""CodeToRun"", Schedule:=True
End Sub

Sub StopTimer()
    On Error Resume Next
    Application.OnTime EarliestTime:=RunWhen, Procedure:=""CodeToRun"", Schedule:=False
End Sub

Sub EntryPoint()

    'you can add other code here to determine when to start
    StartTimer

End Sub

Sub CodeToRun()

    'this is the ""action"" part
    [A1] = WorksheetFunction.RandBetween(0, 100)


    'be sure to call the start again if you want it to repeat
    StartTimer

End Sub
</code></pre>

<p>In this code, the StartTimer and StopTimer calls are used to manage the Timers.  The EntryPoint code gets things started and CodeToRun includes the actual code to run.  Note that to make it repeat, you call StartTimer within CodeToRun.  This allows it to loop.  You can stop the loop by calling the StopTimer or simply not calling StartTimer again.  This can be done with some logic in CodeToRun.</p>

<p>I am simply putting a random number in A1 so that you can see it update.</p>
"
"<p>I have a column of cells (Range A2:A10) which contain names of students. For each student, I have a chart titled after their name which track their performances in another sheet. I would like to change the chart background to light red colour if their names appear in the column of cells. </p>
","<p>This is a fairly straight forward combination of ideas.  You need to iterate through the charts, check the title against a list, and change the background color.  The code below is an example to show the idea.</p>

<p>When iterating through Charts on a sheet, you start with the ChartObjects method.  The ChartObject contains a reference to the actual Chart where you can get the Title and change the background.  Note that checking the Title of a Chart without one will throw an error, so I start with a check to Chart.HasTitle.</p>

<p>I am using Application.Match to check if the range contains the title.  This will return an error if it is not found, so I am checking for that error.</p>

<p>Finally, if the match exists, you change the background of the Chart through a lengthy list of properties.  If you want to change a different part of the chart, record a macro to find the right property.</p>

<pre><code>Sub ColorBasedOnTitle()

    Dim chtObj As ChartObject
    Dim sht As Worksheet
    Dim rng_students As Range

    'assume active sheet, change if not
    Set sht = ActiveSheet

    'need to set a reference to the list of names... named range is probably prefered here
    Set rng_students = sht.Range(""B3:B6"")

    'loop through all charts on sheet
    For Each chtObj In sht.ChartObjects

        'if chart has title, check its value
        Dim title As String
        If chtObj.Chart.HasTitle Then
            title = chtObj.Chart.ChartTitle.Text

            'use Match to see if title is in list of names
            Dim search As Variant
            search = Application.Match(title, rng_students, 0)

            'see if student is in list, change background if so
            If Not IsError(search) Then
                chtObj.Chart.ChartArea.Format.Fill.ForeColor.RGB = RGB(255, 0, 0)
            End If
        End If
    Next chtObj
End Sub
</code></pre>

<p>Here is a picture of my Excel instance so you can see the result.  Note that my Chart titled ""F"" is outside the range of checked names which are highlighted grey for emphasis.</p>

<p><img src=""https://i.stack.imgur.com/Y7kzZ.png"" alt=""charts after code runs""></p>
"
"<p>I have some hierarhical dictionary like this</p>

<p><img src=""https://i.stack.imgur.com/JRdw0.jpg"" alt=""enter image description here""></p>

<p>And unloaded this dictionary into Excel file like this</p>

<p><img src=""https://i.stack.imgur.com/DL7Cy.jpg"" alt=""enter image description here""></p>

<p>Now I have to group Excel rows in hierarhical manner.</p>

<p>I know that Excel has range().group function. But is there any way to do so quick and easy or I have to scan all excel file and select rows to group in manual way?</p>
","<p>I tested this out on some dummy examples and it worked well.  The idea is to loop through the cells in your range of interest and group them if the level is greater in rows below the current cell.  It works its way down which builds the hierarchy.  You can then use the grouping buttons to show different levels.</p>

<p>This code works if the level column has no breaks (since I am using Range.End to get the last cell).</p>

<pre><code>Sub GroupBasedOnLevel()

    Dim rng_cells As Range
    Dim rng_start As Range
    Dim rng_end As Range

    'set up some ranges, change rng_start to be appropriate
    Set rng_start = Range(""A2"")
    Set rng_end = rng_start.End(xlDown)
    Set rng_cells = Range(rng_start, rng_end)

    'clear previous outline
    Cells.ClearOutline

    'loop through level cells and group based on values below
    Dim cell As Range
    For Each cell In rng_cells

        'get value of cell and start checking below it
        Dim row_off As Integer
        row_off = 1

        'loop ensures level is greater below and cells are within range
        Do While cell.Offset(row_off) &gt; cell And cell.Offset(row_off).Row &lt;= rng_end.Row
            row_off = row_off + 1
        Loop

        'do the grouping if there are more than 1 cells below
        If row_off &gt; 1 Then
            Range(cell.Offset(1), cell.Offset(row_off - 1)).EntireRow.Group
        End If
    Next cell
End Sub
</code></pre>

<h1>Results</h1>

<h2>starting point</h2>

<p><img src=""https://i.stack.imgur.com/lBwAZ.png"" alt=""starting point""> </p>

<h2>full grouping</h2>

<p><img src=""https://i.stack.imgur.com/39o9K.png"" alt=""full grouping""></p>

<h2>collapsed to level 1</h2>

<p><img src=""https://i.stack.imgur.com/uxHsZ.png"" alt=""collapsed group""></p>
"
"<p>I am trying to find an easier way to calculate the following stats: average, std, min, and max. So far I have tried combining the function name (E9), start column ($E$6), Start row ($F$2), end column($G$6), and end row ($F$3). The result was <code>AVERAGE(A2:C10)</code>. I want this to return the value of <code>AVERAGE(A2:C10)</code>, which is <code>6.23</code>. Is there anyway to turn this into an equation that Excel can recognize? This concept will be used to find the average, std, min, and max for a large dataset. Thanks in advance!</p>

<p><img src=""https://i.stack.imgur.com/4ODra.jpg"" alt=""enter image description here""></p>
","<p>If you want to wander into the world of undocumented ""features"" you can use the EVALUATE function if it is defined in a named range.  It mostly works in Excel 2013 as advertised here: <a href=""http://www.vertex42.com/ExcelArticles/evaluate-function.html"" rel=""nofollow noreferrer"">http://www.vertex42.com/ExcelArticles/evaluate-function.html</a>.</p>

<p>The downside is that it appears it does not update unless the underlying formula or the result cell is updated.  It does not properly respond to changes in the data in the AVERAGE/SUM on their own.  This might not be an issue if you're changing the formula often (or using indirect with it since I believe INDIRECT forces full recalcs).</p>

<p><img src=""https://i.stack.imgur.com/J8JRn.png"" alt=""EVALUATE in action""></p>
"
"<p>I wonder whether someone could help me please.</p>

<p>I'm using the code below to dynamically create a list of files from a given folder.</p>

<p>In column E for each row of the list there is a link 'Click Here to Open' which allows the user to open each file.</p>

<p>But I'm now looking to change this so rather than opening the file, the link will open a 'Save' dialog which allows the user the file to a user selected folder, and I must admit this issue has had me baffled for over a week now.</p>

<pre><code>Public Sub ListFilesInFolder(SourceFolder As Scripting.folder, IncludeSubfolders As Boolean)

    Dim LastRow As Long

    On Error Resume Next
    For Each FileItem In SourceFolder.Files
        ' display file properties
        Cells(iRow, 3).Formula = iRow - 12
        Cells(iRow, 4).Formula = FileItem.Name
        Cells(iRow, 5).Select
        Selection.Hyperlinks.Add Anchor:=Selection, Address:= _
        FileItem.Path, TextToDisplay:=""Click Here to Open""
        iRow = iRow + 1 ' next row number

        With ActiveSheet
            LastRow = .Cells(.Rows.Count, ""C"").End(xlUp).Row
            LastRow = Cells.Find(""*"", SearchOrder:=xlByRows, SearchDirection:=xlPrevious).Row
        End With

        For Each Cell In Range(""C13:E"" &amp; LastRow) ''change range accordingly
            If Cell.Row Mod 2 = 1 Then ''highlights row 2,4,6 etc|= 0 highlights 1,3,5
                Cell.Interior.Color = RGB(232, 232, 232) ''color to preference
            Else
                Cell.Interior.Color = RGB(141, 180, 226) 'color to preference or remove
            End If
        Next Cell
    Next FileItem

    If IncludeSubfolders Then
        For Each SubFolder In SourceFolder.SubFolders
            ListFilesInFolder SubFolder, True
        Next SubFolder
    End If
    Set FileItem = Nothing
    Set SourceFolder = Nothing
    Set FSO = Nothing
End Sub
</code></pre>

<p>I've tried using the command 'Application.Dialogs(xlDialogSaveAs).Show' in every row of the code but I cannot get this to work because all it does is ask the user to save the file as it creates the list.</p>

<p>I just wondered whether someone could possibly look at this please and let me know where I've gone wrong.</p>

<p>Many thanks and kind regards</p>

<p>Chris</p>
","<p>Here is the relevant code for copying a file from a given spot to a destination folder selected by the user.  I wrapped it in a Worksheet event for <code>FollowHyperlink</code> since it sounds like you are doing this based on a click.</p>

<pre><code>Private Sub Worksheet_FollowHyperlink(ByVal Target As Hyperlink)

    Dim FSO
    Dim sFile As String
    Dim sDFolder As String

    'path to file to copy, you will want to point this at a cell range
    'this assume a single cell is selected
    sFile = Target.Range.Value

    'destination folder
    Dim fldr As FileDialog
    Set fldr = Application.FileDialog(msoFileDialogFolderPicker)

    fldr.AllowMultiSelect = False
    fldr.Show

    'add the end slash for the copy operation
    sDFolder = fldr.SelectedItems(1) &amp; ""\""

    'FSO object to copy the file... True below overwrites if needed
    Set FSO = CreateObject(""Scripting.FileSystemObject"")
    FSO.CopyFile (sFile), sDFolder, True

End Sub
</code></pre>
"
"<p>I am working on logistics data. I have booking being made throughout the day at regular intervals from start to the end of the day.
Now these booking are consistent and I have time from like</p>

<pre><code>04:45
21:10
21:10
06:07
05:44
05:45
05:45
05:45
etc. 
</code></pre>

<p>Now as there are multiple bookings I need to group them such as 
04:00- 05:00 (1 hours)- this should capture all booking made during this period.
Similar for other hours during the day.
By doing this I will be able to group individual values into specific group. Can you please advice how to achieve the same in excel.</p>
","<p>If the values are stored as dates in Excel, the Pivot Table has this functionality built in already with the ""Group Field"" option.  You can group by Hours which is probably what you want.  Note that you can select multiple items to get a hierarchy of groups as shown below.  This will break if the underlying data is not formatted as a Date so watch out for that.</p>

<p>If you do not have true dates and just have times, you can format as a Time in Excel and it will work.  Just don't show the days/date because it will be gibberish.</p>

<p><img src=""https://i.stack.imgur.com/I4hP9.png"" alt=""image of pivot options""></p>
"
"<p>I'm trying to write an Excel formula to return a value from the table below:</p>

<pre><code>Q   Y   Mean        1      2       3       4       5       6       7       8       9 
1   4   1301    &lt;1183   1183    1233    1283    1333    1383    1433    1483    1533
2   4   1306    &lt;1189   1189    1239    1289    1339    1389    1439    1489    1539
3   4   1317    &lt;1200   1200    1250    1300    1350    1400    1450    1500    1550
4   4   1333    &lt;1214   1214    1264    1314    1364    1414    1464    1514    1564
1   5   1346    &lt;1225   1225    1275    1325    1375    1425    1475    1525    1575
2   5   1360    &lt;1235   1235    1285    1335    1385    1435    1485    1535    1585
3   5   1372    &lt;1245   1245    1295    1345    1395    1445    1495    1545    1595
4   5   1390    &lt;1255   1255    1305    1355    1405    1455    1505    1555    1605
1   6   1403    &lt;1266   1266    1316    1366    1416    1466    1516    1566    1616
2   6   1416    &lt;1276   1276    1326    1376    1426    1476    1526    1576    1626
3   6   1425    &lt;1285   1285    1335    1385    1435    1485    1535    1585    1635
4   6   1426    &lt;1291   1291    1341    1391    1441    1491    1541    1591    1641  
</code></pre>

<p>I want to be able to identify a year, then a quarter, and then according to a pupil's score, return the corresponding standard nine figure in the top line.</p>

<p>What's the best way to do this? I've tried INDEX and MATCH functions without success.</p>
","<p>One strategy for a multiple lookup like this is to concatenate the indices together to form a unique index.  This unique index will let you get the correct row combining the year/quarter.</p>

<p>The second piece of this is using INDEX to return an entire row from your table of scores which can then be used to find the score in the table with MATCH.</p>

<p>Once you have the score column, you can return the nine from there. Using INDEX again.</p>

<p>The end result is an INDEX-MATCH-INDEX-MATCH.  It made more sense to me by splitting the formulas into different cells, but I combined them together below.</p>

<p>Here is what I started with.  I added the ID column that combines the year/quarter.</p>

<p><img src=""https://i.stack.imgur.com/1MCa1.png"" alt=""image of workup""></p>

<p>Formula in D3 = <code>=B3&amp;""-""&amp;C3</code>, copied down to the end.</p>

<p>Cells C17 and C18 are inputs.</p>

<p>Cell C19 = <code>=C17&amp;""-""&amp;C18</code></p>

<p>Cell C20 (Score) is an input.</p>

<p>Cell C21 is the messy one which combines the logic described above: <code>=INDEX(F2:N2,MATCH(C20,INDEX(F3:N14,MATCH(C19,D3:D14,0),),1))</code></p>

<p>Here is that formula expanded with color so you can see somewhat is going on:</p>

<p><img src=""https://i.stack.imgur.com/n1zPh.png"" alt=""showing formula with colors""></p>
"
"<p>I am looking to find an automated way to color lines on a chart in excel based on a value and/or a color from a cell not associated with the chart itself.  Color based on value being the ideal solution.</p>

<p>The data for the chart at the link below is in cells B2:F9 and the colors I want represented are on lines C1:F1.  Based on this image, I want the chart line representing rows C and E to be green and the chart line representing D and F to be red.  </p>

<p><img src=""https://i.stack.imgur.com/rBHYL.png"" alt=""enter image description here""></p>

<p>In order to color the pass/fail section I currently have conditional formatting setup but am able to change this for a more effective solution.  This needs to be scaled across a large number of reports so manual color changing is not a viable option.</p>

<p>Any assistance would be greatly appreciated.</p>
","<p>Here is a little bit of sample code that should point you in the right direction.  It changes the color of series based on values elsewhere in the spreadsheet.  Ideally, you can modify this to suit your needs.  I am trying to highlight the key step of iterating through the series and coloring them based on an external range.  There are other questions about selecting a chart and ranges.</p>

<p>I am using the values of the ""header"" cells (pass/fail) to choose the colors.  I think it can be difficult to get the <code>Interior</code> color of a cell formatted by conditional formatting (IIRC?).</p>

<pre><code>Sub ColorChartBasedOnOtherCells()

    'set up a range of colors that ""matches"" the series
    Dim rng_colors As Range
    Set rng_colors = Range(""C1:F1"")

    'get a reference to the chart... assume it is selected for now
    Dim cht As Chart
    Set cht = ActiveChart

    Dim ser As Series
    Dim int_index As Integer

    'iterate through series in order... assume this matches the column order
    int_index = 1
    For Each ser In cht.SeriesCollection

        'check the value of the ""reference-color"" cell and set series color
        If rng_colors(int_index) = ""pass"" Then
            ser.Format.Line.ForeColor.RGB = RGB(255, 0, 0)
        Else
            ser.Format.Line.ForeColor.RGB = RGB(0, 255, 0)
        End If

        int_index = int_index + 1
    Next ser
End Sub
</code></pre>

<h1>Before</h1>

<p><img src=""https://i.stack.imgur.com/lbEMM.png"" alt=""before chart""></p>

<h1>After</h1>

<p><img src=""https://i.stack.imgur.com/osbxG.png"" alt=""after with colors""></p>
"
"<p>Is there a more efficient way to do the below operation of adding three cell values in  a row to the corresponding cells above and then deleting the old row? Half the time the macro freezes; I am running it on about 12,000 lines (there are no dynamic formulas on the sheet).</p>

<pre><code>Application.ScreenUpdating = False

For a = Lcell To 2 Step -1
   If Cells(a, 23).Value = Cells(a - 1, 23).Value Then
       Cells(a, 16).Value = Cells(a, 16).Value + Cells(a - 1, 16).Value
       Cells(a, 17).Value = Cells(a, 17).Value + Cells(a - 1, 17).Value
       Cells(a, 18).Value = Cells(a, 18).Value + Cells(a - 1, 18).Value
       Cells(a - 1, 1).EntireRow.Delete
   End If
Next a

Application.ScreenUpdating = True
</code></pre>
","<p>One option when deleting cells is to use the UNION-DELETE pattern.  This saves the deletion step until after the logic is determined and does it all at once.  This technique allows deleting a Range that is being iterated through.  It also reduces operations which should improve increase speed.  I have not tested it for speed though.</p>

<p><strong>Edited code to delete last row based on comments</strong></p>

<pre><code>Dim rng_delete As Range

For A = Lcell To 2 Step -1
   If Cells(A, 23).Value = Cells(A - 1, 23).Value Then
       Cells(A - 1, 16).Value = Cells(A, 16).Value + Cells(A - 1, 16).Value
       Cells(A - 1, 17).Value = Cells(A, 17).Value + Cells(A - 1, 17).Value
       Cells(A - 1, 18).Value = Cells(A, 18).Value + Cells(A - 1, 18).Value

        'rng_delete starts empty which errors Union on first add
        If rng_delete Is Nothing Then
            Set rng_delete = Cells(A, 1).EntireRow
        Else
            Set rng_delete = Union(rng_delete, Cells(A, 1).EntireRow)
        End If
   End If
Next A

rng_delete.Delete
</code></pre>
"
"<p>I have a Word document that is ""form-fillable"", i.e. it has content control objects in it such as rich text and date picker content controls. I am looking to extract the data from specific fields into Excel. For example, every form has the project title, start date, and manager. I would like 1 row for that form with those three pieces of data. Eventually this will need to be done for a few hundred of these forms every few months, but for now I'd like to just start with one.</p>

<p>I envision having a button on the Excel sheet that will run VBA code to pull the data from the Word document, and populate the proper cells in the sheet. With the filepath for the Word doc being specified by the user.</p>

<p>I am new to VBA. How do I point my code at the right file, and then again at the specific field I need? Do I give the fields titles in the Word doc?</p>

<p>This is in MS Office '13</p>
","<p>Your application is going to have a large number of specific details which are difficult to address without the specifics.  To get started, here is some very simple code to get the Date from a drop-down in Excel from Word.</p>

<p>Note to work with Word, you need to create a reference to ""Microsoft Word 15.0 Object Library"" on the Excel side.  Tools -> References in the VBA Editor.</p>

<p><img src=""https://i.stack.imgur.com/zEKHX.png"" alt=""reference addition""></p>

<p>When working across applications, it can help to write the VBA in Word and then move it over to Excel once you have the properties you want.</p>

<p>This VBA for the Excel side of the equation:</p>

<pre><code>Sub GetDataFromWordFile()

    Dim wrd As Word.Application
    Dim file As Word.Document


    Set wrd = New Word.Application
    Set file = wrd.Documents.Open(""test.docx"")

    Range(""A1"") = file.ContentControls(1).Range.Text

    file.Close
    wrd.Quit

End Sub
</code></pre>

<p>My Word file includes a single ContentControl.  Not sure how you address the ones you want (trial and error?).</p>

<p><img src=""https://i.stack.imgur.com/PPxAc.png"" alt=""Word file""></p>

<p>The Excel side drops the date in the right place.</p>

<p><img src=""https://i.stack.imgur.com/LpyAO.png"" alt=""Excel side""></p>
"
"<p>I have an excel sheet which is a log containing the time that a message has been sent and the time that the corresponding acknowledgment for that message was received. It also contains the time between the sent-time and acknowledgment-time. It looks like:</p>

<pre><code>msg_id    Sent-time                Acknowledgment-time        duration
1          2015-04-07 10:00:14      2015-04-07 10:00:15        00:00:01
2          2015-04-07 10:00:14      2015-04-07 10:00:16        00:00:02
3          2015-04-07 10:00:15      2015-04-07 10:00:15        00:00:00
4          2015-04-07 10:00:15      2015-04-07 10:00:18        00:00:03
6          2015-04-07 10:00:15      2015-04-07 10:00:19        00:00:04
... etc ...
</code></pre>

<p>I want to create a graph that gives insight into how the time between sending messages and receiving acknowledgments for those messages changes over-time. I wanted to make a scatter graph with on the x-axis the sent-times (continuous) and on the y-axis the duration-time. Where the duration of each message is a dot in the scatter plot.</p>

<p>However I just can't get the graph right in excel 2011. What graph should I use for this? I selected the sent-times column and the duration column and then click: graph->scatter but it gives me one dot with strange values on the y-axis. I formatted my sent-time column as time: ""07/04/2015  10:00:11"" and the duration as time: 10:00:11. I find nearly no settings for choosing what to place on which axis. </p>

<p>I would appreciate it if someone could show me how to do this. Tips on better ways to analyse what I want are also welcome.</p>
","<p>A simple XY scatter should be good for this.  I am able to get a decent looking chart with your subset of data.</p>

<p>A couple of comments:</p>

<ul>
<li>I inserted a simple XY scatter with points only.</li>
<li>Be sure that you are formatting the dates as dates in Excel.  This helps the chart interpret the data correctly.</li>
<li>The duration can also be a time (as below) or can be a number.  If you are doing subtraction on the dates, your result will be a date itself.  Bear in mind that dates have units of days so your seconds will be a small decimal in there.  Formatting as a time allows the chart to render those small amounts correctly.</li>
</ul>

<p><img src=""https://i.stack.imgur.com/rWvEQ.png"" alt=""image of chart config""></p>

<p>If the chart looks worse with more data, let me know.  As of now it looks like you just need to wrangle the formats correctly so Excel is working with instead of against you.</p>
"
"<p>Let's say I have a chart in Excel where the x-axis has months in the last one year and y-axis has sales in either dollars or euros.
Is there a way using which we can have the y-axis labels contain the corresponding currency symbol ($ or €) depending upon how the sales values have been indicated in the data?</p>
","<p><strong>Edit (changing labels)</strong>
Axis labels pick up their formatting automatically from the underlying data by default.  You can rely on this and simply change the formatting of the data and let it propagate.  Alternatively, you can change the ""Number"" formatting on the axis label and force a given format (symbol) regardless of the underlying data.</p>

<p><strong>Automatic (set on the data)</strong>  If you want to go back to automatic after making manual changes, check the box in the Number section called ""Linked to source"".
<img src=""https://i.stack.imgur.com/INWHY.png"" alt=""automatic label formatting""></p>

<p><strong>Override</strong> (note that the y-data is euros but the axis label is dollar as set in the formatting menu)
<img src=""https://i.stack.imgur.com/MVNCV.png"" alt=""forced label formatting""></p>

<p><strong>Original (changing axis titles)</strong></p>

<p>Axis titles can be set up using formulas.  It is not entirely obvious, but if you select the axis label, you can type a formula in the formula bar.  The easiest one is to set the formula equal to a cell where you do the logic and generate text with the $ or euro symbol.</p>

<p>Note in the example below I am generating the label based on the symbol in cell E2.  You could generate the text based on the data or whatever method you want.  The formula in the formula bar applies to the y-axis label.</p>

<p>The formula in cell E3 is <code>=""SALES "" &amp; E2</code>.</p>

<p><strong>dollar example</strong>
<img src=""https://i.stack.imgur.com/LMhpB.png"" alt=""axis label example""></p>

<p><strong>euro example</strong>
<img src=""https://i.stack.imgur.com/EeTUo.png"" alt=""axis with label changed""></p>
"
"<p>I want to get a new range by doing the subtract of two other existing ranges.
Let's say I have : <code>Set rng1=Range(""A1"")</code> and <code>Set rng2=Range(""A1:A5"")</code>
I want to calculate a new range : rng3 = rng2 - rng1.
I've tried : <code>Set rng3 = minus(rng2, rng1)</code> but it seems it's not possible.</p>
","<p>Here is one approach with a UDF.  It may not be particularly fast on large ranges since it iterates cell by cell.  I suspect it will handle most cases though.</p>

<pre><code>Public Function DisUnion(keep As Range, remove As Range) As Range

    Dim rng_output As Range

    Dim cell As Range
    For Each cell In keep

        'check if given cell is in range to remove
        If Intersect(cell, remove) Is Nothing Then

            'this builds the output and handles first case
            If rng_output Is Nothing Then
                Set rng_output = cell
            Else
                Set rng_output = Union(rng_output, cell)
            End If
        End If
    Next cell

    Set DisUnion = rng_output

End Function
</code></pre>

<h1>Usage</h1>

<p>The result of the cell below is 33 which is correct.  It updates to changes to cells as expected.</p>

<p><img src=""https://i.stack.imgur.com/93KxA.png"" alt=""enter image description here""></p>
"
"<p>I'm trying to copy masses of information from one spreadsheet to another to make it easier to print out on one piece of paper. All the data is set out in sequence and in columns and they need to be printed as such. </p>

<p>I'm trying to create a userform to speed this up by copying different column ranges and pasting them in to another spreadsheet in the exact same format but in columns of 50 cells and a maximum of 4 columns per sheet of paper.</p>

<p>This is what I've got so far, but it only copies the first cell:</p>

<pre><code>Private Sub UserForm_Click()


    UserForm1.RefEdit1.Text = Selection.Address


End Sub
Private Sub CommandButton1_Click()

    Dim addr As String, rng
    Dim tgtWb As Workbook
    Dim tgtWs As Worksheet
    Dim icol As Long
    Dim irow As Long


    Set tgtWb = ThisWorkbook
    Set tgtWs = tgtWb.Sheets(""Sheet1"")

    addr = RefEdit1.Value
    Set rng = Range(addr)


    icol = tgtWs.Cells(Rows.Count, 1) _
    .End(xlUp).Offset(0, 0).Column



    tgtWs.Cells(1, icol).Value = rng.Value


End Sub
</code></pre>

<p>Any help would be greatly appreciated.</p>
","<p>Your approach for outputting the data is only referencing a single cell.  You use <code>.Cells(1,icol)</code> which will only reference a single cell (in row 1, and a single column).</p>

<p>In order to output the data to a larger range, you need to reference a larger range.  The easiest way to do this is probably via <code>Resize()</code> using the size of the RefEdit range.</p>

<p>I believe this will work for you.  I changed the last line to include a call to <code>Resize</code>.</p>

<pre><code>Private Sub CommandButton1_Click()

    Dim addr As String, rng
    Dim tgtWb As Workbook
    Dim tgtWs As Worksheet
    Dim icol As Long
    Dim irow As Long


    Set tgtWb = ThisWorkbook
    Set tgtWs = tgtWb.Sheets(""Sheet1"")

    addr = RefEdit1.Value
    Set rng = Range(addr)


    icol = tgtWs.Cells(Rows.Count, 1) _
    .End(xlUp).Offset(0, 0).Column



    tgtWs.Cells(1, icol).Resize(rng.Rows.Count, rng.Columns.Count).Value = rng.Value


End Sub
</code></pre>

<p><strong>Edit:</strong> I went ahead and created a dummy example to test this out:</p>

<p><img src=""https://i.stack.imgur.com/DuZcM.png"" alt=""workbooks""></p>

<p>Click the button and it pastes</p>

<p><img src=""https://i.stack.imgur.com/lYRjh.png"" alt=""click""></p>
"
"<p>I an writing a UDF that needs to accept both Arrays and Ranges.</p>

<p>Usually declaring parameter as variant would work but a Range is an object so this no longer applies. That being said bellow I pasted code that only works when passing an array.<br>
Here is theorethical example, based on <code>SUM</code>:</p>

<pre><code>Function TSUM(numbers() As Variant) As Variant
    Dim i As Integer
    For i = 1 To UBound(numbers, 1)
        TSUM = TSUM + numbers(i)
    Next i
End Function
</code></pre>

<blockquote>
  <p>=TSUM({1,1})   Returns 2<br>
  =TSUM(A1:B1)   Returns #VALUE!</p>
</blockquote>

<p>So how can I fix above example to accept Ranges as well?</p>
","<p>If you are content to sum the array/range item by item, I would just change to using a For Each loop that works well for either Ranges or Arrays.</p>

<p>Here is that version</p>

<pre><code>Public Function TSUM(numbers As Variant) As Variant
    Dim i As Variant

    For Each i In numbers
        TSUM = TSUM + i
    Next i
End Function
</code></pre>

<p>If you generally want to work a function  based on the type of the argument, you can use <code>TypeName()</code> and switching logic.  Here is you function with that approach.  I called it TSUM2 for uniqueness.</p>

<pre><code>Public Function TSUM2(numbers As Variant) As Variant
    Dim i As Integer

    If TypeName(numbers) = ""Range"" Then
        TSUM2 = Application.WorksheetFunction.Sum(numbers)
    Else
        For i = 1 To UBound(numbers, 1)
            TSUM2 = TSUM2 + numbers(i)
        Next i
    End If
End Function
</code></pre>

<p>Note in both examples, I removed the parentheses from the numbers parameters (was <code>numbers() as Variant</code> before).  This allows it to accept Range inputs.</p>

<p>If you take the second approach, be sure to debug and verify the TypeNames that could come through.</p>
"
"<p>I wish to calculate the difference between two times multiplied by a value in another column. My columns are like this:</p>

<pre><code>       Column A                Column B             Column C
1    09:00 - 21:00                 2                    
</code></pre>

<p>I want my Column C to return <code>24</code>, since the time difference in Column A is 12 hours, and the multiplier in Column B is <code>2</code>. </p>
","<p>Here is another approach which uses <code>TIMEVALUE()</code> in case your formatting around the hyphen includes whitespace.</p>

<pre><code>=(TIMEVALUE(RIGHT(A1,LEN(A1)-FIND(""-"",A1)))-TIMEVALUE(LEFT(A1,FIND(""-"",A1)-1)))*24*B1
</code></pre>

<p>As stated in the comment up above, you will do better to have these in separate columns, but these formulas work nonetheless.</p>

<p>If you want to subtract times that are split across midnight (00:00), you can force clock arithmetic using the <code>MOD(XXX, 24)</code> formula.  This will prevent negatives.  It also means that the difference can never be greater than 24 (before multiplying by column B).</p>

<pre><code>=MOD((TIMEVALUE(RIGHT(A1,LEN(A1)-FIND(""-"",A1)))-TIMEVALUE(LEFT(A1,FIND(""-"",A1)-1)))*24,24)*B1
</code></pre>
"
"<p>I have a range</p>

<pre><code>Set rng = Range(""B5:H20"")
</code></pre>

<p>I want to create a subrange that contains all cells except for those on the first row of <code>rng</code>. What is a good way to do this?</p>

<pre><code>Set subRng = 'Range(""B6:H20"")
</code></pre>
","<p>Another versatile approach to this is the <code>Offset</code> and <code>Intersect</code> pattern.  It has the advantage over <code>Resize</code> of working the same regardless of how you do the shift (could move 1 column or row w/o rethinking the <code>Resize</code> part).</p>

<p>It also technically works for discontinuous ranges although a use case for that is rare at best.</p>

<pre><code>Set subrng = Intersect(rng.Offset(1), rng)
</code></pre>
"
"<p>What I want to achieve is something like that: </p>

<ol>
<li>Check <strong>IF</strong> value of cell <strong>A1 exist in array</strong>.</li>
<li>If exist get the <strong>""Defult"" value</strong> of the <strong>Column</strong>, if not exist the ""Not in the list"" .</li>
</ol>

<p>I tried HLOOKUP and VLOOKUP but are limited to a single Row / Column at a time :(</p>

<p><a href=""http://postimg.org/image/4kvzo7wpd/"" rel=""nofollow"">Look image at this link (i cant post images :/)</a></p>
","<p>You question is very similar to a thread found at this link: <a href=""http://www.mrexcel.com/forum/excel-questions/673515-finding-value-multiple-column-array-returning-column-header-excel-2003-a.html"" rel=""nofollow noreferrer"">http://www.mrexcel.com/forum/excel-questions/673515-finding-value-multiple-column-array-returning-column-header-excel-2003-a.html</a></p>

<p>Regarding your specific version of this problem, here is a formula that will work.  Note that the formula in <code>B1</code> is an array formula and must be entered with CTRL+SHIFT+ENTER.</p>

<p>The idea for the formula is this:</p>

<ol>
<li>Iterate through the array and look for a match to the cell in A1.</li>
<li>If there is a match, log the column of that match (in an array since this is an array formula). This is the logic using <code>COLUMN</code>.</li>
<li>Once all the cells in the array are checked, pick the largest column value returned using <code>MAX</code>.</li>
<li>Now with the correct column, return the column header using <code>INDEX</code>.</li>
</ol>

<p>Because of #3, if there are duplicates, you will only get the one from the largest column.</p>

<pre><code>=INDEX($E$1:$G$1,MAX(IF($E$3:$G$6=A1,COLUMN($E$3:$G$6)-COLUMN($E$1)+1)))
(this is an array formula that must be entered with CTRL+SHIFT+ENTER)
</code></pre>

<p>That formula can be safely copied down in column B.</p>

<p><img src=""https://i.stack.imgur.com/WaCjN.png"" alt=""formula and layout""></p>

<p>Same image with cells colored.</p>

<p><img src=""https://i.stack.imgur.com/nKM51.png"" alt=""formula and layout colored""></p>

<p><strong>If you want this formula to work when there are not matches, it needs to be modified slightly.</strong>  You need to split out the array formula from the <code>INDEX</code> call.  The problem is that with no matches, <code>MAX</code> returns 0.  Normally <code>INDEX</code> will balk at a 0 except that in an array formula it appears to return the first value.  In that case, two formulas are needed, the first is an array formula, the second is a normal one.</p>

<pre><code>[B1, array formula]  =MAX(IF($E$3:$G$6=A1,COLUMN($E$3:$G$6)-COLUMN($E$1)+1))
[C1, normal]  =INDEX($E$1:$G$1,B1)
</code></pre>

<p>With these, you will get <code>#VALUE!</code> on a missing search.</p>
"
"<p>I have an excel workbook with multiple sheets that aggregate costs and revenues of different technological components (set up in different sheets) in a system. </p>

<p>I want to have a main worksheet, where users can change a small selection of important variables from the technology sheets. I also want those important variables to be defined and editable on the technology sheets.</p>

<p>I've been using named ranges to manage variables, but I'm not sure how to link two cells on different sheets to one variable. For example, I want to name a variable ""oilprice"" that is referenced in different formulas. I want to be able to change the variable ""oilprice"" from the main worksheet and the electricity technology sheet in my workbook.</p>

<p>Similarly, I want to be able to check a box on both sheets for ""Turn on Electricity"" and have the checkbox on the other sheet change as well.</p>

<p>I've been looking around on google and stackoverflow but can't find an answer. Thanks!</p>
","<h2>Named range, option 1: ""override"" style formula</h2>

<p>With named ranges, you are not able to update the value from multiple cells.  You could use logic in a formula to look at a ""override"" cell and pass that value to the actual named range.  This works if the number of overrides is small.  That style of formula looks like:</p>

<pre><code>=IF(ISBLANK(oilprice2), oilprice1, oilprice2)
</code></pre>

<p>Where <code>oilprice1</code> and <code>oilprice2</code> are the cells that hold possible values.  Note that there is an implied order in these which can get confusing after a while.  That is, if <code>oilprice2</code> has a value, it will not change <code>oilprice1</code> nor will <code>oilprice1</code> be considered.</p>

<p><img src=""https://i.stack.imgur.com/2WlFg.png"" alt=""named range override""></p>

<h2>Named range, option 2: scroll bar or spin control</h2>

<p>Another option similar to the checkboxes below, is to use a spin control or scrollbar control to update the values.  Those work across multiple sheets.</p>

<h2>Checkboxes across sheets</h2>

<p>For the checkboxes, this is handled by the <code>Cell Link</code>.  You can set as many checkboxes as you want to control a single cell's value.</p>

<p>Here is an example with two checkboxes sharing the same <code>Cell Link = $C$2</code>.  They both change when one is clicked.</p>

<p><img src=""https://i.stack.imgur.com/z8wAZ.png"" alt=""enter image description here""></p>
"
"<p>I'm new here and I apologize in advance in my question isn't clear... I couldn't find the answer after some research...</p>

<p>I'm looking for a way to go through all the cells of column ""R"" and if one cell on a given row contains ""Y"", then the values of cells at columns ""W"",""X"" and ""Y"" will take the same value as the columns ""F"",""G"" and ""H"" (always at the same row).</p>

<p>The goal is to have a button that will execute the VBA code in order to do this (instead of having to copy/paste all the time).</p>

<p>Thank you very much in advance for your help. </p>

<p>A poor ignorant but motivated VBA beginner...</p>
","<p>Here is VBA which will do what you want.  It takes advantage of the replacement operation being cells that are next to each other by using <code>Resize</code>.</p>

<p>Highlights</p>

<ol>
<li>Iterates through each cell in column R.  I used Intersect with the UsedRange on the sheet so that it only goes through cells that have values in them (instead of all the way to the end).</li>
<li>Checks for ""Y"" using <code>InStr</code>.</li>
<li>Replaces the contents of columns WXY with values from columns FGH. Since they are contiguous, I did it all in one step with <code>Resize</code>.</li>
</ol>

<p>Code:</p>

<pre><code>Sub ReplaceValuesBasedOnColumn()

    Dim rng_search As Range
    Dim rng_cell As Range

    'start on column R, assume correct sheet is open
    Set rng_search = Range(""R:R"")
    For Each rng_cell In Intersect(rng_search, rng_search.Parent.UsedRange)

        'search for a Y, case sensitive
        If InStr(rng_cell, ""Y"") &gt; 0 Then

            'update the columns as desired
            'takes advantage of cells being next to each other
            Range(""W"" &amp; rng_cell.Row).Resize(1, 3).Value = Range(""F"" &amp; rng_cell.Row).Resize(1, 3).Value

        End If
    Next rng_cell
End Sub
</code></pre>

<p>I tested it on my end, and it works, producing the following after running:</p>

<p><img src=""https://i.stack.imgur.com/9sII5.png"" alt=""picture after running""></p>
"
"<p>I have a table in Sheet: TeamDetails with employee details as following
<strong>Name Domain ect.. etc.. and Status</strong></p>

<p>Status column contains Active OR In Active</p>

<p>In my Dashboard sheet, all the employees of a certain domain are displayed when you select the domain name from a Data Validation list(Cell: F32).</p>

<p>Current <strong>Array</strong> Formula:</p>

<p><code>{=IFERROR(INDEX(TeamDetails[Name],</code>
   <code>SMALL(IF(TeamDetails[Domain]=Dashboard!$F$32,ROW(TeamDetails[Domain])-ROW(TeamDetails!$D$4)+1),</code>
    <code>ROWS(TeamDetails!$D$4:TeamDetails!$D4))</code>
    <code>),""No Team"")}</code></p>

<p><strong>My Question:</strong> The above formula displays all employees including those whose status are ""In Active"" too which is something I want to avoid. 
Please Help! (No VBA please)
Excel Knowledge: Beginner</p>

<p>Thank You!</p>
","<p>You should be able to throw in a second condition and multiply it into the first one.  I assume the second condition will be of the form <code>TeamDetails[Status] = ""Active""</code>.  Combining that with the first condition gives:</p>

<pre><code>=IFERROR(INDEX(TeamDetails[Name], SMALL(IF((TeamDetails[Domain]=Dashboard!$F$32)*(TeamDetails[Status]=""Active""),ROW(TeamDetails[Domain])-ROW(TeamDetails!$D$4)+1),  ROWS(TeamDetails!$D$4:TeamDetails!$D4))  ),""No Team"")
</code></pre>
"
"<p>If in cell A1 I have three names and in cell range B1:E1 I have a list of names, how can I count how many of the names in B1:E1 appear in cell A1? </p>

<p>For example:</p>

<p>A1: Peter Paul Laura
B1: Peter
C1: James
D1: Laura
E1: Paul</p>

<p>The formula should return 3, since 3/4 names on the list are in cell A1. 
If possible, the formula should be for an infinite amount of names that could occur in cell A1.</p>

<p>Thanks in advance for any help!</p>

<p>Kind regards,
Raoul</p>
","<p>Here is one approach if:</p>

<ul>
<li>Names only appear once</li>
<li>Names are not a subset of each other (e.g. code below will count Jonathon if ""Jon"" is listed).  You could add a space to the end of the names in B1:end to prevent this.</li>
</ul>

<p>It will skip blank cells so that you can make it look at as many cells as you want.  This is an <strong>array formula</strong> that needs to be entered with CTRL+SHIFT+ENTER.  I extended it through <code>G1</code> even though data stops in <code>E1</code> to show the blank handling.</p>

<pre><code>=COUNT(IF(ISBLANK(B1:G1),FALSE,  FIND(B1:G1,A1)))
</code></pre>

<p>This code works by counting the number of times that <code>FIND</code> returns a number.  <code>COUNT</code> will skip errors which is what is returned if nothing is found.  <code>FIND</code> works by searching for one string inside another one.</p>
"
"<p>Is it possible to position a shape by its center point?</p>

<p>I'm trying to overlay shapes onto a picture of a map in Excel and adjust the size of the shapes based on the value in a cell.</p>

<p>I have the sizing portion figured out, but every time my shapes size increases it slowly starts to move to the right and bottom due to the positioning of its left and top. I would like it if the positioning of my circles would not moved once the data gets refreshed. I only want the size of the shape to be altered.</p>

<p>Any thoughts?</p>

<p><img src=""https://i.stack.imgur.com/O9gLJ.png"" alt=""Small Shape""></p>

<p><img src=""https://i.stack.imgur.com/aMFx5.png"" alt=""Bigger Shape""></p>
","<p>If you know the X/Y (really Left/Top, since {0,0} is upper left) where you want to put it, it is as simple as subtracting off half the size of the shape to get the center to be there.</p>

<p>Here is some simple code which puts the center of a circle at the corner of cell E8.  I assume you have some way of selecting the shape based on your question.</p>

<pre><code>Sub PositionByCenter()

    Dim dbl_x As Double
    Dim dbl_y As Double

    'select a cell just to put it somewhere
    dbl_x = Range(""E8"").Left
    dbl_y = Range(""E8"").Top

    'grab a reference to a shape
    Dim shp As Shape
    Set shp = Selection.ShapeRange.Item(1)

    'position by the center
    shp.Top = dbl_y - shp.Height / 2
    shp.Left = dbl_x - shp.Width / 2

End Sub
</code></pre>

<p>Here is what you get after running that with a circle selected.</p>

<p><img src=""https://i.stack.imgur.com/uDxhm.png"" alt=""circle is now at desired spot""></p>
"
"<p>I need help with the following :</p>

<p>I have created a table on Sheet1 from A:E with column Titles from A1:E1 The titles are names , under each name there are numbers for example Carlos is the header title Located on A1 and under him there are numbers like 2 on cell A2 3 on cell A4 10 on cell A5</p>

<p>On  Sheet2 I have the names for example from G4:G8 and I want to know the sum of the numbers depending on the name for example next to Carlos on H4 I should be getting 15 which is the sum of the values under his name on the  Sheet1</p>

<p>I have tried vlookup - Index  - HLOOKUP  - conditional combining vlookp or Index but nothing works : (</p>
","<p>I assume by ""Table"" you mean an actual named Table.  In that case you can take advantage of this and use a formula like:</p>

<pre><code>=SUM(INDEX(Table1, , MATCH(G4,Table1[#Headers],0)))
</code></pre>

<p>In my case, my table is named Table1 since it is a default name.</p>

<p>This formula works by searching through the <code>Table1[#Headers]</code> for the name in cell <code>G4</code>.  It then use that column index to return an entire column using <code>INDEX</code>.  Note that there is an empty <code>rownum</code> parameter to <code>INDEX</code> so it returns the whole column.  From there it takes the <code>SUM</code> of this column.</p>
"
"<p><strong>The Problem:</strong></p>

<p>I have a workbook with 3 sheets, each entitled ""HeatNumbers"", ""HeatSheetTemplate"", and ""Heat vs Order"".  The Heat vs Order sheet has a number of new rows of data added to it daily, so the number of rows is always changing.  Here is a picture of the column headings and some data:</p>

<p><img src=""https://i.stack.imgur.com/nkyGJ.jpg"" alt=""enter image description here""></p>

<p><strong>What I am looking for:</strong></p>

<p>On the HeatNumbers sheet, I have a button that executes some VBA code.  Here is a pic of that sheet:</p>

<p><img src=""https://i.stack.imgur.com/9ur7t.jpg"" alt=""enter image description here""></p>

<p>Here is what I need to happen:  A user will enter data into the black box in column J on a number of rows.  Each line could contain an FO#.  When the button is clicked, I need to filter all of the data on the Heat vs Order sheet above by any FO# in that black box region, copy that resultset over to the HeatNumbers sheet, beginning in row 2 col A, and then remove the filter from the Heat vs Order sheet.</p>

<p><strong>What I have tried:</strong></p>

<p>The only way I have been able to achieve this is by having the user manually filter the data on the Heat vs. Order sheet and copy and pasting the result to the HeatNumbers tab.  This is cumbersome and prone to error, unfortunately.</p>

<p>Here is the code that was generated using the macro recorder:</p>

<pre><code>Sub Filter_FO()
'
' Filter_FO Macro
'
    Range(""A1:H20000"").AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:= Sheets(""HeatNumbers"").Range(""J4:J22""), Unique:=False
    ActiveWindow.SmallScroll Down:=-15
    Range(""A4:H300"").Select
    Selection.Copy
    Sheets(""HeatNumbers"").Select
    ActiveWindow.SmallScroll Down:=-15
    Range(""A2:H300"").Select
    ActiveSheet.Paste
End Sub
</code></pre>
","<p>In order to get the filter to work correctly, you need to use a <code>CriteriaRange</code> that only includes cells with values in them.  The easiest way to do this is using the <code>.End(xlDown)</code> function.  That works functions in the same way as CTRL+DOWN arrow and will select the last cell in that column of data so long as there are no blanks in between.</p>

<p>The second piece is to possibly improve the range of the data being filtered.  Right now you are selecting a large area and hoping it includes the data you want.  If your code works now, you can leave it.  Improvements include:</p>

<ul>
<li>Using just the column letters so that the whole columns are filtered.  This works if the headers stay in row 1.  This is a little slow though.</li>
<li>If the data is a large block, you can use <code>.End(xlUp)</code> to find the last row and use that.  This is included below.</li>
</ul>

<p>And then the final piece is selecting the right range of data to copy.  I just took the data range and selected visible cells using <code>.SpecialCells(xlCellTypeVisible)</code>.</p>

<p>In order for the copy to work cleanly, I clear out columns <code>A:H</code> on <code>HeatNumbers</code> to prevent any old data from sitting around.  When I paste the data back over, I include the headers.  This is the only real difference from your macro.</p>

<pre><code>Sub FilterDataAndClearAndCopy()

    'get references to sheets
    Dim sht_data As Worksheet
    Dim sht_filter As Worksheet

    Set sht_data = Sheets(""Heat vs Order"")
    Set sht_filter = Sheets(""HeatNumbers"")

    'get the block of data to set the filter over
    Dim rng_data As Range
    Dim int_lastRow As Integer

    int_lastRow = sht_data.Range(""A"" &amp; sht_data.Rows.Count).End(xlUp).Row
    Set rng_data = sht_data.Range(""A1:H"" &amp; int_lastRow)

    'get the criteria range... assumes at least one entry below J3
    Dim rng_filter As Range
    Set rng_filter = Range(sht_filter.Range(""J3""), sht_filter.Range(""J3"").End(xlDown))

    'filter the data
    rng_data.AdvancedFilter Action:=xlFilterInPlace, CriteriaRange:=rng_filter, Unique:=False

    'clear out data
    sht_filter.Range(""A:H"").Clear

    'select data to copy
    rng_data.SpecialCells(xlCellTypeVisible).Copy

    'paste that data to filter sheet
    sht_filter.Range(""A1"").PasteSpecial xlPasteAll

    'remove the filter
    sht_data.ShowAllData

End Sub
</code></pre>
"
"<p>I am looking for the best way to deploy Excel Macros to users. My goal is to make it super easy for end users to install and promote use by adding to the addin toolbar. I know that there are a number of help articles on this topic but couldn't find anything that covered this exact issue. Can you please help and excuse me if this is a noobie question. Please see below for replication steps for my issue. </p>

<ol>
<li>I have added the code below as a worksheet event on ""This Worksheet"" of an excel macro file</li>
<li>I add the main code to a module that it references</li>
<li>I save this as an .XLAM in the addin roaming folder</li>
<li>I enable this as an addin in EXCEL 2013</li>
<li>After I install it adds the button to an add in tab</li>
<li>It works until I close Excel in which case the button disappears</li>
<li>It is still under active add ins but not on the toolbar</li>
</ol>

<p>The code:</p>

<pre><code>Option Explicit

Dim cControl As CommandBarButton

Private Sub Workbook_AddinInstall()

On Error Resume Next 'Just in case

'Delete any existing menu item that may have been left.
Application.CommandBars(""Worksheet Menu Bar"").Controls(""Super Code"").Delete

'Add the new menu item and Set a CommandBarButton Variable to it
Set cControl = Application.CommandBars(""Worksheet Menu Bar"").Controls.Add

'Work with the Variable
    With cControl
        .Caption = ""Convert Survey Reporter Tables""
        .Style = msoButtonCaption
        .OnAction = ""CMB_General_Table_Formatting""
        'Macro stored in a Standard Module
    End With

On Error GoTo 0
End Sub

Private Sub Workbook_AddinUninstall()
    On Error Resume Next 'In case it has already gone.

   Application.CommandBars(""Worksheet Menu Bar"").Controls(""Convert Survey Reporter Tables"").Delete
  On Error GoTo 0

End Sub
</code></pre>
","<p>If you want an alternative to using VBA to build the interface, I have previously deployed Excel add-ins (XLAM files) using some variety of Ribbon XML.  This allows for very fine-grained control of the resulting interface and does not require you to work in VBA to build the interface.  For most applications, I have found it is much easier to build the Ribbon components outside of VBA and then wire up the callbacks in VBA.</p>

<p>For the end user, I think this approach also delivers a better looking add-in since the resulting interface has its own Ribbon tab (or you can add to any of the existing ones) instead of being in the Add-ins Ribbon tab.</p>

<p>If you want to pursue this route, I highly recommend using the <a href=""http://www.andypope.info/vba/ribboneditor.htm"" rel=""nofollow"">Ribbon X Visual Designer</a> to build the interface and set callbacks.  I have used it to build an add-in that had more than 50+ features accessible by buttons and other Ribbon form controls.  It was fairly painless once I got going.</p>
"
"<p>I'd like to sort a time series of exam performance by one of three categories:</p>

<p><img src=""https://i.stack.imgur.com/oJ4kP.png"" alt=""GRE Score Performance""></p>

<p>Ideally, a function would sort the scores by ""difficulty"" while still preserving chronological order. I'd like to do this without filters etc. Something like <a href=""http://www.techrepublic.com/blog/microsoft-office/two-ways-to-build-dynamic-charts-in-excel/"" rel=""nofollow noreferrer"">this</a> is very close, but not quite there. Do I need to use dynamic ranges? Or can I just define data ranges in the table dialog with VLOOKUP or INDEX/MATCH?</p>

<p>I'm thinking a bar graph would be the easiest way to illustrate the data, but I'm open to suggestions. New scores are added every day, with varying difficulties. </p>

<p><a href=""https://www.dropbox.com/s/714vmlsiykx1id7/QBank%20Scores.xlsx?dl=0"" rel=""nofollow noreferrer"">Here</a> is the spreadsheet if anyone would like to look it over. </p>

<hr>

<p>EDIT:</p>

<p>The output visualization could be, for example, a clustered bar graph, but with only one label per category. The idea is that I'd like to preserve chronological order without necessarily having to mark it on the graph.</p>

<p><img src=""https://i.stack.imgur.com/uXtQG.png"" alt=""enter image description here""><img src=""https://i.stack.imgur.com/NBbis.png"" alt=""enter image description here""></p>

<p>Would there, for instance, be a quick-and easy and formula-driven way to put these 14 and 17 values for ""score"" all together under one label? I feel like 17 bar graphs clustered too closely would be hard to read.</p>

<p>I realize this is more of a formatting than a formula issue, but I appreciate input with regards to both.</p>
","<p>I would recommend you add a <code>Table</code> over the data in the workbook.  One for verbal and one for math.  The upside is that it will automatically grow with your data as you add new rows.  This is very helpful because charts and other things will automatically refer to the new data.  Add one with CTRL+T or Insert->Table on the Ribbon.</p>

<p>Once you have the Table, you can easily do the sorting bit by adding a two column sort onto the Table.  This menu is accessible by right clicking in the Table and doing Sort->Custom Sort.  Again, the Table is nice here because it will only sort the data within it (not the whole sheet) and will remember your settings.  This lets you add new data and simply do Data->Reapply to get it to sort again.  Your sort on Difficulty is going to be alphabetic unless you add a number at the front.  Here is the sorting step:</p>

<p><img src=""https://i.stack.imgur.com/R7UGh.png"" alt=""sorting with table""></p>

<p>With this done, you can create a quick chart based on that data.  For the ""implicit chronology"" you can simply plot score vs. difficulty for all of them since they are sorted.</p>

<p><img src=""https://i.stack.imgur.com/V2GDI.png"" alt=""chart with scores""></p>

<p>To get closer to that matrix style display, you can easily create a PivotTable based on this Table and let it do the organizing by date/difficulty.  Here is the result of that.  I am using <code>Average</code> as the aggregation function since it appears that no dates have more than 1 score.  If they did, it would be a better choice than <code>Sum</code>.</p>

<p><img src=""https://i.stack.imgur.com/uObND.png"" alt=""Pivot Table of data""></p>
"
"<p>So i am trying to dynamically insert data into an Excel table from other closed workbooks.</p>

<p><strong>i got everything working just fine, except one small annoying thing.</strong></p>

<p>i have a formula as follows:</p>

<blockquote>
  <p>='H:\dev...[some book name.xlsm]Main'!C1</p>
</blockquote>

<p>the formula above works fine. what i need is to insert this exact same formula into a table in the sheet for several rows.</p>

<p>it should look like that in one column:</p>

<blockquote>
  <p>='H:\dev...[some book name.xlsm]Main'!C1<br/>
  ='H:\dev...[some book name.xlsm]Main'!C1<br/>
  ='H:\dev...[some book name.xlsm]Main'!C1<br/></p>
</blockquote>

<p>what excel does, it automatically changes all the cell references to be incremental, like this:</p>

<blockquote>
  <p>='H:\dev...[some book name.xlsm]Main'!<strong>C1</strong><br/>
  ='H:\dev...[some book name.xlsm]Main'!<strong>C2</strong><br/>
  ='H:\dev...[some book name.xlsm]Main'!<strong>C3</strong><br/></p>
</blockquote>

<p>i insert the the formulas as a string into an array,  and then paste it into the table using this code:</p>

<pre><code>Set lstObj = Sheets(1).ListObjects(1)
Set rngLstObj = lstObj.Range
With rngLstObj.Offset(1, 0).Resize(rngLstObj.Rows.Count - 1,rngLstObj.Columns.Count)
    .Formula = RevList  
End With
</code></pre>

<p>in the code above, <code>RevList</code> is a 2 dimentional array.</p>

<p>i tried setting it to <code>.Formula</code>, <code>.Value</code>, in both cases excel changes the cell references to be incremental.</p>

<p>i tried disabling calculation</p>

<pre><code>ThisWorkbook.Sheets(1).EnableCalculation = False
</code></pre>

<p>still same.</p>

<p>how do i stop this behavior from VBA side?</p>
","<p>If you start with</p>

<pre><code>='H:\dev...[some book name.xlsm]Main'!$C$1
</code></pre>

<p>it will force the absolute reference wherever it is copied.</p>

<p>The added dollar signs prevent the range from changing.</p>
"
"<p>I have a data table which is sorted on descending order in column F.  I then need to copy the top 5 rows, but only data from Column A, B, D, and F (not the headers).  See pictures.</p>

<pre><code>Sub top5()

Sheets(""Sheet1"").Select

If (ActiveSheet.AutoFilterMode And ActiveSheet.FilterMode) Or ActiveSheet.FilterMode Then
ActiveSheet.ShowAllData
End If


ActiveSheet.Range(""$A$4:$T$321"").AutoFilter Field:=3, Criteria1:=""Dave""
ActiveWorkbook.Worksheets(""Sheet1"").AutoFilter.Sort.SortFields. _
    Clear
ActiveWorkbook.Worksheets(""Sheet1"").AutoFilter.Sort.SortFields.Add _
    Key:=Range(""F4:F321""), SortOn:=xlSortOnValues, Order:=xlDescending, _
    DataOption:=xlSortTextAsNumbers
With ActiveWorkbook.Worksheets(""Sheet1"").AutoFilter.Sort
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

' This copy-paste part does what its supposed to, but only for the specific 
' cells.  Its not generalised and I will have to repeat this operation
' several times for different people
Sheets(""Sheet1"").Select
Range(""A3:B15"").Select
Selection.Copy

Sheets(""Sheet2"").Select
Range(""A3"").Select
ActiveSheet.Paste

Sheets(""Sheet1"").Select
Range(""D3:D15"").Select
Application.CutCopyMode = False
Selection.Copy

Sheets(""Sheet2"").Select
Range(""C3"").Select
ActiveSheet.Paste

Sheets(""Sheet1"").Select
Range(""F3:F15"").Select
Application.CutCopyMode = False
Selection.Copy

Sheets(""Sheet2"").Select
Range(""D3"").Select
ActiveSheet.Paste
Application.CutCopyMode = False

End Sub
</code></pre>

<p>I thought about trying to adapt this snippet of code below using visible cells function, but I'm stuck and I can't find anything on the net which fits.</p>

<pre><code>' This selects all rows (plus 1, probably due to offset), I only want parts of from the top 5.
Sheets(""Sheet1"").Select
ActiveSheet.Range(""$A$4:$B$321"").Offset(1, 0).SpecialCells(xlCellTypeVisible).Select
Selection.Copy
Sheets(""Sheet2"").Select
Range(""A3"").Select
ActiveSheet.Paste

Sheets(""Sheet1"").Select
ActiveSheet.Range(""$D$4:$D$321"").Offset(1, 0).SpecialCells(xlCellTypeVisible).Select
Selection.Copy
Sheets(""Sheet2"").Select
Range(""C3"").Select
ActiveSheet.Paste
</code></pre>

<p>I hope my example makes sense and I really appreciate your help!</p>

<p><img src=""https://i.stack.imgur.com/pitTN.png"" alt=""Sample Excel table""></p>

<p>Note:  The heading names are only the same in the two tables to show that the data is the same.  The headers are NOT supposed to be copied.  In addition, there is an extra column/white space in the second table.  A solution should include this.</p>

<p><img src=""https://i.stack.imgur.com/XXCK4.png"" alt=""Data copied to new table""></p>
","<p>A quick way to do this is to use <code>Union</code> and <code>Intersect</code> to only copy the cells that you want.  If you are pasting values (or the data is not a formula to start), this works well.  Thinking about it, it builds a range of columns to keep using <code>Union</code> and then <code>Intersect</code> that with the first 5 rows of data with 2 header rows.  The result is a copy of only the data you want with formatting intact.</p>

<p><strong>Edit only process visible rows, grabbing the header, and then the first 5 below the header rows</strong></p>

<pre><code>Sub CopyTopFiveFromSpecificColumns()

    'set up the headers first to keep
    Dim rng_top5 As Range
    Set rng_top5 = Range(""3:4"").EntireRow

    Dim int_index As Integer
    'start below the headers and keep all the visible cells
    For Each cell In Intersect( _
        ActiveSheet.UsedRange.Offset(5), _
        Range(""A:A"").SpecialCells(xlCellTypeVisible))

        'add row to keepers
        Set rng_top5 = Union(rng_top5, cell.EntireRow)

        'track how many items have been stored
        int_index = int_index + 1
        If int_index &gt;= 5 Then
            Exit For
        End If
    Next cell

    'copy only certain columns of the keepers
    Intersect(rng_top5, _
        Union(Range(""A:A""), _
                Range(""B:B""), _
                Range(""D:D""), _
                Range(""F:F""))).Copy

    'using Sheet2 here, you can set to wherever, works if data is not formulas
    Range(""Sheet2!A1"").PasteSpecial xlPasteAll

    'if the data contains formulas, use this route
    'Range(""Sheet2!A1"").PasteSpecial xlPasteValues
    'Range(""Sheet2!A1"").PasteSpecial xlPasteFormats

End Sub
</code></pre>

<p>Here is the result I get from some dummy data set up in the same ranges as the picture above.</p>

<p><strong>Sheet1 with copied range visible</strong></p>

<p><img src=""https://i.stack.imgur.com/6KLmb.png"" alt=""Sheet1""></p>

<p><strong>Sheet2 with pasted data</strong></p>

<p><img src=""https://i.stack.imgur.com/ZfjiT.png"" alt=""Sheet2""></p>
"
"<p>I have a simple ""Stacked Line with Markers"" Chart Type with three columns of data; Month, Preventable Incidents and Non-Preventable Incidents. The chart looks at six months of data and charts the Preventable and Non-Preventable incidents. I have the months along the horizontal axis (Column A: A2:A7) with the Number of Collisions on the Vertical Axis. The Preventable Incident values are in Column B: B2:B7 and the Non-Preventable Incident values are in Column C: C2:C7.</p>

<p>The Preventable values data points on the chart correspond correctly to the Vertical Axis labels, but the Non-Preventable data points are skewed higher and do not correspond correctly to the Vertical Axis labels. I would greatly appreciate some help in understanding why this is the case and is there a way to have both data series plot correctly to the values in the Vertical Axis labels. </p>
","<p>Probably need to use the ""Line with Markers"" instead of ""Stacked Line"".  The Stacked Line will plot the sum of the series together so that you can see the additive effect of both.  This doesn't help if you want exact values for both series.</p>

<p><img src=""https://i.stack.imgur.com/Cc5le.png"" alt=""example charts""></p>
"
"<p>I am writing a macro to do the following:</p>

<p>Every time I open a workbook, pull data from a closed workbook on my computer and copy that data to a sheet titled ""Availability"" starting in cell A1.</p>

<p>Currently, all that happens is ""TRUE"" is put into cell A1 on the Availability sheet.</p>

<p>Please help.</p>

<pre><code>Sub OpenWorkbookToPullData()

    Dim sht As Worksheet
    Dim lastRow As Long
    lastRow = ActiveSheet.UsedRange.Rows.Count
    Set sht = ThisWorkbook.Worksheets(Sheet1.Name)
    Dim path As String
    path = ""C:\users\"" &amp; Environ$(""username"") &amp; _
    ""\desktop\RC Switch Project\Daily Automation _
    Availability Report.xlsx""

    Dim currentWb As Workbook
    Set currentWb = ThisWorkbook

    Dim openWb As Workbook
    Set openWb = Workbooks.Open(path)

    Dim openWs As Worksheet
    Set openWs = openWb.Sheets(""Automation Data"")

    currentWb.Sheets(""Availability"").Range(""A1"") _
    = openWs.Range(""A5:K"" &amp; LastRow).Select
    openWb.Close (False)

End Sub
</code></pre>
","<p>As @Greg mentioned, the <code>.Select</code> is not needed.  Once that is removed though, you will have a new problem where the two ranges are not the same size.  <code>Range(""A1"")</code> is only 1 cell while the other range will be at least 11.  Your current VBA will only overwrite the values in the Range called for, which is <code>A1</code> here.</p>

<p>To get around this there are two approaches which work well.</p>

<h1>Resize</h1>

<p><code>Resize</code> the left hand side so that it is the same size as the right hand side.</p>

<pre><code>Sub OpenWorkbookToPullData()

    Dim sht As Worksheet
    Dim lastRow As Long
    lastRow = ActiveSheet.UsedRange.Rows.Count
    Set sht = ThisWorkbook.Worksheets(Sheet1.Name)
    Dim path As String
    path = ""C:\users\"" &amp; Environ$(""username"") &amp; _
    ""\desktop\RC Switch Project\Daily Automation Availability Report.xlsx""

    Dim currentWb As Workbook
    Set currentWb = ThisWorkbook

    Dim openWb As Workbook
    Set openWb = Workbooks.Open(path)

    Dim openWs As Worksheet
    Set openWs = openWb.Sheets(""Automation Data"")

    Dim rng_data As Range
    Set rng_data = openWs.Range(""A5:K"" &amp; lastRow)

    currentWb.Sheets(""Availability"").Range(""A1"").Resize( _
        rng_data.Rows.Count, rng_data.Columns.Count).Value = rng_data.Value

    openWb.Close (False)

End Sub
</code></pre>

<h1>Copy/PasteSpecial</h1>

<p>Actually <code>Copy</code> and then <code>PasteSpecial</code>.</p>

<pre><code>Sub OpenWorkbookToPullData()

    Dim sht As Worksheet
    Dim lastRow As Long
    lastRow = ActiveSheet.UsedRange.Rows.Count
    Set sht = ThisWorkbook.Worksheets(Sheet1.Name)
    Dim path As String
    path = ""C:\users\"" &amp; Environ$(""username"") &amp; _
    ""\desktop\RC Switch Project\Daily Automation Availability Report.xlsx""

    Dim currentWb As Workbook
    Set currentWb = ThisWorkbook

    Dim openWb As Workbook
    Set openWb = Workbooks.Open(path)

    Dim openWs As Worksheet
    Set openWs = openWb.Sheets(""Automation Data"")

    Dim rng_data As Range
    Set rng_data = openWs.Range(""A5:K"" &amp; lastRow)

    rng_data.Copy
    currentWb.Sheets(""Availability"").Range(""A1"").PasteSpecial xlPasteValues

    openWb.Close (False)

End Sub
</code></pre>

<p>Since it looks like you are going for values anyways, I would use the <code>Copy/PasteSpecial</code> route for clarity in the code.</p>
"
"<p>I have a sheet calls ""Recap"" and I want to know how much line that I have in this sheet.I tried with this code:</p>

<pre><code>Function FindingLastRow(Mysheet As String) As Long

Dim sht As Worksheet
Dim LastRow As Long

Set sht = ThisWorkbook.Worksheets(Mysheet) 
LastRow = sht.Cells(sht.Rows.Count, ""A"").End(xlUp).Row
FindingLastRow = LastRow

End Function
</code></pre>

<p>......</p>

<p>in my macro i tried this:</p>

<p>....</p>

<pre><code>Dim lastR As Long
lastR=FindingLastRow(""Recap"")
msgBox lastR
</code></pre>

<p>.....</p>
","<p>The <code>UsedRange</code> on a Worksheet variable is very helpful here.  You really don't need a UDF to get the row count.</p>

<pre><code>LastRow = Worksheets(""Recap"").UsedRange.Rows.Count
</code></pre>

<p><strong>This method only works</strong> if your data starts in row 1 and the sheet does not have formatting outside of the data.  You could add in the starting row <code>+ UsedRange.Cells(1,1).Row</code> if you know the data starts somewhere other than row 1.  The second issue prevents the use of UsedRange.</p>
"
"<p>I have a excel table with 450 domain names and I have a column for the ""created on"" which I would want to manipulate to create an history graph but I really don't knwo how to handle it.  I'm new to pivot tables, but I already change my data from range to table.</p>

<p>I would want to have a graph having the years on the x-axis and having the added number of domains bought on the y-axis and be able to see the ""curve"".</p>

<p>Could somebody give me some advice on how to create that only with pivot table configuration?</p>

<p>Thanks a lot.</p>
","<p>I tried to pack it all into one picture for you.  If the dates are stored as dates, the Pivot Table can ""Group Field"" by Years.  This will summarize the data in groups.  You can then create a Pivot Chart with this summarized data.  Most common issue when doing this is not having all the dates formatted correctly.</p>

<p><img src=""https://i.stack.imgur.com/vHqUA.png"" alt=""Pivot Table and Chart overview""></p>

<p><strong>Edit</strong></p>

<p>To get from here to a cumulative total, you can change the Pivot Table ""Show Values As"" to ""Running Total In..."".  Select the <code>DATE</code> field when you get the prompt.</p>

<p>Change the display option.</p>

<p><img src=""https://i.stack.imgur.com/kq6XU.png"" alt=""menu""></p>

<p>Chart is now cumulative.  (My pictures are now the same since I regenerated the data and added a couple years to show it.)</p>

<p><img src=""https://i.stack.imgur.com/XHgCy.png"" alt=""result""></p>
"
"<p>Is there a way to display an item in a combobox list but give it a different value?</p>

<p>Say I have ""1-03"" in my list representing 1'3"" but I want the value of ""1.25"" assigned to it so my formulas will calculate correctly.</p>

<pre><code>Private Sub UserForm_Activate()

'Values for cmbxSpans
cmbxSpans.AddItem ""1-03""

End Sub
</code></pre>
","<p>No.  Excel does not provide additional properties on the items (entries in <code>List(i)</code>) to differentiate display value and ""actual"" value.  The items in a <code>ListBox</code> are stored as <code>Strings</code>.  If you want a two-fold representation (i.e <code>1-03 = 1.25</code>), you will have to handle conversion when items are added/read.</p>

<p>Here is one such set of conversions based on your <code>1-03</code> example.</p>

<pre><code>Private Sub CommandButton1_Click()

    ListBox1.AddItem ""1-03""

    'read item
    Dim height As Double
    height = FormatToNumber(ListBox1.List(0))

    'do some math
    height = height * 2

    'add it back it
    ListBox1.AddItem NumberToFormat(height)

End Sub

Function FormatToNumber(str_feet_inch As String) As Double
    Dim values As Variant

    'split based on -
    values = Split(str_feet_inch, ""-"")

    'do the math, using 12# to ensure double result
    FormatToNumber = values(0) + values(1) / 12#
End Function

Function NumberToFormat(val As Double) As String

    Dim str_feet As String
    Dim str_inch As String

    str_feet = Format(Int(val), ""0"")
    str_inch = Format((val - Int(val)) * 12, ""00"")

    NumberToFormat = str_feet &amp; ""-"" &amp; str_inch


End Function
</code></pre>
"
"<p>I run an open order report for a warehouse team every two days, and then go through the open orders; and email vendors to confirm their delivery date as pointed out by the report.</p>

<p>Naturally the reports are going to have some of the same information every other day, but there will be new orders, as well.</p>

<p>What I need to be able to do is figure out a way to tell the new spreadsheet to determine if any of the information in the new sheet was in the old sheet.</p>

<p>For example. </p>

<p>A, B, C, D, is Delivery Date, Part Number, Part Description, and Purchase Order Number - Respectively.</p>

<p>Information in spreadsheets in internal and confidential, otherwise I would post a photo of it, to help understand. </p>

<p>I want it to tell me if those items match between both spreadsheets, so that I don't suddenly end up asking twice about an order or have to go line by line to match up. Because that takes FOREVER.</p>
","<p>If you want to test for equality across all items, you can do it easily with an array formula.  Here is an example that compares 4 columns (similar to you) for exact matches.  It multiples the combined result by <code>ROW</code> so that you can see where the last match occurs.  It is the last one because <code>MAX</code> is used.</p>

<p>Hopefully you can see how this would be extended to your case.  Note that this is an array formula (entered with <kbd>CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd>ENTER</kbd>) in cell <code>F2</code> copied down through the column.</p>

<p>Formula in cell <code>F2</code></p>

<pre><code>=MAX((A2=$H$2:$H$21)*(B2=$I$2:$I$21)*(C2=$J$2:$J$21)*(D2=$K$2:$K$21)*ROW($H$2:$H$21))
</code></pre>

<p>This formula works by building up a product of comparisons which is the same as an <code>AND</code> operation.  This will be a 1 if the conditions are all true.  That 1 is then multiplied by the <code>ROW</code> so that the match location is returned.</p>

<p>Picture with a couple matching rows colored and the ranges in color to see how the formula works.</p>

<p><img src=""https://i.stack.imgur.com/zNUKm.png"" alt=""enter image description here""></p>
"
"<p>I'd like to sum up some data within the current month but only until the current date.</p>

<p>The sheet looks something like this:</p>

<p><img src=""https://i.stack.imgur.com/2OVYc.png"" alt=""enter image description here""></p>

<p>So there are 2 things to consider:</p>

<ul>
<li><p>I'd like to not use the static formula <code>=SUM(B32:B59)</code> to sum up all values from february but rather have some kind of dynamic formula which automatically sets the ranges of the <code>SUM</code> to the first &amp; last date of the month in which the sum formula ""resides"".</p></li>
<li><p>The end of the sum range should be constrained to not exceed the current date</p></li>
</ul>

<p>Is this possible at all and if so, how?</p>

<p>Thanks</p>
","<p>An array formula is an excellent way to combine criteria and a summary function.  You can combine several criteria by multiplying their results together.  The final result will be a 0 or 1 depending on whether or not the criteria were met.  You can then take that result, multiply by the data and <code>SUM</code>.</p>

<p>Here is an example that applies your conditions to some sample date.  This needs to be entered as an array formula with CTRL+SHIFT+ENTER.  It also requires that your dates really be dates and not a string.  Formula for cell <code>D32</code>.  You can copy/paste this to each end of month row.  It will give the same answer for any cell in the month though.</p>

<pre><code>=SUM((MONTH($B$2:$B$37)=MONTH(B32))*($B$2:$B$37&lt;TODAY())*$C$2:$C$37)
</code></pre>

<p>The image shows cell <code>D17</code> expanded.  I did this so that you can see that the results for April are correct.</p>

<p><img src=""https://i.stack.imgur.com/HD0pB.png"" alt=""image of sample data""></p>

<p>The formula works with two conditions:</p>

<ul>
<li>Check that the month is the same month as the current data point</li>
<li>Check that the date is less than current date</li>
</ul>
"
"<p>I'am trying to prevent users from pasting other things than values in the template I'm developing. I use a macro to always paste values in the worksheet (see below). When users switch to another workbook this macro should be disabled.
The problem is that I get error 91 when activating another workbook.</p>

<p>'the macro in a module</p>

<pre><code>Sub AlwaysPasteValues()
  Selection.PasteSpecial Paste:=xlPasteValues
End Sub
</code></pre>

<p>'the code in this workbook</p>

<pre><code>Public wb As Workbook

Private Sub Workbook_Activate()
  Application.MacroOptions Macro:=""AlwaysPasteValues"", Description:=""AlwaysPasteValues"", ShortcutKey:=""v""
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
  Set wb = Nothing
End Sub

Private Sub Workbook_Deactivate()
  With wb
    .MacroOptions Macro:=""AlwaysPasteValues"", Description:=""AlwaysPasteValues"", ShortcutKey:=""""
  End With
End Sub

Private Sub Workbook_Open()
  Set wb = ThisWorkbook
End Sub
</code></pre>
","<p>You are changing <code>.MacroOptions</code> on <code>wb</code> which does not exist as a property.  <code>MacroOptions</code> is for the <code>Application</code>.  Use the same code as the <code>Activate</code> and you should be good.</p>

<pre><code>Private Sub Workbook_Deactivate()

    Application.MacroOptions Macro:=""AlwaysPasteValues"", Description:=""AlwaysPasteValues"", ShortcutKey:=""""

End Sub
</code></pre>
"
"<p>In Excel I have an old list of downloads by country like this:</p>

<p>Country &nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;  Downloads
<br>USA &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;  |&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;     20<br>
Canada&nbsp;&nbsp; &nbsp;   |  &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;   50</p>

<p>etc....</p>

<p>Now I have a new list of downloads (since the previous list was created) in the same format. I need to combine the two and add the values of the old list with the new. There are also downloads from countries that didn't download before and they need to be added at the bottom.</p>
","<p>This is one of the rare places where Data->Consolidate is useful.  It does exactly what you want.  Add the two ranges as references, and it will output the combined table using whatever function you want, here <code>SUM</code>.</p>

<p><strong>Starting point</strong>
<img src=""https://i.stack.imgur.com/7Z9lz.png"" alt=""Consolidate usage""></p>

<p><strong>Result</strong>
<img src=""https://i.stack.imgur.com/2baeJ.png"" alt=""enter image description here""></p>
"
"<p>So background first, question second.</p>

<p>I recently discovered an interesting property of named ranges that I'm experimenting with and not finding much help. The property is this: If I name a range (a column in this example), I can use the named range as a reference in formulas and it will usually resolve as though it were a reference <em>to the same relative position as the current cell</em> within the named range. So if I call A:A ""Alphabet"" and it contains letters a through z, each in their own row, I can simply type <code>=Alphabet</code> in cell b26 and it will evaluate to ""z"" (i.e. A26 instead of a:A). Seems simple, but it is shaping up to be quite powerful, because there is essentially an index function built-in. Very useful for making tidy formulas.</p>

<p>Onto the issue: when I use this same technique with a range that accepts an array argument (i.e. MAX, EOMONTH, etc.), the reference is resolving in the standard way (Max(A:A)). If I wrap the reference in VALUE(), then it resolves to just the single reference within the larger range (a26). The question is simply can anyone think of any way to avoid needing to do this, or at least to make the wrapper as unobstrusive as possible? </p>

<p>Real world example: I have a list of employees and I want to determine which date from three named ranges is larger. So I have something like 
<code>='DateSameRow1' &gt; Max('DateSameRow2','DateSameRow3','DateSameColumn'</code>, and it is resolving as <code>=a10 &gt; Max(b:b,c:c,2:2)</code>. Note the issue: The named range outside of MAX resolved one way, and inside MAX resolved another. Sure, I could just write <code>= a10 &gt; Max(b10,c10,d2)</code> or whatever, but this is so much more readable in what will end up being a huge formula.  Right now I'm having to write <code>MAX(VALUE('DateSameRow2'))</code> or whatever to get the result I want and it is defeating the purpose.</p>

<p>Thanks</p>
","<p>You can use <code>--NAMED_RANGE</code> in front of the ""offending"" named range and it will force a negative <code>VALUE</code> and then undo the negative.</p>

<p>Per my comment, I would recommend you not build a spreadsheet on this functionality.  The <code>--</code> is even further removed from <code>VALUE</code> in indicating that a named range is being used in this way.</p>
"
"<p>I have a series of data which I'd like to plot into a few graphs. The data is ordered by date and extracted data tagged with a TRUE condition next to it based on prior conditions.</p>

<p>As there is a large data set, is it possible to generate a series of graphs automatically? I know how to create macros using the record macro function, just that I'm unsure how to filter the data to make the graphs.</p>

<p>In the sample data below, I would have 2 graphs with date ranges 1-3 Jan and another from 6-7 Jan.</p>

<p>E.g:</p>

<pre><code>T/F   Date    Data
True  1-Jan   0.1
True  2-Jan   0.2
True  3-Jan   0.4
False 4-Jan   0.2
False 5-Jan   0.1
True  6-Jan   0.3
True  7-Jan   0.4
</code></pre>
","<p>This is doable.  Creating charts dynamically is one of those routines that you should put away in a library for future reference.  I have done so and the code is below.  The code will create a chart based on x/y ranges and a location.  The location allows the charts to be arranged in a grid as they are created.  You will have to wrangle your ranges so that you can give the sub below the inputs it needs.  This should just be a matter of iterating through and tracking which charts to create.</p>

<p>The only key steps to this are using <code>ChartObjects.Add</code> to create a new chart (with positioning data) and then <code>SeriesCollection.NewSeries</code> to add a series to the chart.</p>

<p>You can call this code several times with <code>location</code> incrementing to create the charts you want and put them in the grid.</p>

<pre><code>Sub CreateChartFromRange(xval As Range, yval As Range, location As Integer)

    Dim height As Double, width As Double
    height = 300
    width = 300

    Dim columns As Integer
    columns = 3

    'assume active sheet
    Dim cht_obj As ChartObject
    Set cht_obj = ActiveSheet.ChartObjects.Add( _
        (location Mod columns) * width, _
        (location \ columns) * height, _
        width, _
        height)

    Dim ser As Series
    Set ser = cht_obj.Chart.SeriesCollection.NewSeries

    ser.Values = yval
    ser.XValues = xval

    'assume XY scatter type
    ser.ChartType = xlXYScatter

End Sub
</code></pre>
"
"<p>I'm a newbie to Excel VBA and now I have a difficulty in dealing with the <strong>Pivot Table</strong>. The pivot table is used to <strong>count the scores and scores occurrence</strong>. </p>

<ul>
<li>I've finished the average function within the pivot table.<strong>(COMP)</strong></li>
<li>Now I would like to split the scores occurrence range. For instance, how many persons scores are in the range of scores >=80, or >=70, or >=60, or even &lt;60 (failed), </li>
<li>and after this, I also need to count the <strong>passed ratio</strong> </li>
</ul>

<p>Here are some conditions that must use the Pivot Table:</p>

<ul>
<li>One manager has many leaders, and one leader have many members, the members take the exams and count their scores.</li>
<li>So the view of members' scores should bind with the manager and leader, to see each manager's data measure.</li>
</ul>

<p>Below is my VBA code using Pivot Table to achieve my requirements:</p>

<pre><code>Private Sub CommandButton1_Click()
Dim objTable As PivotTable, objField As PivotField
Dim ws As Worksheet
Dim wsPivot As Worksheet

ActiveWorkbook.Sheets(""Sheet1"").Select
Range(""A1"").Select
Set objTable = Sheet1.PivotTableWizard

' Specify row and column fields
Set objField = objTable.PivotFields(""Creator's Tower Lead"")
objField.Orientation = xlRowField
Set objField = objTable.PivotFields(""Creator's Manager"")
objField.Orientation = xlRowField
Set objField = objTable.PivotFields(""Scores"")
objField.Orientation = xlColumnField
'Set objField = objTable.PivotFields(""Average Score"")
'objField.Orientation = xlRowField
'Set objField = objTable.PivotFields(""Score&gt;=80"")
'objField.Orientation = xlRowField
'Set objField = objTable.PivotFields(""Score 70-79"")
'objField.Orientation = xlRowField
'Set objField = objTable.PivotFields(""Score 60-69"")
'objField.Orientation = xlRowField
'Set objField = objTable.PivotFields(""Score &lt;60"")
'objField.Orientation = xlRowField
'Set objField = objTable.PivotFields(""Pass Rate (Score &gt;60)"")
'objField.Orientation = xlRowField


' Specify a data field with its summary
' function and format.
With objTable
    Set objField = objTable.PivotFields(""Scores"")
    objField.Orientation = xlDataField
    objField.Function = xlAverage
End With

With objTable
    Set objField = objTable.PivotFields(""Scores"")
    objField.Orientation = xlDataField
    objField.Function = xlCount
End With

'With objTable
'    Set objField = objTable.PivotFields(""Scores"")
'    objField.Orientation = xlDataField
'    Select Case objField
'        Case Scores &gt; 80
'             objField.Function = xlCount
'        Case Scores &gt; 70
'             objField.Function = xlCount
'        Case Scores &gt; 60
'             objField.Function = xlCount
'        Case Else
'             objField.Function = xlCount
'    End Select
'End With End Sub
</code></pre>

<p>I really frustrated to get the scores range in pivot table. And some experts suggest me use secondary row(add a new column), but I tried and it still didn't work. Due to my stack overflow reputation is not greater than 10 points, I cannot upload my snapshots to make it clearer, hope my description could help you understand this question. Thanks in advance.</p>
","<p>Excel provides grouping functionality that works well for most cases.  For this type of example, you can specify the range to group by.  To do this in VBA is as easy as getting a reference to one of the cells in field and calling <code>Group</code> on it.</p>

<p>Here is the code</p>

<pre><code>Sub GroupPivot()

    Range(""D3"").Group Start:=60, End:=90, By:=10

End Sub
</code></pre>

<p>And here is an image with the normal menu and the result of the grouping call.</p>

<p><img src=""https://i.stack.imgur.com/JXvXV.png"" alt=""results""></p>
"
"<p>I have a button on a ribbon that will save this as a pdf. but it is saving all of the visible sheets to pdf. I only want it to save the active sheet.</p>

<pre><code>private void button1_Click(object sender, RibbonControlEventArgs e)
{
    xl.Application xlApp = Globals.ThisWorkbook.Application;
    ThisWorkbook wb = Globals.ThisWorkbook;
    SaveFileDialog MyFiles = new SaveFileDialog();
    MyFiles.Filter = ""PDF Files|*.pdf"";
    MyFiles.Title = ""Save As..."";
    MyFiles.DefaultExt = ""*.pdf"";
    MyFiles.ShowDialog();
    string path = MyFiles.FileName;
    wb.ExportAsFixedFormat(xl.XlFixedFormatType.xlTypePDF, path);
}
</code></pre>
","<p>You probably need to use <code>wb.ActiveSheet.ExportAsFixedFormat</code>.  This is consistent with how to do this in normal VBA as well.</p>

<p><a href=""https://msdn.microsoft.com/en-us/library/microsoft.office.tools.excel.workbook.activesheet.aspx?cs-save-lang=1&amp;cs-lang=csharp#code-snippet-1"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/microsoft.office.tools.excel.workbook.activesheet.aspx?cs-save-lang=1&amp;cs-lang=csharp#code-snippet-1</a></p>
"
"<p>I run this set of codes and it returns an error: </p>

<p>Run-time error '1004' Unable to get the Vlookup property of the WorksheetFunction class. </p>

<p>I already have one vlookup in another sub routine. 
Is there anything wrong with this code ? I debug and the error appears at the policybox there. </p>

<pre><code>Sub LinkPolicyNum()
Dim r As Integer
Dim policynum As Variant
Dim lookup_num As Range
Dim policybox As Variant


    r = ActiveCell.Row
    'Row number of the Selected Cell

    policynum = ActiveSheet.Cells(r, 3).Value

    Set lookup_num = ThisWorkbook.Sheets(""PolicyDetails"").Range(""a1:z5000"")

    policybox = Application.WorksheetFunction.VLookup(policynum, lookup_num, 3, False)
    'to match the policy number to the policy details

    MsgBox policynum
    MsgBox policybox



End Sub
</code></pre>
","<p>There appears to be nothing wrong with your code.  You are seeing the result of what happens when you use the <code>WorksheetFunction</code> version of functions and no result is returned.  Specifically, they throw an error and interrupt execution of the VBA.  In this case, if you tried the same formula in the workbook instead of in VBA, you would get some form of error (<code>#N/A</code> or <code>#VALUE!</code> possibly).</p>

<p>If you want to prevent this from happening, the easiest thing to do is to change to using <code>Application.VLookup</code> instead of <code>Application.WorksheetFunction.VLookup</code>.  Although there is no Intellisense to help with this function it behaves the same as the other except for error handling.  If the non-<code>WorksheetFunction</code> version of a function has an error, it will return the error instead of throwing it.  This allows you to check for an error and then carry on with your code.</p>

<p>If you think you should be finding a value with <code>VLOOKUP</code> here then you can start checking for mismatches between text/numbers and other things like that.  I would check with formulas and not in VBA though.</p>

<p>Here is an example of using the other functional form and trapping the error.</p>

<pre><code>Sub LinkPolicyNum()
    Dim r As Integer
    Dim policynum As Variant
    Dim lookup_num As Range
    Dim policybox As Variant

    r = ActiveCell.Row
    'Row number of the Selected Cell

    policynum = ActiveSheet.Cells(r, 3).Value

    Set lookup_num = ThisWorkbook.Sheets(""PolicyDetails"").Range(""a1:z5000"")

    policybox = Application.VLookup(policynum, lookup_num, 3, False)
    'to match the policy number to the policy details

    If IsError(policybox) Then
        'possibly do something with the ""not found"" case
    Else
        MsgBox policynum
        MsgBox policybox
    End If

End Sub
</code></pre>

<p>Reference on this issue: <a href=""http://dailydoseofexcel.com/archives/2004/09/24/the-worksheetfunction-method/"" rel=""nofollow"">http://dailydoseofexcel.com/archives/2004/09/24/the-worksheetfunction-method/</a></p>
"
"<p>I created a UserForm with several functions.</p>

<p>The form opens as I open the Excel file, however if I try to close the form the Excel file close together. Additionally, I can't open the VBA of this Excel (containing the form), so what I do (and that is really dum) it is to open another Excel, press <kbd>Alt</kbd>+<kbd>F11</kbd> to open the macro environment and then I can open my Excel file with the UserForm. </p>

<p>I think my problem is in this specific code:</p>

<pre><code>Private Sub UserForm_Terminate()
    'Application.Visible = True
    ActiveWorkbook.Saved = True
    Application.Quit
End Sub
</code></pre>

<p>Can anyone guess what is the problem here?</p>
","<p>If you just want to close the Userform use <code>Unload Me</code> instead of <code>Application.Quit</code>.</p>
"
"<p>I have several data in excel sheet and I wonder if its possible (through macros or something else) to select the data and display the series needed.</p>

<p>I'm not quite sure if I explained the situation correctly...</p>

<p>But I have multiple curves, and instead of plot the average curve or single curves, I would like to have the option to plot: curve 1, curve 2, curve 3, average curve...</p>

<p>Kind regards,</p>

<p>DNA</p>
","<p>My preferred way to do this is with a combination of a couple of ideas.  In general, Excel charts are easiest to maintain if they are looking at a simple range instead of complicated named ranges.  Given this, I like to create a simple column of data for the chart and then use other Excel features to modify that column of data.</p>

<p>Note that the steps below are for a specific case of a block of data all on one sheet.  There are a ton of variations that you can do to make this work for other configurations.  The idea is simple: <strong>create a new column of data for the chart and use normal formulas to get the data there</strong>.  You can make the x-axis a selector as well.</p>

<p>For the simple case of a common x-axis with varying series for the y-axis all in one block of data, I do these steps:</p>

<p><strong>Start = block of data</strong></p>

<p><img src=""https://i.stack.imgur.com/xedZW.png"" alt=""starting point""></p>

<ol>
<li>Add a column header off to the side which will ""drive"" the selection.  I like to make this a Data Validation drop down so that the selection is correct.  I did this in <code>G2</code>, selecting the column headers as the <code>Source</code>.</li>
</ol>

<p><img src=""https://i.stack.imgur.com/LfOec.png"" alt=""data validation""></p>

<ol start=""2"">
<li>With this in place, you can use the selection there to update the data in the column below it.  A simple formula for doing this uses <code>INDEX</code>.</li>
</ol>

<p>Formula in <code>G3</code>, copied down to end of data: <code>=INDEX($C$3:$E$25,,MATCH($G$2,$C$2:$E$2,0))</code></p>

<p>This formula works by finding the column name in the list of column headers and returning that column of data.  Since the row selection is blank <code>,,</code>, it relies on the relative position of the cell which works since everything is lined up.</p>

<p><img src=""https://i.stack.imgur.com/6Mqt6.png"" alt=""selector formula""></p>

<ol start=""3"">
<li>Once this is done, you can then create the chart simply using the date and the new column of data.  It will respond to changes in the selector which works nicely.  If you use the column <code>G</code> header as the series name, that will update too which is a good effect for free.  Below is the chart showing the ranges it is using.</li>
</ol>

<p><img src=""https://i.stack.imgur.com/wl1hk.png"" alt=""result with chart""></p>
"
"<pre><code>Sub test1()

Dim Str As String
Dim Search As String
Dim Status As String
Str = Cells(2, 5).Value
Search = FDSA!Cells(2, 5).Value
Status = FDSA!Cells(2, 10).Value

    If InStr(Search, Str) = True Then
                Status = ""ok""
    Else
         End If

End Sub
</code></pre>

<p>I will be building up from this with loops. I want to check if what is in Cells(2,5) is contained in FDSA!Cells(2,5). If it is true then I would like to mark FDSA!Cells(2,10) as ok. I am getting an object required message. This is what I could come up with after looking at examples and tutorials. Let me know if you have questions  </p>

<p>Only second time working on VBA.
Thanks in advance, Alexis M.</p>
","<p>Your syntax for referencing the worksheet is incorrect.  That is probably throwing the error.  You need to call to <code>Worksheets(""FDSA"")</code> and not use the <code>FDSA!</code> call like you have.</p>

<p>Also, you will have to set the cell value equal to <code>Status</code> for this to work.  Just changing <code>Status</code> will not write it back into the workbook.  </p>

<p>Also <code>InStr</code> returns the location of the match.  If you want to know if there was a match, you need to check that the return is <code>&gt;0</code>.  This code should run and hopefully is closer to correct than your current code.</p>

<pre><code>Sub test1()

Dim Str As String
Dim Search As String

Str = Cells(2, 5).Value
Search = Worksheets(""FDSA"").Cells(2, 5).Value


    If InStr(Search, Str) &gt; 0 Then
        Worksheets(""FDSA"").Cells(2, 10).Value = ""ok""
    End If

End Sub
</code></pre>
"
"<p>I have a set of 100 part numbers in a particular sheet and want to eliminate the data corresponding to those 100 part numbers from my Master Part List sheet (which contains a huge list of parts). I don't know how to proceed for this?</p>
","<p>The Advanced Filter will do this for you fairly easily.  If you have a sheet with the part numbers listed, you can use that as the criteria range.  Once filtered, simply delete the visible rows and remove the filter.</p>

<p>Advanced Filter setup</p>

<p><img src=""https://i.stack.imgur.com/eWTs6.png"" alt=""advanced filter""></p>

<p>Delete visible rows</p>

<p><img src=""https://i.stack.imgur.com/oNrjt.png"" alt=""delete rows""></p>

<p>Once deleted, you can clear the filter to get back to normal.</p>
"
"<p><strong>I have the following:</strong><br>
<br>
<img src=""https://i.stack.imgur.com/yTqt9.png"" alt=""enter image description here"">
<br><br>
<strong>I expect the following:</strong><br>
<br><img src=""https://i.stack.imgur.com/neZ3O.png"" alt=""enter image description here""><br></p>

<p><strong>I am using this code:</strong><br><br></p>

<pre><code>Sub merge_cells()

Application.DisplayAlerts = False

Dim r As Integer
Dim mRng As Range
Dim rngArray(1 To 4) As Range
r = Range(""A65536"").End(xlUp).Row

For myRow = r To 2 Step -1

    If Range(""A"" &amp; myRow).Value = Range(""A"" &amp; (myRow - 1)).Value Then

        For cRow = (myRow - 1) To 1 Step -1

            If Range(""A"" &amp; myRow).Value &lt;&gt; Range(""A"" &amp; cRow).Value Then

                Set rngArray(1) = Range(""A"" &amp; myRow &amp; "":A"" &amp; (cRow + 0))
                Set rngArray(2) = Range(""B"" &amp; myRow &amp; "":B"" &amp; (cRow + 0))
                Set rngArray(3) = Range(""C"" &amp; myRow &amp; "":C"" &amp; (cRow + 0))
                Set rngArray(4) = Range(""D"" &amp; myRow &amp; "":D"" &amp; (cRow + 0))

                For i = 1 To 4
                    Set mRng = rngArray(i)
                    mRng.Merge
                    With mRng
                        .HorizontalAlignment = xlCenter
                        .VerticalAlignment = xlCenter
                        .WrapText = False
                        .Orientation = 90
                        .AddIndent = False
                        .IndentLevel = 0
                        .ShrinkToFit = False
                        .ReadingOrder = xlContext
                        .MergeCells = True
                    End With

                Next i

                myRow = cRow + 2
                Exit For
            End If
        Next cRow
    End If
Next myRow

Application.DisplayAlerts = True

End Sub
</code></pre>

<p><br><br>
<strong>what I get is:</strong><br><br>
<img src=""https://i.stack.imgur.com/uPaCb.png"" alt=""enter image description here""><br><br></p>

<p><br><br><strong><em>Question:</em></strong> <strong>how to achieve this?</strong></p>

<p><br>Actually in my original data, the first three columns have data every 88 rows starting from row 3 and the column D should get merged every four rows. <br></p>
","<p>Your code does not distinguish between the different columns in any way.  If you know how many rows to merge you can simply search for cells and then do the merge based on column number.  Here is one such approach which uses a pair of arrays to track how many rows to merge and then what formatting to apply.</p>

<p>You will need to change the row counts in the array definition.  Sounds like you want (87,87,87,3) based on your edit.  I did (11,11,11,3) to match your example though.  This is the real fix to your code; it uses the <code>Column</code> number to determine how many rows to merge.</p>

<p>I also just typed some values into the spreadsheet and used <code>SpecialCells</code> to get only the cells with values.  If your data matches your example, this works fine.</p>

<p><strong>Edit</strong> includes unmerging cells first per OP request.</p>

<pre><code>Sub MergeAllBasedOnColumn()

    Dim rng_cell As Range
    Dim arr_rows As Variant
    Dim arr_vert_format As Variant

    'change these to the actual number of rows
    'one number for each column A, B, C, D
    arr_rows = Array(11, 11, 11, 3)

    'change these if the formatting is different than example
    arr_vert_format = Array(True, True, True, False)

    'unmerge previously merged cells
    Cells.UnMerge

    'get the range of all cells, mine are all values
    For Each rng_cell In Range(""A:D"").SpecialCells(xlCellTypeConstants)

        'ignore the header row
        If rng_cell.Row &gt; 2 Then

            'use column to get offset count
            Dim rng_merge As Range
            Set rng_merge = Range(rng_cell, rng_cell.Offset(arr_rows(rng_cell.Column - 1)))

            'merge cells
            rng_merge.Merge

            'apply formatting
            If arr_vert_format(rng_cell.Column - 1) Then
                'format for the rotated text (columns A:C)
                With rng_merge
                        .HorizontalAlignment = xlCenter
                        .VerticalAlignment = xlCenter
                        .WrapText = False
                        .Orientation = 90
                        .AddIndent = False
                        .IndentLevel = 0
                        .ShrinkToFit = False
                        .ReadingOrder = xlContext
                End With
            Else
                'format for the other cells (column D)
                With rng_merge
                        .HorizontalAlignment = xlCenter
                        .VerticalAlignment = xlCenter
                        .WrapText = False
                End With
            End If
        End If
    Next rng_cell
End Sub
</code></pre>

<p><strong>Before</strong></p>

<p><img src=""https://i.stack.imgur.com/4SAgG.png"" alt=""before""></p>

<p><strong>After</strong></p>

<p><img src=""https://i.stack.imgur.com/YZykf.png"" alt=""after""></p>
"
"<p>I can't figure out how to get formula to recognize variable # of rows for each weighted average calculation in a single, replicable formula combination.  I've tried (and failed) to use combinations of sumproduct / address / match / offset / countif / if / etc.  I feel like this should be super easy, but I'm stumped.</p>

<p>Sheet1 has variable number of rows for each CompanyX/Y/Z</p>

<pre><code>          Value   Weight
</code></pre>

<ul>
<li>CompanyX   DataA   DataA1 </li>
<li>CompanyX   DataB   DataB1 </li>
<li>CompanyX   DataC   DataC1 </li>
<li>CompanyY   DataN   DataN1  </li>
<li>CompanyZ   DataU   DataU1  </li>
<li>CompanyZ   DataV   DataV1</li>
</ul>

<p>But I want to summarize weighted average with at Company level e.g.</p>

<pre><code>          Weighted Average
</code></pre>

<ul>
<li>CompanyX   ResultABCA1B1C1   </li>
<li>CompanyY   ResultNN1   </li>
<li>CompanyZ   ResultUVU1V1   </li>
</ul>

<p>Can't get there from here...help!</p>
","<p>I believe you need a pair of <code>SUMPRODUCT</code> calls.  The first is to get the product of value and weight for a company.  The second is to just get the sum of the weights for a company.  The first term in this formula is used to check that the company matches (it returns 0 or 1 with the <code>--</code>); the second and third terms are for the weighted average math.</p>

<p>Array formula (enter with CTRL+SHIFT+ENTER) in cell <code>G3</code>, copied down from there, see picture for other ranges.</p>

<pre><code>=SUMPRODUCT(--(F3=$B$3:$B$8),$C$3:$C$8,$D$3:$D$8)/SUMPRODUCT(--(F3=$B$3:$B$8),$D$3:$D$8)
</code></pre>

<p><strong>Ranges and result</strong></p>

<p><img src=""https://i.stack.imgur.com/Le4J1.png"" alt=""ranges and result""></p>
"
"<p>I'm not sure this is possible but thought this was the best place to ask.</p>

<p>Is it posible to get the position of a series value on a graph in excel?</p>

<p>For example,  if I have a line graph in excel that has time along the x axis, is it possible to (using VBA) get the position of a specific point on that axis.</p>

<p>What I am trying to do is have a vertical line that is can be positioned based on a date entered by the user.</p>

<p>like this</p>

<p><img src=""https://i.stack.imgur.com/n1G6U.jpg"" alt=""enter image description here""></p>

<p>Where the green line could be positioned by entering in a date (rather than just being manually moved)  (or also it could be set to automatically move to the current date etc).</p>

<p>I was then thinking that if the position is on the graph is queryable, then I can just access the line object and move it to any position I wanted through VBA.</p>

<p>Any Ideas?  or is this just not possible? </p>
","<p>The ""cleanest"" way to do this is to add the line to the chart as a new series.  In that way, Excel handles all of the positioning and your work is simplified.  To get a vertical line on a chart, there are a number of options.  I prefer this route:</p>

<ol>
<li>Create a small 2x2 area with two dates and two values</li>
<li>Add in the date or x-axis value you want the line at (<code>E3</code> in image).  You can use <code>=TODAY()</code> here or some manually entered value.</li>
<li>Set the second x-axis value equal to the first</li>
<li>Use <code>MAX</code> and <code>MIN</code> on the data to get the values for each date.  You can also use 0 and 1 and a secondary axis, but I think <code>MAX/MIN</code> is easier.</li>
<li>Add the data to the chart and format as a marker with straight line.</li>
</ol>

<p><strong>Formulas</strong></p>

<ul>
<li><code>E3</code>: <code>=TODAY()</code></li>
<li><code>E4</code>: <code>=E3</code></li>
<li><code>F3</code>: <code>=MIN(C3:C27)</code></li>
<li><code>F4</code>: <code>=MAX(C3:C27)</code></li>
</ul>

<p><strong>Result and chart data series for vertical line</strong></p>

<p><img src=""https://i.stack.imgur.com/ELSZS.png"" alt=""results and chart""></p>
"
"<p>I have an Excel sheet, and column <code>A</code> has a list of product names. Most of the products have multiple variations, such as:</p>

<pre><code>A1: LDP2-sm
A2: LDP2-med
A3: LDP2-lg
A4: LDP3-sm
A5: LDP3-med
A6: LDP3-lg
A7: LDP3-xlg
</code></pre>

<p>Here, <code>LDP2</code> is 1 product with 3 variations and <code>LDP3</code> is 1 product with 4 variations</p>

<p>How do I loop through this list and find the start of a new variation? In the above example, I'd want to find <code>A1</code> and <code>A4</code>. Then, I want to insert a row above each.</p>

<p>Here is the code I have so far:</p>

<pre><code>Dim rw As Long
Dim lr As Long
Dim cnt As Long
lr = 500
rw = 2
cnt = 1
Do
    If Range(""A"" &amp; cnt).Value = *FIRST VARIATION OF A NEW PRODUCT*
        Rows(rw).Insert Shift:=xlDown
        cnt = cnt + 1
    Else
        cnt = cnt + 1
    End If
    rw = rw + 1
Loop While rw &lt;&gt; lr
</code></pre>

<p>What code do I need for <em>FIRST VARIATION OF A NEW PRODUCT</em>?</p>

<p>It needs to determine if the value of the cell starts with a different prefix than the cell above it.</p>

<p>I won't know what the product name starts with or how many variations the product has, but I do know that the first portion of the product name will change. I.e. <code>LDP2</code>, <code>LDP3</code>, <code>LDP4</code>, etc.</p>
","<p><code>Split</code> is the function you are looking for if you will always have a single <code>-</code> in the name.  It will give you each part of the name and you can then compare to the previous row.</p>

<p>Here is code that works for your example.</p>

<pre><code>Sub SplitProductName()

    Dim rng_cell As Range
    Dim str_prev As String

    For Each rng_cell In Range(Range(""A1""), Range(""A1"").End(xlDown))

        Dim parts As Variant

        parts = Split(rng_cell, ""-"")

        'check that it is different
        If parts(0) &lt;&gt; str_prev Then
            rng_cell.EntireRow.Insert xlUp
        End If

        'assign previous for next row
        str_prev = parts(0)

    Next rng_cell
End Sub
</code></pre>

<p><strong>Before</strong></p>

<p><img src=""https://i.stack.imgur.com/E75G3.png"" alt=""before macro""></p>

<p><strong>After</strong></p>

<p><img src=""https://i.stack.imgur.com/SDRDP.png"" alt=""after macro""></p>
"
"<p>I have a list of numbers in a table that I would like to search for and bring back the cell reference of where that number resides.  For example the data looks like:</p>

<pre><code>        A       B        C        D
1       1       2        3        4
</code></pre>

<p>ok it doesn't come out very well as the first one is the row number and then each number below sits under each letter, so C1 would contain '3'....  </p>

<p>If I wanted to return the reference number of C1 in a cell I am using the formula of <code>=CELL(""address"",MATCH(AU14,C1:AG1))</code> but this just errors.  I have tried to put an Index in there too, but I believe that index only works vertically so this bring back a #N/A result.</p>

<p>Can anyone assist as I've wasted too much time on this already! :)</p>
","<p>You are indeed missing an <code>INDEX</code>.  And <code>INDEX</code> works vertically, horizontally, or both depending on how it's called.</p>

<p>Here is a formula that works for the ranges in the pictures.  Should be easy to modify.</p>

<p>Formula in <code>C5</code></p>

<pre><code>=CELL(""address"",INDEX(B2:F2,MATCH(C4,B2:F2,0)))
</code></pre>

<p><strong>formula</strong></p>

<p><img src=""https://i.stack.imgur.com/bgTGB.png"" alt=""formula""></p>

<p><strong>results</strong></p>

<p><img src=""https://i.stack.imgur.com/wtWVC.png"" alt=""results""></p>
"
"<p>I have a piece of code that is supposed to format a tab of information. I took it from a piece of code previously used and I am modifying it to fit my needs. I am getting a <code>syntax error</code> on the <code>.Selection Subtotal   GroupBy:=3, Function:=xlSum, TotalList:=Array(8, 10), _
        Replace:=True, PageBreaks:=False, SummaryBelowData:=True</code> line. </p>

<p>VBA isn't exactly a strong point of mine so I would like to figure out a way to perform this properly. I know selection is frowned upon so if anyone has a way around it without me having to redo a bunch of code that would be awesome. </p>

<pre><code>With ActiveSheet
.Range(""A10"").Select
.Range(Selection, Selection.End(xlToRight)).Select
.Range(Selection, Selection.End(xlDown)).Select
.Selection Subtotal GroupBy:=3, Function:=xlSum, TotalList:=Array(8, 10), _
    Replace:=True, PageBreaks:=False, SummaryBelowData:=True
.Outline.ShowLevels RowLevels:=2

.Range(""C8"").Select
End With
</code></pre>
","<p>Working code should be:</p>

<pre><code>With ActiveSheet
.Range(""A10"").Select
.Range(Selection, Selection.End(xlToRight)).Select
.Range(Selection, Selection.End(xlDown)).Select
Selection.Subtotal GroupBy:=3, Function:=xlSum, TotalList:=Array(8, 10), _
    Replace:=True, PageBreaks:=False, SummaryBelowData:=True
.Outline.ShowLevels RowLevels:=2

.Range(""C8"").Select
End With
</code></pre>

<p><code>Subtotal</code> is a sub that needs to be called on the <code>Selection</code>.  Therefore it needs a period between the two to make the call.</p>

<p>Also <code>Selection</code> is not a property of the <code>ActiveSheet</code> so the preceding period should be dropped inside the <code>With</code> block.</p>
"
"<p>Helo Everyone,
I have a problem with filter, please help me.
I used filters before and everything was ok.
Today, I imported data from a text file. After importing data, I used a filter as in the attachment and rows don't meet criteria still appear.
Can you help me?<img src=""https://i.stack.imgur.com/5CED2.jpg"" alt=""enter image description here""></p>
","<p>Looks like the filter was not applied to the whole range of cells.  Since there is a line there that appears to be all blank (row 211), the filter may have stopped at that spot instead of covering all the data.</p>

<p>If you select all the cells (really columns <code>A:C</code>) and apply the filter again, it should probably work.</p>
"
"<p>If it is possible, I'd like to create a formula that will allow me the following:</p>

<p>Formula must be in the entire column or in this example, in the range B1:B5. The formula is based on a condition, that when the total sum of cells from column A is lower D1, than it gives ""X"". If the total sum is over D1, then it gives an empty field - """".</p>

<p>In this example the total sum of the cells, that are over D1 value is in the first 3 rows, hence the three X-es, and then it stops.</p>

<p><a href=""http://shrani.si/f/1W/10N/4cuGrhGd/delete.png"" rel=""nofollow noreferrer"">Valid XHTML http://shrani.si/f/1W/10N/4cuGrhGd/delete.png</a>.</p>

<p>I presume it would be possible to do this with multiple SUMIF commands, but does anyone know a smoother solution for this?</p>

<p>Thanks!</p>
","<p>You can do this easily by using an absolute reference for the starting point of a <code>SUM</code> and using a relative reference for the end point.  When copied down, this formulas works fine.</p>

<pre><code>=IF(SUM($A$1:A1)&lt;$D$1,""x"","""")
</code></pre>

<p><strong>Results</strong></p>

<p><img src=""https://i.stack.imgur.com/ZsgBI.png"" alt=""sum results""></p>
"
"<p>Good Afternoon,</p>

<p>I'm having some issues with running a filter on a spreadsheet to delete blank cells.</p>

<p>I'm using the below code which should filter the whole range of the spreadsheet but it stops at the first empty row and then the autofilter fails.</p>

<pre><code>Range spreadsheetLast = spreadSheetWs.Cells.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType.xlCellTypeLastCell, Type.Missing);
Range spreadsheetRange = spreadSheetWs.get_Range(""A1"", ""T"" + spreadsheetLast.Row);
spreadsheetRange.AutoFilter(1, ""="", XlAutoFilterOperator.xlAnd, Type.Missing, true);
Range xlFilteredRange = spreadsheetRange.Offset[1, 0].SpecialCells(XlCellType.xlCellTypeVisible, Type.Missing);
</code></pre>

<p>I'm then deleting the rows using</p>

<pre><code>xlFilteredRange.EntireRow.Delete(XlDirection.xlUp);
</code></pre>

<p>This is deleting basically everything off the spreadsheet. I've tried playing around with the offset and had no luck.</p>

<p>I attempted to change the range to be manual while testing to ""A1"", ""T9999"" and this didnt work either.</p>

<p>Any help much appreciated,</p>

<p>Mark</p>

<p>Edit: Changed code back to original</p>
","<p>You can avoid the <code>AutoFilter</code> and use <code>.SpecialCells(xlCellTypeBlanks).EntireRow.Delete</code> to find blank cells in a <code>Range</code> and delete them.</p>

<p>In VBA (and maybe C#?) you can just use the whole column (<code>A:A</code>) as the <code>Range</code> for this.</p>

<p>The following VBA works fine for me to delete all the rows which have a blank in the first column.  I assume this will translate to C# easily and work via interop also.</p>

<pre><code>Sub DeleteBlanksFromColumnA()

    Range(""A:A"").SpecialCells(xlCellTypeBlanks).EntireRow.Delete

End Sub
</code></pre>
"
"<p>I have a pivot table from a database that looks something like this:</p>

<pre><code>         Person A       Person B        Person C

Task A      1                               3  
Task B                      1               2 
Task C      2               1.5             1
</code></pre>

<p>The number is time spent on a task.  If it's blank, the person didn't work on that task.  </p>

<p>I would like to make a pie chart for each Person from the pivot table for time spent on each task, not including tasks where the cell is blank.  I've tried adding various flavours of pie charts but it only ever creates the chart on the first column of the table.  And when it does that, it seems to include empty cells in its key (though obviously not on the pie).  </p>

<p>Does anyone know anything about this?</p>
","<p>Generally, the Pivot Chart will attempt to plot whatever is in the Pivot Table (including all column titles).  I think the easiest way to deal with this is to add a Slicer so that you can select the Person and have it filter the data for you.  Alternatively, you can filter the Pivot Table on your own, but the Slicer is quite clean in this application.</p>

<p>I don't think it is possible to get multiple pie charts inside a single chart.  You could use the doughnut plot if you want to see all columns plotted at once.  Visually, that chart is horrible to interpret though.</p>

<p>Here is something similar to your data with the Slicer in place for person B.  Note that the legend cleans up also since the missing keys have been filtered out of the Pivot Table itself.</p>

<p><img src=""https://i.stack.imgur.com/RmW13.png"" alt=""enter image description here""></p>
"
"<p>I am a novice in C# so please forgive me silly mistakes in my code :P I am having the following error come up whenever I am looping through an Excel file:</p>

<p>Additional information: Cannot perform run time binding on a null reference</p>

<p>I have gathered the problem that it is picking up far too many rows (the Excel file only has 2 rows, ends up finding 6 rows?), and by the time it gets to the 3rd row, the error happens. I have opened the Excel file and deleted as many rows after the 2nd row but it keeps coming up with the same issue. As I am here, I wish to ask the following questions:</p>

<ol>
<li>How do I go about addressing the above error.</li>
<li>How do I output all the values on the same row, and when row count changes, go onto the next line in the next file and start writing to that?</li>
</ol>

<p>.</p>

<pre><code>using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.OleDb;
using System.IO;
using System.Text.RegularExpressions;
using Excel = Microsoft.Office.Interop.Excel;


namespace KTypeLookUp
{
    public partial class Form1 : Form
    {
        FileStream ostrm;
        StreamWriter writer;
        TextWriter oldOut = Console.Out;
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {//Select Input File Button
            String textPath = @""C:\AAAtemp\export.txt"";
            OpenFileDialog ofd = new OpenFileDialog();
            ofd.Filter = ""Excel Files(*.xls)|*.xls|All Files|*.*"";
            if (ofd.ShowDialog() == DialogResult.OK)
            {//Read and display Excel file
                string path = ofd.FileName.ToString();

                textBox3.Text = path;
                OleDbConnection conn = new OleDbConnection();
                conn.ConnectionString = @""Provider=Microsoft.Jet.OLEDB.4.0;Data Source="" + path + "";Extended Properties=\""Excel 8.0;HDR=Yes;IMEX=1\"";"";

                OleDbCommand command = new OleDbCommand
                (
                      ""SELECT * FROM [Sheet1$]"", conn
                );
                DataSet dataset = new DataSet();
                OleDbDataAdapter adapter = new OleDbDataAdapter(command);
                adapter.Fill(dataset);

                dataGridView1.DataSource = dataset.Tables[0];

                Excel.Application xlApp = new Excel.Application();
                Excel.Workbook xlWorkbook = xlApp.Workbooks.Open(path);
                Excel._Worksheet xlWorksheet = xlWorkbook.Sheets[1];
                Excel.Range xlRange = xlWorksheet.UsedRange;
                int rowCount = xlRange.Rows.Count;
                int colCount = xlRange.Columns.Count;
                try
                {
                    ostrm = new FileStream(textPath, FileMode.OpenOrCreate, FileAccess.Write);
                    writer = new StreamWriter(ostrm);
                }
                catch (Exception ex)
                {
                    ex.ToString();
                   MessageBox.Show("""", ""My Application"",
                   MessageBoxButtons.OKCancel, MessageBoxIcon.Asterisk);
                    return;
                }
                for (int i = 1; i &lt;= rowCount; i++)
                {
                    for (int j = 1; j &lt;= colCount; j++)
                    {
                        Console.SetOut(writer);
                        Console.WriteLine(xlRange.Cells[i, j].Value2.ToString());
                    }
                }
                writer.Close();
                ostrm.Close();
                MessageBox.Show(""Text file created"", ""My Application"",
                MessageBoxButtons.OKCancel, MessageBoxIcon.Asterisk); 
            }   
        }

        private void textBox3_TextChanged(object sender, EventArgs e)
        {//Text box to display path
            textBox3.ReadOnly = true;
        }  
    }
}
</code></pre>
","<p>Your problem is likely related to using <code>UsedRange</code> to determine the number of rows in the spreadsheet.</p>

<p><code>UsedRange</code> is useful when you know what it includes and keep the spreadsheet in good order.  Specifically, <code>UsedRange</code> will include cells that are formatted but have no data in them.  That formatting may include details which are not visible like a change to the default font.</p>

<p>If you want to test this, you need to delete all the rows below the ones that you want to include.  In a comment, you mentioned this is only 2 rows.  I would select row 3 (click on row label) and use CTRL+SHIFT+DOWN to select all the rows below it and then delete them (CTRL+MINUS).  Your <code>UsedRange</code> should then adjust to only be 2 rows total.</p>

<p>Alternatively, depending on your data, you can use a number of other techniques to determine the number of rows of data you have.  If the data is contiguous (no gaps of entire rows/columns) you can use <code>CurrentRegion</code> to get the ""block"" of data.</p>
"
"<p>I have an Excel spreadsheet that has add-in functions that compute on data given in a fixed range. All the worksheets work properly with pressing of F9 or Shift-F9 keys.</p>

<p>I am writing a for loop with VBA. It copies a range from one worksheet which contains all the data to another worksheet. Then calculates manually one worksheet at a time, with pauses, and even compute twice so as to ensure the execution of each worksheet. If I manually step through the VBA code line by line in the debug mode through the whole for loops, everything works. However, if I press F5 and run the whole VBA for loop at full speed. The code produces the same result for many (not all) of the consecutive iterations of the for loop, while I know the results should all be different. My guess is that the workseets become stale and are not replaced with new data.</p>

<p>The following is my VBA code. I would really appreciate if someone would take a look at it and help to resolve this problem. The main part of the code that is problematic is ""sht.Calculate"".</p>

<pre><code>Option Base 1
#If VBA7 Then
    Public Declare PtrSafe Sub Sleep Lib ""kernel32"" (ByVal dwMilliseconds As LongPtr) 'For 64 Bit Systems
#Else
    Public Declare Sub Sleep Lib ""kernel32"" (ByVal dwMilliseconds As Long) 'For 32 Bit Systems
#End If

Function runCalibrate()
Dim xl As Workbook
Set xl = ThisWorkbook
nRowPerBlock = 15
yrs = Array(""2005"", ""2006"", ""2007"", ""2008"", ""2009"", ""2010"", ""2011"", ""2012"", ""2013"", ""2014"", ""2015"")

Application.Calculation = xlCalculationManual

strikeSentinel = Array(1, 13)
maturitySentinel = Array(1, 10)

nRow = maturitySentinel(2) - maturitySentinel(1) + 1
nCol = strikeSentinel(2) - strikeSentinel(1) + 1
For j = 1 To UBound(yrs)
    Set a = Worksheets(yrs(j)).Cells(3, 2)
    For i = 0 To 11
        b = a.Offset(1 + nRowPerBlock * i, 1).Resize(nRow, nCol)
        xl.Sheets(""SPX"").Range(""p4:ab13"") = b

        'refresh required worksheets
        Call RefreshSheetNX(xl.Sheets(""TODAY""))
        Call RefreshSheetNX(xl.Sheets(""USD""))
        Call RefreshSheetNX(xl.Sheets(""SPX""))
        Call RefreshSheetNX(xl.Sheets(""EQ Model""))
        Call RefreshSheetNX(xl.Sheets(""EQ Calibration""))

        c = xl.Sheets(""EQ Calibration"").Range(""c18:c32"")
        xl.Sheets(""calibration time series"").Cells(38, 2 + 12 * (j - 1) + i).Resize(15, 1) = c
    Next i
Next j

End Function

Function RefreshSheetNX(sht As Worksheet)
    On Error Resume Next
    sht.Cells.Dirty
    sht.Calculate
    Call Sleep(1000)
    sht.Calculate
    Call Sleep(1000)
End Function
</code></pre>

<hr>

<p>As Byron suggested, I use 'Application.CalculateFullRebuild' as in the following code. But it is not reacting at all when I stepped through 'Application.CalculateFullRebuild'.</p>

<pre><code>Option Base 1
#If VBA7 Then
    Public Declare PtrSafe Sub Sleep Lib ""kernel32"" (ByVal dwMilliseconds As LongPtr) 'For 64 Bit Systems
#Else
    Public Declare Sub Sleep Lib ""kernel32"" (ByVal dwMilliseconds As Long) 'For 32 Bit Systems
#End If

Function runCalibrate()
Dim xl As Workbook
Set xl = ThisWorkbook
nRowPerBlock = 15
yrs = Array(""2005"", ""2006"", ""2007"", ""2008"", ""2009"", ""2010"", ""2011"", ""2012"", ""2013"", ""2014"", ""2015"")

Application.Calculation = xlCalculationManual

strikeSentinel = Array(1, 13)
maturitySentinel = Array(1, 10)

nRow = maturitySentinel(2) - maturitySentinel(1) + 1
nCol = strikeSentinel(2) - strikeSentinel(1) + 1
For j = 1 To UBound(yrs)
    Set a = Worksheets(yrs(j)).Cells(3, 2)
    For i = 0 To 11
        b = a.Offset(1 + nRowPerBlock * i, 1).Resize(nRow, nCol)
        xl.Sheets(""SPX"").Range(""p4:ab13"") = b

        'refresh required worksheets
'        Call RefreshSheetNX(xl.Sheets(""TODAY""))
'        Call RefreshSheetNX(xl.Sheets(""USD""))
'        Call RefreshSheetNX(xl.Sheets(""SPX""))
'        Call RefreshSheetNX(xl.Sheets(""EQ Model""))
'        Call RefreshSheetNX(xl.Sheets(""EQ Calibration""))
        Application.CalculateFullRebuild            

        c = xl.Sheets(""EQ Calibration"").Range(""c18:c32"")
        xl.Sheets(""calibration time series"").Cells(38, 2 + 12 * (j - 1) + i).Resize(15, 1) = c
    Next i
Next j

End Function
</code></pre>
","<p>Consider the use of <code>Application.CalculateFullRebuild</code> instead of multiple calls to <code>Calculate</code> for each sheet.  It will force a recalc of everything and rebuild dependencies (as the name implies).</p>

<p>Depending on how formulas are related between sheets, you might not be triggering the right order of calculations processing each sheet one at a time.  The full rebuild approach is the ""nuclear option"" for refreshing a spreadsheet.  Specifically, calling <code>sht.Cells.Dirty</code> and then <code>sht.Calculate</code> may only force a refresh of the current sheet without consideration for changes on other sheets.</p>
"
"<p>Table1</p>

<pre><code>   A         B            C            D   
1 Seq        Item     Re-Order Qty  On-hand Qty
2  1          X         10           15
3  2          Y         10           5
4  3          Z         10           10
</code></pre>

<p>Other worksheet:
Table2</p>

<p>Expected output:</p>

<pre><code>    A           B            C
1   Seq       Item      Re-Order Qty
2   1          N/A          N/A
3   2           Y           10
4   3          N/A          N/A
</code></pre>

<p>In table2 I need to put in column 2 equation like this:</p>

<pre><code>Index(Table1[Item],Match(table2[Seq],tabel1[Seq],0) WHERE table1[reorder qty] &gt; table1[On-hand Qty]
</code></pre>

<p>I'm not sure how such requirement could be managed?</p>
","<p>This can be done.  It requires the use of an array formula in <code>Table2</code>.</p>

<p>Normally with an <code>INDEX</code> you simply use a range of cells as the <code>array</code> (first argument of the formula).  In this case, we will give it a new <code>array</code> to return based on the results of a conditional (your <code>WHERE</code> clause).</p>

<p>I will start with the picture of results and then give the formulas.  For me, <code>Table1</code> is on the left, <code>Table2</code> on the right.</p>

<p><img src=""https://i.stack.imgur.com/uMzw2.png"" alt=""picture of tables""></p>

<p><strong>Formulas</strong></p>

<p>The formulas are very similar, the main difference is which column to return in the <code>IF</code> part which generates the <code>array</code> for <code>INDEX</code>.  The conditional part of the <code>IF</code> is the same for all columns.  Note that using Tables here really helps copying around the formulas since the ranges cannot change under us.</p>

<p>These are all array formulas and need to be entered with CTRL+SHIFT+ENTER.</p>

<p><code>Table2[Item]</code></p>

<pre><code>=INDEX(IF(Table1[Re-Order Qty]&gt;Table1[On-hand Qty],Table1[Item],""N/A""), MATCH([@Seq],Table1[Seq],0))
</code></pre>

<p><code>Table2[Re-Order Qty]</code></p>

<pre><code>=INDEX(IF(Table1[Re-Order Qty]&gt;Table1[On-hand Qty],Table1[Re-Order Qty],""N/A""), MATCH([@Seq],Table1[Seq],0))
</code></pre>

<p><code>Table2[On-hand Qty]</code></p>

<pre><code>=INDEX(IF(Table1[Re-Order Qty]&gt;Table1[On-hand Qty],Table1[On-hand Qty],""N/A""), MATCH([@Seq],Table1[Seq],0))
</code></pre>

<p>The main idea behind these formulas is:</p>

<ul>
<li>Return a new array based on the conditional.  This new array will return the desired column (<code>Item</code>, <code>Re-order</code>, ...) or it will return <code>N/A</code> if the conditional is <code>FALSE</code>.  This requires the array formula entry since it is going row by row in the <code>IF</code>.</li>
<li>The <code>MATCH</code> part of the formula to get the row number is ""standard"".  We are simply looking for the <code>Seq</code> number in <code>Table1</code>.  This determines which row of the new <code>array</code> to return.</li>
</ul>
"
"<p>I am looking around for a formula to hide certain rows based on certain cell inputs. In cell <code>C5</code> I have a drop-down selection of ""<code>Corporates</code>"" and ""<code>Projects</code>"". In cell <code>C8</code> I have a drop-down selection of ""<code>High</code>"", ""<code>Medium</code>"", and ""<code>Low</code>"". In cell <code>H6</code> I have the formula <code>=C5&amp;C8</code>. The macro I have is as follows:</p>

<pre><code>Private Sub Worksheet_Change(ByVal Target As Range)
If Target.Address(False, False) = ""H6"" Then
    Select Case Target.Value
        Case ""CorporatesHigh"": Rows(""21:33"").Hidden = True: Rows(""12:20"").Hidden = False
        Case ""CorporatesMedium"": Rows(""21:33"").Hidden = True: Rows(""12:20"").Hidden = False
        Case ""CorporatesLow"": Rows(""25:33"").Hidden = True: Rows(""12:24"").Hidden = False
        Case ""ProjectsHigh"": Rows(""25:28"").Hidden = False: Rows(""29:33"").Hidden = True: Rows(""12:24"").Hidden = True
        Case ""ProjectsMedium"": Rows(""25:28"").Hidden = False: Rows(""29:33"").Hidden = True: Rows(""12:24"").Hidden = True
        Case ""ProjectsLow"": Rows(""25:33"").Hidden = False: Rows(""12:24"").Hidden = True
        Case """": Rows(""12:33"").Hidden = False
        Case ""Corporates"": Rows(""12:33"").Hidden = False
        Case ""Projects"": Rows(""12:33"").Hidden = False
        Case ""High"": Rows(""12:33"").Hidden = False
        Case ""Medium"": Rows(""12:33"").Hidden = False
        Case ""Low"": Rows(""12:33"").Hidden = False
    End Select
End If
End Sub
</code></pre>

<p>The macro works when I click into <code>H6</code> but I need it to work when cells <code>C5</code> or <code>C8</code> is changed.</p>
","<p>The <code>If-Not-Intersect-Is Nothing</code> pattern is the preferred way to check if the changed cells(s) are inside a given range of cell(s).</p>

<p>To handle all three of your cells, you can use the following.  You can easily add or remove cells to the <code>Range</code> if you want.</p>

<pre><code>Private Sub Worksheet_Change(ByVal Target As Range)
    If Not Intersect(Target, Range(""H6,C5,C8"")) Is Nothing Then
        Select Case Range(""H6"").Value
            Case ""CorporatesHigh"": Rows(""21:33"").Hidden = True: Rows(""12:20"").Hidden = False
            Case ""CorporatesMedium"": Rows(""21:33"").Hidden = True: Rows(""12:20"").Hidden = False
            Case ""CorporatesLow"": Rows(""25:33"").Hidden = True: Rows(""12:24"").Hidden = False
            Case ""ProjectsHigh"": Rows(""25:28"").Hidden = False: Rows(""29:33"").Hidden = True: Rows(""12:24"").Hidden = True
            Case ""ProjectsMedium"": Rows(""25:28"").Hidden = False: Rows(""29:33"").Hidden = True: Rows(""12:24"").Hidden = True
            Case ""ProjectsLow"": Rows(""25:33"").Hidden = False: Rows(""12:24"").Hidden = True
            Case """": Rows(""12:33"").Hidden = False
            Case ""Corporates"": Rows(""12:33"").Hidden = False
            Case ""Projects"": Rows(""12:33"").Hidden = False
            Case ""High"": Rows(""12:33"").Hidden = False
            Case ""Medium"": Rows(""12:33"").Hidden = False
            Case ""Low"": Rows(""12:33"").Hidden = False
        End Select
    End If
End Sub
</code></pre>
"
"<p><strong><em>Required:</em></strong>
I'm trying to create a macro that filters <strong>cell I22</strong> for all <em>zero</em> values, selects all those rows, deletes them and then unfilters again.</p>

<p><strong><em>What I have:</em></strong>
Currently I'm doing this in two different steps, since doing this in one step takes a couple hours (as it deletes row per row)</p>

<p><strong>Code (1)</strong>: Autofilters to 'zero' and 'N/A', selects all of them and clears all the content. Next it clears the filter and sorts from largest to smallest. This way excel doesn't have to delete each row separately making the process faster.</p>

<p><strong>Code (2)</strong>: Deletes all the blank rows.</p>

<p>I have the impression this code is not exactly efficient and too long given the task it needs to do. Is it possible to combine these into one code?</p>

<p><strong><em>Code (1)</em></strong></p>

<pre><code>Sub clearalldemandzero()

clearalldemandzero Macro

ActiveWindow.SmallScroll Down:=15
Range(""A26:EU26"").Select
Selection.AutoFilter
ActiveWindow.SmallScroll ToRight:=3
ActiveSheet.Range(""$A$26:$EU$5999"").AutoFilter Field:=9, Criteria1:=""=0.00"" _
    , Operator:=xlOr, Criteria2:=""=#N/A""
Rows(""27:27"").Select
Range(""D27"").Activate
Range(Selection, Selection.End(xlDown)).Select
Selection.Clear
ActiveSheet.ShowAllData
Range(""H28"").Select
ActiveWorkbook.Worksheets(""Solver 4"").AutoFilter.Sort.SortFields.Clear
ActiveWorkbook.Worksheets(""Solver 4"").AutoFilter.Sort.SortFields.Add Key:= _
    Range(""I26:I5999""), SortOn:=xlSortOnValues, Order:=xlDescending, _
    DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(""Solver 4"").AutoFilter.Sort
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With
End Sub
</code></pre>

<p><strong><em>Code (2)</em></strong></p>

<pre><code>Sub DeleteBlankRows3()

'Deletes the entire row within the selection if the ENTIRE row contains no data.'

Dim Rw As Range

If WorksheetFunction.CountA(Selection) = 0 Then

    MsgBox ""No data found"", vbOKOnly, ""OzGrid.com""
    Exit Sub
End If

With Application

    .Calculation = xlCalculationManual
    .ScreenUpdating = False
    Selection.SpecialCells(xlCellTypeBlanks).Select

    For Each Rw In Selection.Rows

        If WorksheetFunction.CountA(Selection.EntireRow) = 0 Then

            Selection.EntireRow.Delete
        End If
    Next Rw

    .Calculation = xlCalculationAutomatic
    .ScreenUpdating = True

End With

End Sub
</code></pre>
","<p>If your code to Select the filtered data is working, you can simply delete all the rows at that step in one shot.  The key is to use <code>SpecialCells</code> and only select visible cells.  Then you can get the <code>EntireRow</code> and <code>Delete</code> it.</p>

<p>The relevant line of code to add would be this:</p>

<pre><code>Selection.SpecialCells(xlCellTypeVisible).EntireRow.Delete
</code></pre>

<p>The modification to code 1 in its entirety should be:</p>

<pre><code>Sub clearalldemandzero()

    clearalldemandzero Macro



    ActiveWindow.SmallScroll Down:=15
    Range(""A26:EU26"").Select
    Selection.AutoFilter
    ActiveWindow.SmallScroll ToRight:=3
    ActiveSheet.Range(""$A$26:$EU$5999"").AutoFilter Field:=9, Criteria1:=""=0.00"" _
        , Operator:=xlOr, Criteria2:=""=#N/A""
    Rows(""27:27"").Select
    Range(""D27"").Activate
    Range(Selection, Selection.End(xlDown)).Select

    Selection.SpecialCells(xlCellTypeVisible).EntireRow.Delete

    ActiveSheet.ShowAllData


End Sub
</code></pre>

<p>As a side note, you should generally work to avoid using <code>Select</code> <code>Selection</code> and other things that interface with the Excel UI like that.  I did not try to fix those issues here since it seems that your code is generally working.  Reference to that issue: <a href=""http://stackoverflow.com/questions/10714251/how-to-avoid-using-select-in-excel-vba-macros"">How to avoid using Select in Excel VBA macros</a></p>
"
"<p>Please give a hand with this im trying to have a conditional formatting to apply to input cells in a spreadsheet but at the same time i want a switch to
turn it off for printing purposes.</p>

<p>Formula:</p>

<pre><code>=IF(READY_TO_PRINT=""YES"",CELL(""protect"",A1)=0)
</code></pre>

<p>The ready to print is a name range to serve as a switch to turn the specify style i want to turn off before print.</p>

<p>I would appreciate any solution including vba scenarios.
Thanks in advance!</p>
","<p>If you want to apply the formatting with both conditions, you just need an <code>AND</code> around them.  Conditional formatting expects to get a <code>TRUE/FALSE</code> answer to apply the formatting.  <code>AND</code> does this properly while <code>IF</code> will not as you've written it.</p>

<pre><code>=AND(READY_TO_PRINT=""NO"",CELL(""protect"",A1)=0)
</code></pre>

<p>I switched your <code>READY_TO_PRINT</code> to <code>""NO""</code> since it seems you want to apply the formatting when it is not ready to print (as I understand it).  If not, hopefully you can modify this formula as needed to get your solution.</p>
"
"<p>I am trying to create a vocabulary quiz in excel, where a correct answer is the only possible input into a cell. So far, I use data validation to ensure that outcome, but cannot figure out a way to batch edit data validation. I want every blank cell's validation to equal the adjacent cell, which contains the correct answer. I was hoping that copying one correctly formatted cell and pasting it in an empty cell would cause the new cell to reference the new adjacent cell, but have found that the new empty cell still validates according to the old cell.  In other words, I would like the cell's data validation to copy and paste sequentially, like when you drag a cell containing the number 1 and the cells below populate with 1, 2, 3, etc. </p>

<p>This is a problem that has to do with efficiency. I could accomplish what I want by data validating every cell to its adjacent ""by hand,"" but it takes a very long time with large amounts of data. I've tried conditional formatting as well--a correct answer turns the cell green--but have run into the same problem. </p>

<p>Any help would be greatly appreciated. 
Thanks.</p>
","<p>Not sure how you did the copy/paste, but it should work fine.  Here is an example.</p>

<p>Set up the initial data validation.  I am using the <code>List</code> version of it with a single cell reference.  Note that the single cell reference is defined relatively (no dollar signs in it).  I removed the <code>In-cell dropdown</code> option so the answer isn't visible!</p>

<p><img src=""https://i.stack.imgur.com/dA8zC.png"" alt=""set up initial data validation""></p>

<p>Now if I copy that cell and paste one cell below, it will apply the data validation with the range updated.  I did this with a simple copy of <code>C6</code> and paste into <code>C7</code>.  I changed the value to <code>b</code> after the paste to not get the error.  When I open the validation for <code>C7</code> I see the new range (<code>D7</code>).</p>

<p><img src=""https://i.stack.imgur.com/YhjOX.png"" alt=""copy/paste result""></p>

<p>You can paste to a larger range than 1 cell and it will update all of the references accordingly.</p>
"
"<p>I am trying to make a red label appear on my form and can not. I have tried changing the property to RGB and HEX and just get errors. Is there a way to get a property value to make my label RGB(200, 0, 0)? I am unaware of how the value in the property areas is developed. </p>

<p>This is the only way I can make a red label:</p>

<pre><code>Private Sub Label13_Click()
 Label13.BackColor = RGB(200, 0, 0)
End Sub
</code></pre>

<p>I have to click the label to make it red. Is there a way to use code to make it red when the form starts? Or perhaps generate a value for the property? Thank you for your help in advance.</p>
","<p>You can use the <code>Initialize</code> event for the form instead of putting the event on a <code>Click</code> event.</p>

<p>Here is an example with the form named <code>UserForm</code>.  Use the dropdowns to select the form and then the <code>Initialize</code> event.</p>

<p><img src=""https://i.stack.imgur.com/NY9fM.png"" alt=""form events""></p>

<p>You can also just set the color in the properties if you know this is the color you want.</p>

<p><img src=""https://i.stack.imgur.com/JL8sr.png"" alt=""label properties""></p>
"
"<p>I'm trying to loop through a range below and get runtime error 1004. The highlighted row is this one here:</p>

<pre><code>ActiveChart.SeriesCollection(i).Values = Worksheets(""Chart Help"").Range(Cells(10 + j, 5), Cells(10 + j, 1006))
</code></pre>

<p>Can anyone tell me what's wrong?  </p>

<pre><code>If Worksheets(""Chart Help"").Cells(4, 9 + j) &lt;&gt; "" "" Then
    ActiveChart.SeriesCollection.NewSeries
    ActiveChart.SeriesCollection(i).Name = Worksheets(""Chart Help"").Cells(4, 9 + j)
    ActiveChart.SeriesCollection(i).XValues = Worksheets(""Chart Help"").Range(""J5:J1006"")
    ActiveChart.SeriesCollection(i).Values = Worksheets(""Chart Help"").Range(Cells(10 + j, 5), Cells(10 + j, 1006))
    ActiveChart.SeriesCollection(i).Select

    With Selection.Format.Line
        .Visible = msoTrue
        .ForeColor.ObjectThemeColor = msoThemeColorAccent6
        .ForeColor.TintAndShade = 0
        .ForeColor.Brightness = 0
        .Transparency = 0
    End With

    i = i + 1
End If

j = j + 1
</code></pre>
","<p>I assume your loop has the proper code and you simply didn't paste it all.</p>

<p>Your 2 calls to <code>Cells</code> refer to the <code>ActiveSheet</code> and not the <code>Chart Help</code> worksheet like you intend.  You will need to prefix <code>Cells</code> with <code>Worksheets(""Chart Help"").Cells</code> for it to not error.</p>

<p>Something like this:</p>

<pre><code>ActiveChart.SeriesCollection(i).Values = Worksheets(""Chart Help"").Range(Worksheets(""Chart Help"").Cells(10 + j, 5), Worksheets(""Chart Help"").Cells(10 + j, 1006))
</code></pre>

<p>Ideally you would define a reference to that worksheet to clean up the code.  You also do not have to prefix the <code>Range</code> with the worksheet in this case.  Those two ideas combined give:</p>

<pre><code>Dim sht_chart As Worksheet
Set sht_chart = Worksheets(""Chart Help"")
ActiveChart.SeriesCollection(i).Values = Range(sht_chart.Cells(10 + j, 5), sht_chart.Cells(10 + j, 1006))
</code></pre>
"
"<p>I have a list of names and numbers</p>

<pre><code>NAME    |    Number
Joe     |     1
Jane    |     0
Jack    |     1
Jill    |     0
John    |     1
</code></pre>

<p>I'm trying to look up the numbers and find out the corresponding name
The formula I have is</p>

<pre><code>{=index($A$2:$B$6, SMALL(IF($B$2:$B$6 = 1, ROW ($B$2:$B$6)), Row(1:1)), 1)}
</code></pre>

<p>As I understand the formula:</p>

<ul>
<li>First Excel runs the index function. It runs the index function on the array A2 through B6.</li>
<li>For the row number in the index function, it uses the function <code>SMALL(IF($B$2:$B$6 = 1, ROW ($B$2:$B$6)), Row(1:1)</code>. This examines an array, b2:b6, and if the element under consideration in B2:B6 is a 1, it returns the row number of b2:b6. In this case, it would return a 2.</li>
<li>At this point I'm kind of stuck. I'm guessing that the second ROW function returns first case of the 1 derived from the small function</li>
<li>Lastly, the index function finds the name located in column 1 for the index found. </li>
</ul>
","<p>Your understanding of this formula is pretty good.  I assume that you are going to copy it down enough rows to get all the values reported?  If so, here is what is happening:</p>

<ul>
<li><code>INDEX</code> needs to know what row to go retrieve.  In order to do this, we are going to give it a row number.</li>
<li>In order to get a row number we need to know which items meet the condition. We use the <code>IF</code> conditional to report a row number if the condition is met (otherwise we get <code>FALSE</code>).</li>
<li>Since that will give us an array of row numbers, we then use the <code>SMALL</code> function to give us a <strong>single</strong> value.  That satisfies the <code>INDEX</code> function which needs a single row to retrieve.</li>
<li>So which value do we choose from <code>SMALL</code>?  Well, we just give it a sequence of 1-2-3-... by using <code>ROW(1:1)</code>.  When this is copied down, it will become <code>ROW(2:2)</code>, <code>ROW(3:3)</code>, etc.  Each of these will return 1, 2, 3, respectively so we get the next entry.  Note that <code>SMALL</code> skips <code>FALSE</code> so it works for the output of the <code>IF</code> call.</li>
</ul>

<p>So the first call to <code>ROW</code> (inside the <code>IF</code>) is used to determine the row of the values in the array that match the condition.  </p>

<p><strong>The second call to <code>ROW(1:1)</code> is just used to get an incrementing sequence once the formula is copied down.</strong></p>

<p>The final thing to note is that your formula will be <strong>off by one row</strong> on the answers because <code>ROW($B$2:$B$6)</code> will return the absolute row number of those rows and not one that is relative to the starting corner of the array of interest.  In this case, you will need to subtract 1 to get it to work (since it starts in row 2).  In the general case, use a formula like this which accounts for the offset of the array:</p>

<pre><code>=INDEX($A$2:$A$6,SMALL(IF($B$2:$B$6=1,ROW($B$2:$B$6)-ROW($B$2)+1),ROW(1:1)))
</code></pre>

<p>That is an array formula like you have (enter with CTRL+SHIFT+ENTER).  The corresponding ranges look like:</p>

<p><img src=""https://i.stack.imgur.com/GuC6V.png"" alt=""range for formula""></p>
"
"<p>I have target.address (or just target) from a worksheet_change sub. I'd like to use the row from target.address and a range of columns (H:W), and get a sum of that range. So, for instance, if I have $100 in H10 and I add $50 in J10, I'd like to get the sum of $150 since my target.address row is 10 and I'm within my desired column range H:W. </p>
","<p>You can use <code>Intersect</code> and <code>EntireRow</code> to figure out which cells to sum.  I would give them to <code>Application.Sum</code> to do the math.  Another call to <code>Intersect</code> will let you know if the changed cell is in the ""boxed"" area.</p>

<pre><code>Private Sub Worksheet_Change(ByVal Target As Range)

    Dim sum As Double
    Dim rng_match As Range

    Set rng_match = Range(""H:W"")

    If Target.Cells.Count = 1 Then
        If Not Intersect(Target, rng_match) Is Nothing Then
            sum = Application.sum(Intersect(Target.EntireRow, rng_match))
        End If
    End If

End Sub
</code></pre>

<p><strong>Edit:</strong> added a check on <code>Target.Cells.Count</code> per @Tim Williams to ensure that the sum is not affected by a multi-cell edit.  The <code>Else</code> would need to address what to do next if this is an issue.</p>
"
"<p>Normally calculated pivot table fields in excel (2010) you click: 
design tab > options and sets > calculated field</p>

<p>and if you had three columns: name, sales, cost</p>

<pre><code>name | sales | cost
josh    10      2    
</code></pre>

<p>your calculated field might be: profit which would be: = sales - cost.</p>

<p>However is it possible to make a calculated field which calculates the difference between two items in the one ""Week Ending"" column?</p>

<p>For example ""Week ending"" contains a dates which end on a friday 2015-05-01,2015-05-08,2015-05-15 etc and they are in the column labels section of the pivot table.</p>

<p>The ""week ending"" dates are all in the one column, is it still possible to calculate the difference between two of them with a calculated field?</p>

<pre><code>name | End Fri 2015-05-01 | End Fri 2015-05-08 | calculated (Delta)
josh    8                              10           10-8 = 2
</code></pre>
","<p>You do this with a <code>Calculated Item</code>.  Here is an example that I think gets close to what you want.  I selected one of the dates in order to get the menu to show up.</p>

<p><img src=""https://i.stack.imgur.com/JuBt3.png"" alt=""calc. item""></p>

<p><img src=""https://i.stack.imgur.com/GFPJy.png"" alt=""calculated field""></p>

<p>Here is the result</p>

<p><img src=""https://i.stack.imgur.com/mBEqu.png"" alt=""result""></p>

<p>And here is a good reference about these.  <a href=""http://www.contextures.com/excelpivottablecalculateditem.htm"" rel=""nofollow noreferrer"">http://www.contextures.com/excelpivottablecalculateditem.htm</a></p>
"
"<p>this should be pretty basic for many participants here. Also, this is my first question here so I'm sorry if i make something wrong.</p>

<p>I am trying to unselect a specific value from charts. Unselecting the category from the chart is the problem. Basically, from all the series in that chart. if one of the series name(Value) is iqual ""NotThisSeries"" then unselect it.</p>

<pre><code>Sub exmpl()

Dim MySeries As Variant

ActiveSheet.ChartObjects(""Chart 3"").Activate

For Each MySeries In ActiveChart.SeriesCollection

  Select Case MySeries.XValues

    Case MySeries.Name = ""NotThisSeries""

      ActiveChart.SeriesCollection(MySeries.Name).IsFiltered = True

    Case Else

  End Select

Next MySeries

End Sub
</code></pre>
","<p>The main issue with your code is that you are using a <code>Select Case</code> when you seem to just need a simple <code>If</code>.</p>

<p>The corrected code for that is</p>

<pre><code>Sub exmpl()

    Dim MySeries As Series
    ActiveSheet.ChartObjects(""Chart 3"").Activate

    For Each MySeries In ActiveChart.SeriesCollection
      If MySeries.Name = ""NotThisSeries"" Then
          ActiveChart.SeriesCollection(MySeries.Name).IsFiltered = True
        End If
    Next MySeries

End Sub
</code></pre>

<p>If you want to use the <code>Select Case</code> to handle other names, here is the correct way to do that:</p>

<pre><code>Sub exmpl()

    Dim MySeries As Series
    ActiveSheet.ChartObjects(""Chart 3"").Activate

    For Each MySeries In ActiveChart.SeriesCollection
        Select Case MySeries.Name
            Case ""NotThisSeries""
              ActiveChart.SeriesCollection(MySeries.Name).IsFiltered = True
        End Select
    Next MySeries

End Sub
</code></pre>

<p><strong>Edit</strong>, here is the corresponding code to hide a category instead of a series.</p>

<pre><code>Sub exmpl()

    Dim MySeries As Series
    ActiveSheet.ChartObjects(""Chart 3"").Activate

    Dim i As Integer
    Dim cat As ChartCategory

    For i = 1 To ActiveChart.ChartGroups(1).FullCategoryCollection.Count

        Set cat = ActiveChart.ChartGroups(1).FullCategoryCollection(i)

        If cat.Name = ""NotThisSeries"" Then
            cat.IsFiltered = True
        End If
    Next

End Sub
</code></pre>

<p>Here is another SO question that helped with the second part.  See comments to the question.  <a href=""http://stackoverflow.com/questions/25896074/set-an-excel-chart-filter-with-vba"">Set an excel chart filter with VBA</a></p>
"
"<p>I am trying to compare the time value from sheet 1 to sheet 2 and get the close match values in sheet1 -- B, C, D columns. Whenever I refresh the cell A it should automatically update the results in B, C, C, D see expected result</p>

<p>Sheet 1 show current time i.e., cell A1 ""=now()""</p>

<pre><code>    Sheet1
----------------------------------------------------
|   A           |   B       |   C       |   D       |
|---------------------------------------------------
|   12:55:00    |           |           |           |
----------------------------------------------------
</code></pre>

<p>In sheet 2, data available in 4 columns as below</p>

<pre><code>   --------------------------------------------------------
|   No  |   Start       |   End         |   Date        |
|-------------------------------------------------------
|   1   |   07:36:00    |   08:23:10    |   15/05/2015  | 
|   2   |   08:23:10    |   09:10:20    |   15/05/2015  |
|   3   |   09:10:20    |   09:57:30    |   15/05/2015  |
|   4   |   09:57:30    |   10:44:40    |   15/05/2015  |
|   5   |   10:44:40    |   11:31:50    |   15/05/2015  |
|   6   |   11:31:50    |   12:19:00    |   15/05/2015  |
|   7   |   12:19:00    |   13:06:10    |   15/05/2015  |
|   8   |   13:06:10    |   13:53:20    |   15/05/2015  |
|   9   |   13:53:20    |   14:40:30    |   15/05/2015  |
|   10  |   14:40:30    |   15:27:40    |   15/05/2015  |
|   11  |   15:27:40    |   16:14:50    |   15/05/2015  |
|   12  |   16:14:50    |   17:02:00    |   15/05/2015  |
|   13  |   17:02:00    |   18:14:50    |   15/05/2015  |
|   14  |   18:14:50    |   19:27:40    |   15/05/2015  |
|   15  |   19:27:40    |   20:40:30    |   15/05/2015  |
|   16  |   20:40:30    |   21:53:20    |   15/05/2015  |
|   17  |   21:53:20    |   23:06:10    |   15/05/2015  |
|   18  |   23:06:10    |   00:19:00    |   16/05/2015  |
|   19  |   00:19:00    |   01:31:50    |   16/05/2015  |
|   20  |   01:31:50    |   02:44:40    |   16/05/2015  |
|   21  |   02:44:40    |   03:57:30    |   16/05/2015  |
|   22  |   03:57:30    |   05:10:20    |   16/05/2015  |
|   23  |   05:10:20    |   06:23:10    |   16/05/2015  |
|   24  |   06:23:10    |   07:36:00    |   16/05/2015  |
---------------------------------------------------------
</code></pre>

<p>Expected </p>

<p>Sheet1 - if the current time is 12:55:00 on 15/05/2015</p>

<pre><code>-----------------------------------------------------------------------------
|   A           |   B       |   C           |   D           |       E       |
|-----------------------------------------------------------|---------------|
|   12:55:00    |   7       |   12:19:00    |   13:06:10    |   15/05/2015  |
-----------------------------------------------------------------------------
</code></pre>

<p>Sheet1 - if the current time is 03:55:00 on 16/05/2015</p>

<pre><code>-----------------------------------------------------------------------------
|   A           |   B       |   C           |   D           |       E       |
|-----------------------------------------------------------|---------------|
|   12:55:00    |   21      |   02:44:40    |   03:57:30    |   16/05/2015  |
-----------------------------------------------------------------------------
</code></pre>

<p>for numbers I using the below formula but not sure how to achieve in case of time</p>

<pre><code>=INDEX(A1:A20,MATCH(MIN(ABS(A1:A20-D1)),ABS(A1:A20-D1),0)) 
</code></pre>

<p>Thanks</p>
","<p>If we assume that your dates are entered from different days but you want to treat them as though they are all on the same day, you just need to subtract off the days part before doing the comparison.</p>

<p>Since Excel stores dates as days with the decimal representing the hours/seconds, you can simply subtract off the integer part of the value.</p>

<p>Here is that formula.  This is an array formula, entered with CTRL+SHIFT+ENTER.</p>

<pre><code>=INDEX(A1:A20,MATCH(MIN(ABS(A1:A20-INT(A1:A20)-D1+INT(D1))),ABS(A1:A20-INT(A1:A20)-D1+INT(D1)),0))
</code></pre>

<p>For <code>A1:A20</code> we subtract off <code>INT(A1:A20)</code>.  Same thing for <code>D1</code> except <code>D1</code> is already being subtracted, so the <code>INT</code> part gets added back in.</p>
"
"<p>I have an excel file which I import data from bloomberg via the function BDH. I can easily update bloomberg formulas, but the other columns with excel formulas are not updated, so currently I need to drag down the excel formulas everyday. I have already tried to use the code but it does not work. Can someone help me on that? Thank you very much</p>

<pre><code>Sub update_formulas()

Activeworkbook.RefreshAll

End sub
</code></pre>
","<p>CTRL+ALT+F9 is the keyboard shortcut for a full recalculation.</p>

<p><code>Application.CalculateFullRebuild</code> is another way to force a refresh of an entire workbook's formulas if want to use VBA.</p>

<p>Note that <code>RefreshAll</code> is only for refreshing <code>Data</code> related items.  It is the same as going to <code>Data-&gt;Refresh-&gt;Refresh All</code>.  It will update Pivot Tables and external connections.  It will generally not update formulas unless they are referencing the data / Pivot Table that was updated.</p>
"
"<p>I have data of varying character length in column <code>AJ</code> (anywhere from 3 to 5, or 0 characters). I use the following piece of code to display the character length in column AK.</p>

<pre><code>Range(""AK3:AK15000"").Formula = ""=LEN(AJ3)""
</code></pre>

<p>I want create a new column of data in column AL such that if the character length in AK is 5, it will return what was in column AJ. If the character length in AK is 4, I need it to return what was in column AJ, but with a zero (0) in front. If the character length is 3, I need it to return what was in column AJ, but with two zeros (00) in front. If the character length is zero (0), then return nothing. The following code will not work and returns an error.</p>

<pre><code>If Range(""AK3:AK15000"").Value = 5 Then
    Range(""AL3:AL15000"").Formula = ""=AJ3""
ElseIf Range(""AK3:AK15000"").Value = 3 Then
    Range(""AL3:AL15000"").Formula = ""CONCATENATE(0,0,AJ3)""
ElseIf Range(""AK3:AK15000"").Value = 4 Then
    Range(""AL3:AL15000"").Formula = ""CONCATENATE(0,AJ3)""
End If
</code></pre>

<p>Can someone please help me?</p>
","<p>You can also make good use of <code>REPT</code> here and have it work for any length string less than the pad length.  It will error out if the string is longer than the pad length, but it sounds like that won't happen based on your description.</p>

<p>Here is an example with data in <code>AJ4</code>.</p>

<pre><code>=IF(AJ4&lt;&gt;"""",REPT(0,5-LEN(AJ4))&amp;AJ4,"""")
</code></pre>

<p>Change <code>5</code> to whatever length you want it padded to.</p>
"
"<p>I have the below snippet of code:</p>

<pre><code>For i = 2 To n
    Postcode = Cells(i, 3)

    Cells(i, ""M"") = Postcode

    On Error Resume Next
    EndFrameOutput = Application.WorksheetFunction.VLookup(Postcode, Dealerws3.Range(""C3:D"" &amp; LastRowDealer), 2, False)
    On Error GoTo 0

    Cells(i, 4) = EndFrameOutput
Next
</code></pre>

<p>The resulting output seems to fill the cells where there should be an N/A, with the previous successfully looked up value.</p>

<p>Eg:
if i have this look up table:</p>

<pre><code>Postcode    |   x
------------+-------
AB12 3BJ    |   1
IV1 1RY     |   2
</code></pre>

<p>And this Search Array:</p>

<pre><code>Postcode
----------
AB12 3BJ
BE49 3GK
CG89 6KL
IV1 1RY
ML47 1KK
</code></pre>

<p>using my code, returning column 2 I get...</p>

<pre><code>Postcode    |   Looked up Value
------------+-------------------
AB12 3BJ    |   1
BE49 3GK    |   1
CG89 6KL    |   1
IV1 1RY     |   2
ML47 1KK    |   2
</code></pre>

<p>instead of</p>

<pre><code>Postcode    |   Looked up Value
------------+--------------------
AB12 3BJ    |   1
BE49 3GK    |   n/a
CG89 6KL    |   n/a
IV1 1RY     |   2
ML47 1KK    |   n/a 
</code></pre>

<p>Any ideas on how I can adapt my code?</p>

<p>Any help really appreciated!</p>

<p>thanks,</p>

<p>Colin</p>
","<p>Use <code>Application.VLookup</code> instead of <code>Application.WorksheetFunction.VLookup</code>.  The latter throws an application error when the query is not found.  The former returns the error as the result which you can then deal with.  Since you just want the <code>#N/A</code> as the output, you don't have to do anything special with it.</p>

<p>And get rid of those <code>On Error</code> calls.  You won't need them with the different function, but in general you should avoid using them.</p>

<pre><code>For i = 2 To n
    Postcode = Cells(i, 3)

    Cells(i, ""M"") = Postcode

    EndFrameOutput = Application.VLookup(Postcode, Dealerws3.Range(""C3:D"" &amp; LastRowDealer), 2, False)

    Cells(i, 4) = EndFrameOutput
Next
</code></pre>

<p>Here is a good reference on the difference between those functions.  <a href=""http://dailydoseofexcel.com/archives/2004/09/24/the-worksheetfunction-method/"" rel=""nofollow"">http://dailydoseofexcel.com/archives/2004/09/24/the-worksheetfunction-method/</a></p>
"
"<p>I am looking to insert a new row below a frozen header row at the top of a spreadsheet. The issue I face is the amount of rows in the header is ever changing but I always want the row to be inserted at the first line below the header. Is there a flag in the row that says its frozen? which I could just count the amount of rows with said flag, add 1 and insert row. Any help would be very helpful.</p>

<p>Matt</p>
","<p>If you are using <code>FreezePanes</code> then I think you go this route:</p>

<pre><code>Sub InsertRowBelowHeader()
    Rows(ActiveWindow.Panes(1).VisibleRange.Rows.Count + 1).Insert
End Sub
</code></pre>

<p><strong>Before</strong>, the freeze line is below row 5.  Freeze pane was done on cell <code>A6</code></p>

<p><img src=""https://i.stack.imgur.com/EXxls.png"" alt=""before""></p>

<p><strong>After</strong>, a row is added to split a/b</p>

<p><img src=""https://i.stack.imgur.com/IrT1V.png"" alt=""after""></p>

<p>Here is a relevant discussion which came up on Google for freeze panes and VBA.  <a href=""http://www.mrexcel.com/forum/excel-questions/275645-identifying-freeze-panes-position-sheet-using-visual-basic-applications.html"" rel=""nofollow noreferrer"">http://www.mrexcel.com/forum/excel-questions/275645-identifying-freeze-panes-position-sheet-using-visual-basic-applications.html</a></p>
"
"<p>I'm trying to create a dynamic list based on a set criteria.  I have a list of Agents, and a list of Team Codes and I want to be able to ""select"" a team code and ""extract"" the list of agents for said team based on the criteria.</p>

<p>It's really not much more complicated (as far as the data is concerned) than this:</p>

<pre><code>Team          Agent
Team1         Him
Team1         Her
Team2         Me
Team2         You
</code></pre>

<p>and I select Team1 and get Him and Her in a list, or Team2 and get Me and You in a list.</p>
","<p>I assume you want to get these via a formula.  You can do this with a version of the <code>INDEX-SMALL</code> pattern.</p>

<p><strong>Picture for ranges</strong></p>

<p><img src=""https://i.stack.imgur.com/H9A2y.png"" alt=""image of range""></p>

<p>The formula in <code>F2</code> is an array formula (enter with CTRL+SHIFT+ENTER).  It needs to be copied down far enough to get all your matches.  I overdid it in the picture above.  The input is taken from cell <code>E3</code></p>

<pre><code>=INDEX($C$3:$C$6,SMALL(IF($B$3:$B$6=$E$3,ROW($B$3:$B$6)-ROW($B$3)+1), ROW(1:1)))
</code></pre>

<p>You can see this <a href=""http://stackoverflow.com/questions/30222635/lookup-multiple-items/30223759#30223759"">related post</a> which has a fuller explanation of how that formula works.</p>

<p>If you do not want the errors, wrap the formula in an <code>IFERROR(..., """")</code>.</p>
"
"<p>I've the following data set and want to add the values that reflect ""ABC"" in any cell. </p>

<pre><code>      Column1      Column 2      Column 3     Column 4   Column 5   
      ABC is good    CNN           $150         ABC       NBA
      Better life    N-H           $40          LIT       MNM
      Nice Job       ABC is good   $35          MN        ABC
      Poor           H-I           $200         ITL       ABC
      Best           TI            $120         SQL       ABC  
      Poor life      N-T           $40          LT        NM
      Great          BE            $800         ABC       BEF
</code></pre>

<p>The sum it should return is $150+$35+200+120+$400 = $905 because somewhere in the cells it has the text ""ABC"". I tried using sumif(find) formula but gives me value error. 
Any thoughts? </p>
","<p>Since we are looking for <code>ABC</code> in any of the cells, we can use <code>CONCATENATE-FIND</code> to join all the cells together and then find <code>ABC</code> in the new string.  This saves a ton of code and simplifies the logic.  It always makes it easier to expand to more cells.</p>

<p><strong>Ranges for reference</strong></p>

<p><img src=""https://i.stack.imgur.com/yw6A5.png"" alt=""ranges""></p>

<p><strong>Formula</strong> in <code>G1</code>.  This is an array formula (enter with CTRL+SHIFT+ENTER).</p>

<pre><code>=SUM(IF(ISERR(FIND(""ABC"",CONCATENATE(A1:A7,B1:B7,D1:D7,E1:E7))), 0, C1:C7))
</code></pre>

<p><strong>How it works</strong></p>

<ul>
<li><code>CONCATENATE</code> forms a single large string with all the columns combined</li>
<li><code>FIND</code> looks for <code>ABC</code> in that single string.  It will return a number if found and an error (<code>#VALUE</code>) otherwise.</li>
<li><code>ISERR</code> checks if the error was returned</li>
<li><code>IF</code> decides if the value in column <code>C</code> should be returned or a <code>0</code> based on that error</li>
<li><code>SUM</code> takes all of those numbers and adds them</li>
</ul>
"
"<p>I want to run a macro that allows for the following steps:</p>

<ol>
<li>User clicks on shape A and runs macro</li>
<li><p>Macro will record position and size properties of shape A</p></li>
<li><p>User clicks on Shape B on a different slide</p></li>
<li>Macro applies position and size properties of shape A to shape B</li>
<li>User clicks on Shape C on a different slide</li>
<li>Macro applies position and size properties of shape A to shape C
etc...</li>
</ol>

<p>So far I have been able to get the initial shape (Shape A's) properties, but am not sure how to let the user select the next shapes.  </p>

<pre><code>Dim w As Double
Dim h As Double
Dim l As Double
Dim t As Double

With ActiveWindow.Selection.ShapeRange(1)
    w = .Width
    h = .Height
    l = .Left
    t = .Top
End With
</code></pre>

<p>Appreciate the help!</p>

<hr>

<p>See below for answer.  If you haven't used forms before (like myself), the code that begins with ""Private Sub CommandButton1_Click()"" should NOT be inserted in the same module.  Go to Insert > Userform, then drag two command buttons onto the UI box, and another ""Userform code"" window should appear.  That new window is where the ""Private Sub CommandButton1_Click()"" code should go.</p>
","<p>I think you will have trouble using click events for this.  I would recommend creating macros and storing them on the Quick Access Toolbar.  Once there, the keyboard shortcut is ALT+SOME NUMBER which can be quickly used.  </p>

<p>For the code, the general idea is that you create the variables with <code>global</code> scope.  This allows them to retain their values after the <code>Sub</code> finishing execution. </p>

<p>In the code below, <code>StoreDetails</code> will save, and <code>OutputDetails</code> will apply to newly selected object.  The saved info will stay there so you can go from A to save and then apply to B, C, D without seeing A again.</p>

<p><strong>Code inside Module1</strong></p>

<pre><code>Dim w As Double
Dim h As Double
Dim l As Double
Dim t As Double

Sub StoreDetails()
    With ActiveWindow.Selection.ShapeRange(1)
        w = .Width
        h = .Height
        l = .Left
        t = .Top
    End With
End Sub

Sub OutputDetails()
    With ActiveWindow.Selection.ShapeRange(1)
        .Width = w
        .Height = h
        .Left = l
        .Top = t
    End With
End Sub
</code></pre>

<p>Here is an article about <a href=""https://support.office.com/en-in/article/assign-a-macro-to-a-button-728c83ec-61d0-40bd-b6ba-927f84eb5d2c"" rel=""nofollow"">assigning macros to the Quick Access Toolbar</a> if you need help there.</p>
"
"<p>I want to create a macro that copies the top row of formulas and continue dropping it down the worksheet until one of the formulas in the previous row returns a blank.</p>

<p>Here is my code:</p>

<pre><code>Range(""C8:V8"").Select
Selection.Copy
Do
    ActiveCell.Offset(1, 0).Range(""A1"").Select
    ActiveSheet.Past
Loop Until ActiveCell.offest(-1, 15) = """"
</code></pre>

<p>Any thoughts on why I keep getting an error?</p>
","<p>If you want to check all of the cells for a possible blank, you can use the VBA version of <code>COUNTBLANK</code> for that.</p>

<pre><code>Loop Until Application.CountBlank(ActiveCell.Offset(-1).Resize(,15)) &gt; 0
</code></pre>

<p>The call to <code>Resize</code> is needed to get a range that includes all of the cells for all 15 columns.</p>
"
"<p>Google Doc with data in its current format followed by desired format: <a href=""https://docs.google.com/spreadsheets/d/1XlxEVcP6QpWYyOeflLmp_mKflCBclim_UQSeMkHByh8/edit?usp=sharing"" rel=""nofollow"">https://docs.google.com/spreadsheets/d/1XlxEVcP6QpWYyOeflLmp_mKflCBclim_UQSeMkHByh8/edit?usp=sharing</a></p>

<p>I am trying to create a template to rearrange a data set that is exported in a horrible format.  I have posted a link to a Google Doc that has an example of the data in its current format followed by how I need it to be formatted. Currently, all data for a given person is in a single row, and the ID # is repeated before each record, as shown. Each record consists of 12 columns, and this is repeated 31 times across a row, totaling 372 cells per row. There are 838 rows (or 837 without the headers).  I need either a set of formulas or a macro that will separate a single row of data (the 372 cells) into 31 rows of 12 columns for an entire spreadsheet. I have been able to accomplish this only with a single row (using the <code>offset</code> function and then again using <code>index</code>), but I am struggling to find a way to make it apply to every row on a worksheet. Once that first row is done, the formula goes no further. Ideally, the rearranged data will appear on a <strong>new</strong> worksheet. I can't just manually separate the rows and filter them by ID #, because then I would have to redo that every time I rerun the report. Please let me know if I can give any further clarification!</p>
","<p>Here is a formula based solution.  It assumes that you can create a new sheet to reform the data.  Based on your description, sounds like this is what you want anyways.  I have dummied down the example to have 4 categories and 3 repeats per row. Change the 4 and 3 below to match your 12 and 31.  (Harder to take a snapshot like that!)</p>

<p><strong>Picture of data and results.</strong></p>

<p>Data.  You can pretend that my column header ""A"" is your ""ID"".</p>

<p><img src=""https://i.stack.imgur.com/3MbdC.png"" alt=""data""></p>

<p>Results.  It repeats the headers for simplicity.  You can delete those out at the end.</p>

<p><img src=""https://i.stack.imgur.com/RzThk.png"" alt=""results""></p>

<p><strong>Formula</strong> in <code>A1</code> on <code>Sheet2</code> and copied over 4 columns and down as many rows as needed.</p>

<pre><code>=INDEX(Sheet1!$A$1:$L$7,INT((ROW()-1)/3)+1,MOD(ROW()-1,3)*4+COLUMN())
</code></pre>

<p><strong>How it works</strong></p>

<ul>
<li><code>INDEX</code> is used to return a given cell from the array of the entire data</li>
<li><code>INDEX</code> needs a row and column to retrieve so I used integer division to determine the row.  We know that a given row in the results needs to be repeated for as many repeats of the headers as there are.  In this case 3.  The <code>ROW()</code> refers to the row in the results, and the <code>-1</code> is to ensure that it starts at <code>0</code> instead of <code>1</code>.</li>
<li>The column for <code>INDEX</code> comes from the same idea.  For a given row, it needs to get a column that is the current column ""pushed"" over by the repeating row.  The <code>MOD</code> here ensures that the column numbers repeat in a small range even though the row is becoming a large number.</li>
</ul>

<p>Finally, this formula really relies on the results starting in <code>A1</code> on a fresh sheet.  You can do it differently, but the formulas will become (even more of) a mess.</p>
"
"<p>Say we have some long formula saved in cell <strong>A1</strong>:</p>

<pre><code>=SomeArrayFunction(
IF(SUM(D3:D6)&gt;1,""A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X 01"",
""part_one""),
IF(SUM(D3:D6)&gt;1,""A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X 02"",
IF(SUM(D3:D6)&gt;1,""A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X 03"",
""part_two""))
)
</code></pre>

<p>which uses the following VBA function</p>

<pre><code>Public Function SomeArrayFunction(sOne As String, sTwo As String) As Variant
    Dim V() As Variant
    ReDim V(1 To 2, 1 To 1)
    V(1, 1) = sOne
    V(2, 1) = sTwo
    SomeArrayFunction = V
End Function
</code></pre>

<p>returning a 2×1 array.</p>

<hr>

<p>Now when I call this VBA function</p>

<pre><code>Public Sub EvaluateFormula()
    Dim vOutput As Variant

    vOutput = Application.Evaluate(Selection.Formula)

    If VarType(vOutput) &gt;= vbArray Then
        MsgBox ""Array:"" &amp; vbCrLf &amp; vOutput(1, 1) &amp; vbCrLf &amp; vOutput(2, 1)
    Else
        MsgBox ""Single Value: "" &amp; vbCrLf &amp; vOutput
    End If
End Sub
</code></pre>

<p>while having selected cell <strong>A1</strong> I get an error, because Application.Evaluate cannot handle formulas with more than 255 characters (e.g. see <a href=""http://stackoverflow.com/questions/30267826/vba-error-when-using-application-evaluate-on-long-formula"">VBA - Error when using Application.Evaluate on Long Formula</a>). On the other hand, if I write </p>

<pre><code>vOutput = Application.Evaluate(Selection.Address)
</code></pre>

<p>instead (as proposed in the link above), then it works just fine. Except for the fact that the array is not being recgonised anymore, i.e. <em>MsgBox ""Single Value: ""</em> is called instead of <em>MsgBox ""Array:""</em>.</p>

<p>So my question is: How can I evaluate long formulas (which return arrays) using VBA?</p>

<hr>

<p><strong>Edit:</strong> Let me stress that I need this to work when I only select the <strong>one cell</strong> that conains the formula (not a region or several cells). And I have not entered it as an array formula (i.e. no curly brackets):
<img src=""https://i.stack.imgur.com/FDvrh.png"" alt=""enter image description here""></p>

<hr>

<p><strong>Edit2:</strong> Let me answer the why: my current work requires me to have a long list of such large formulas in a spreadsheet. And since they are organised in a list every such formula can only take up one cell. In almost all cases the formulas return single values (and hence one cell is sufficient to store/display the output). However, when there is an internal error in evaluating the formula, the formula returns an error message. These error messages are usually quite long and are therefore returned as an array of varying size (depending on how long the error message is). So my goal was to write a VBA function that would first obtain and then output the full error message for a given selected entry from the list.</p>
","<p>I believe that <code>Application.Evaluate</code> will return a result that matches the size of the input address.  I suspect that your <code>Selection</code> is a single cell so it is returning a single value.</p>

<p>If instead you call it with <code>Selection.CurrentArray.Address</code> you will get an answer that is the same size as the correct array.</p>

<p><strong>Picture of VBA and Excel</strong></p>

<p><img src=""https://i.stack.imgur.com/1h2Rj.png"" alt=""enter image description here""></p>

<p><strong>Code to test with</strong></p>

<pre><code>Public Function Test() As Variant

    Test = Array(1, 2)


End Function

Sub t()

    Dim a As Variant

    a = Application.Evaluate(Selection.CurrentArray.Address)

End Sub
</code></pre>

<p><strong>Edit</strong>, based on comments here is a way evaluate this off sheet by creating a new sheet.  I am using a cut/paste approach to ensure the formulas all work the same.  This probably works better if cells don't reference the cut one.  It will technically not break any other cells though since I am using cut/paste.</p>

<p>In the code below, I had an array formula in cell <code>J2</code> it referenced several other cells.  It is expanded to have 3 rows and then the <code>Evaluate</code> call is made.  That returns an array like you want.  It then shrinks it down to one cell and moves it back.</p>

<p>I have tested this for a simple example.  I have no idea if it works for the application you have in mind.</p>

<pre><code>Sub EvaluateArrayFormulaOnNewSheet()

    'cut cell with formula
    Dim str_address As String
    Dim rng_start As Range
    Set rng_start = Sheet1.Range(""J2"")
    str_address = rng_start.Address

    rng_start.Cut

    'create new sheet
    Dim sht As Worksheet
    Set sht = Worksheets.Add

    'paste cell onto sheet
    Dim rng_arr As Range
    Set rng_arr = sht.Range(""A1"")
    sht.Paste rng_arr

    'expand array formula size.. resize to whatever size is needed
    rng_arr.Resize(3).FormulaArray = rng_arr.FormulaArray

    'get your result
    Dim v_arr As Variant
    v_arr = Application.Evaluate(rng_arr.CurrentArray.Address)

    ''''do something with your result here... it is an array


    'shrink the formula back to one cell
    Dim str_formula As String
    str_formula = rng_arr.FormulaArray

    rng_arr.CurrentArray.ClearContents
    rng_arr.FormulaArray = str_formula

    'cut and paste back to original spot
    rng_arr.Cut

    Sheet1.Paste Sheet1.Range(str_address)

    Application.DisplayAlerts = False
    sht.Delete
    Application.DisplayAlerts = True

End Sub
</code></pre>
"
"<p>I have a project where I need to count the number of values depending on two factors. For every cell in N, which = EE Only, the corresponding cell in column O = 1. The issue is, for cells where the values are EE+FAM or EE+SP, they need to count the number of instances where those values occur between the corresponding values of ""M"" in column L, as shown in the picture. The picture shows what the output should be.</p>

<p><img src=""https://i.stack.imgur.com/PNyJf.png"" alt=""enter image description here""></p>

<p>The code I have thus far can put a 1 if the value in column N is ""EE Only"", and 2 if the value is something else. I am not sure how to build in a second set of conditions that checks for the values in column L . I am pretty new to VBA, so any help is appreciated. Here is the code.</p>

<pre><code>Sub CountDependents()
    Dim DepCount As Long
    Dim LastRowConsole As Long
    Dim m As Integer
    Dim l As Integer
    Dim j As Integer
    Dim k As Integer
    Dim ws As Worksheet

    Set ws = Sheets(""Audit page"")

    m = 1
    For l = 4 To 15
        If Cells(l, ""N"") &lt;&gt; ""EE Only"" Then
            m = m + 1
        End If

        Cells(l, ""O"").Value = m
        m = 1
    Next l

    k = 1
    For j = 4 To 15
        If Cells(j, ""L"") = ""M"" Then
            k = k + 1
        End If

        Cells(j, ""O"").Value = Cells(j + Cells(j, ""O"") / 2, ""O"").Value
        j = 1
    Next j               
End Sub
</code></pre>
","<p>If you want to process the names column, here is some simple code which will take care of it.  The idea is that you ""build"" a <code>Range</code> using <code>Union</code> and then count those cells when you hit a ""switch"".  You can then output that count wherever you want.</p>

<p>In my dummy example below, I am using <code>d</code> instead of <code>dependent</code>.  I am also outputting right next to the names column.  You can modify these to suit your application.</p>

<pre><code>Sub CountPeople()

    Dim rng_cell As Range
    Dim rng_top As Range

    Set rng_top = Range(""K3"")

    Dim bool_first As Boolean
    bool_first = True

    For Each rng_cell In Range(rng_top, rng_top.End(xlDown))

        If rng_cell &lt;&gt; ""d"" And Not bool_first Then
            'starting new person, output result from last to top of last person
            rng_top.Offset(, 1) = rng_top.Cells.Count

            'new top cell is current cell
            Set rng_top = rng_cell

        Else
            'keep growing range if we see a dependent
            Set rng_top = Union(rng_top, rng_cell)
        End If

        bool_first = False
    Next

    'handle the last person
    rng_top.Offset(, 1) = rng_top.Cells.Count

End Sub
</code></pre>

<p><strong>Results</strong>, note that the output went into the yellow cells.</p>

<p><img src=""https://i.stack.imgur.com/pHBt3.png"" alt=""results of VBA""></p>

<p><strong>Rough description of code</strong></p>

<ul>
<li>Picking a starting point.  </li>
<li>Iterate through all names including that cell and below it.</li>
<li>If the current cell is equal to <code>d</code> then continue building a range</li>
<li>Once we see something other than <code>d</code>, we need to count the previous cells and output the count in the column next door.</li>
<li>There is a line to handle the first case (it should not equal <code>d</code> but we want to count it and keep going) and also the last name which will finish outside the loop.</li>
</ul>
"
"<p>I'm having trouble with my hyperlinks.  </p>

<p>I have some code which works very well for its purpose.  However, it does something additionally which I don't want and to me makes little sense why it is happening.  </p>

<p>The code I have is below:</p>

<pre><code>Dim hLink As Hyperlink
Dim cColumn As Range
Dim Path1 As String
Dim Path2 As String
Dim pathEnd As Integer

Set cColumn = Columns(int4)
str3 = ColumnLetter(ActiveCell.Column)

For Each hLink In cColumn.Hyperlinks
    pathEnd = InStr(hLink.SubAddress, ""!"")
    Path1 = Left(hLink.SubAddress, pathEnd)
    pathEnd = Len(hLink.SubAddress) - InStr(hLink.SubAddress, ColLetter)
    Path2 = Right(hLink.SubAddress, pathEnd)
    hLink.SubAddress = Path1 &amp; str3 &amp; Path2
Next hLink
</code></pre>

<p>int1 finds the column number in a previous subroutine.
ColumnLetter finds the column letter of the new column.</p>

<p>Here's what the full code does (some of which isn't included here).</p>

<p>I have a ""template"" column which is copied to a new column.  The info is updated in the new column and then towards the end of the programme, this hyperlink subroutine is run.</p>

<p>It works very well, but replacing the letter of the template column within the hyperlink address to the new column.</p>

<p>However once it has run, the hyperlinks in the template column have also changed.</p>

<p>I have stopped the code before the hyperlink subroutine is run and the hyperlinks are as expected and have not been changed - ie both columns match the links from the template column.  Therefore I am confident this is the problem code (which makes sense).</p>

<p>I have tried a number of iterations of selecting the new column, to no avail, it always changes the hyperlinks in both columns.</p>

<p>I have even manually run through the code using F8, checking the column number and row number of each hyperlink it seems to be updating and it doesn't even change to the template column!</p>

<p>I'm at a loss.  Please help.</p>
","<p>I believe <code>Hyperlinks</code> are stored at a level above the <code>Range</code> but can be returned at the <code>Range</code> level.  That is, Excel is storing all of the <code>Hyperlinks</code> in one place and then gives you a convenient function to return the <code>Hyperlinks</code> that are anchored in a given <code>Range</code>.  You will find some real oddities if you output all of the info for the Hyperlinks after copy/pasting them around.  It looks like if you copy a range, you just copy a reference to the Hyperlink and do not get a new one.  </p>

<p>I think if you want to change the Hyperlink and not affect the other one, <strong>you probably need to create a new Hyperlink.</strong></p>

<p><strong>Code to show some of the oddities</strong></p>

<pre><code>Sub MakeHyperlinks()

    Dim rng_cell1 As Range
    Set rng_cell1 = Range(""A1"")

    'create a hyperlink to cell one row below
    rng_cell1.Hyperlinks.Add rng_cell1, """", rng_cell1.Offset(1).Address, , rng_cell1.Offset(1).Address

    'copy that column and paste (insert) next door several times
    For i = 1 To 5
        rng_cell1.EntireColumn.Copy
        rng_cell1.EntireColumn.Insert
    Next

    OutputHyperlinkInfo

    'change original hyperlink
    rng_cell1.Hyperlinks(1).SubAddress = ""b2""

    OutputHyperlinkInfo

End Sub

Sub OutputHyperlinkInfo()

    Dim sht As Worksheet
    Set sht = ActiveSheet

    Dim hyp As Hyperlink
    Dim rng_hyp As Range

    Debug.Print Join(Array(""rng.address"", ""hyp.Name"", ""hyp.Range"", ""hyp.Address"", ""hyp.SubAddress"", ""hyp.TextToDisplay""), ""|"")

    For Each rng_hyp In sht.UsedRange.SpecialCells(xlCellTypeConstants)
        For Each hyp In rng_hyp.Hyperlinks
            Debug.Print Join(Array(rng_hyp.Address, hyp.Name, hyp.Range, hyp.Address, hyp.SubAddress, hyp.TextToDisplay), ""|"")
        Next
    Next
End Sub
</code></pre>

<p><strong>Result</strong> includes the Immediate output of the Subs.</p>

<pre><code>rng.address|hyp.Name|hyp.Range|hyp.Address|hyp.SubAddress|hyp.TextToDisplay
$A$1|$A$2|$A$2||$A$2|$A$2
$B$1|$A$2|$A$2||$A$2|$A$2
$C$1|$A$2|$A$2||$A$2|$A$2
$D$1|$A$2|$A$2||$A$2|$A$2
$E$1|$A$2|$A$2||$A$2|$A$2
$F$1|$A$2|$A$2||$A$2|$A$2
rng.address|hyp.Name|hyp.Range|hyp.Address|hyp.SubAddress|hyp.TextToDisplay
$A$1|$A$2|$A$2||b2|$A$2
$B$1|$A$2|$A$2||b2|$A$2
$C$1|$A$2|$A$2||b2|$A$2
$D$1|$A$2|$A$2||b2|$A$2
$E$1|$A$2|$A$2||b2|$A$2
$F$1|$A$2|$A$2||b2|$A$2
</code></pre>

<p>The important thing to note here are that all of the <code>SubAddress</code> were changed even though the original call was to a single cell.  It it also somewhat curious that all of the Hyperlinks have the same <code>Name</code>. Not sure if that is indicative of what is happening here.</p>
"
"<p>I have the following data structure:<br><br>
<img src=""https://i.stack.imgur.com/xUq7X.png"" alt=""Data+Expected Results+What I get"">
<br><br>
As you see in <strong>column J</strong>, I am trying to merge data into one column from columns <strong>A</strong> &amp; <strong>C</strong> &amp; <strong>E</strong> &amp; <strong>G</strong>. </p>

<p>I am using this formula:<br></p>

<pre><code>=IF(ROW()&lt;=COUNTA($A:$A);INDEX($A:$C;ROW();COLUMN(A1));INDEX($A:$C;ROW()-COUNTA($A:$A)+1;COLUMN(C1)))
</code></pre>

<p>and I get the values in column <strong>K</strong> as you see. Currently this formula is merging only two columns. <strong>How to modify it to merge all four columns?</strong></p>

<p><br>
And how to only get those values starting from <strong>row 5</strong>?
<br>The column height will vary constantly: sometimes there are 10 values in column A and sometimes there are 2 values.</p>

<p><br><em>Either any excel formula or any VBA code will be acceptable.</em></p>
","<p>This answer is another way of thinking about the formulas you could use for this sort of task.  It gets to the point made by @Jeeped that it is difficult to find unique values in multiple columns.  My first step then is to create a single column.  </p>

<p>If you can live with a helper column, these formulas might be a tad easier to maintain than the nested <code>IFERROR</code> already proposed.  They are equally difficult to understand though at first glance.  The other upside is that it scales nicely if the number of columns involved increases.</p>

<p>It is possible using <code>CHOOSE</code> and some <code>INDEX</code> math to build a single column array of a group of separated columns.  The trick is that <code>CHOOSE</code> will join discontinuous ranges side-by-side when given an array as the selecting parameter.  If this starts with columns of the same size, you can then use division and mod math to turn it into a single column.</p>

<p><strong>Picture of ranges</strong> shows the four groups of data with duplicates colored red.</p>

<p><img src=""https://i.stack.imgur.com/jaPIP.png"" alt=""picture of ranges""></p>

<p><strong>Formula</strong> in <code>F2:F31</code> is an array formula.  This is combining all of the columns into an array and then back into a single column.  I selected the columns out of order just to emphasize that it is handling a discontinuous range.</p>

<pre><code>=INDEX(CHOOSE({1,2,3,4}, A2:A7,C2:C7,B2:B7,D2:D7), MOD(ROW(1:30)-1, ROWS(A2:A7))+1,INT((ROW(1:30)-1)/ROWS(A2:A7))+1)
</code></pre>

<p>The array formula in <code>H2</code> and copied down is then the standard formula for unique values.  The one exception is that instead of avoiding blanks like normal, I am avoiding 0 values.</p>

<pre><code>=IFERROR(INDEX(F2:F31,MATCH(0,IF(F2:F31=0,1,COUNTIF($H$1:H1,F2:F31)),0)),"""")
</code></pre>

<p>A couple  of other comments about this approach:</p>

<ul>
<li>In the <code>CHOOSE</code>, I am using <code>{1,2,3,4}</code>.  This could be replaced with <code>TRANSPOSE(ROWS(1:4))</code> or whatever number of columns you have.</li>
<li>There is also a <code>ROWS(A2:A7)</code> in 2 places, this could just be <code>2:7</code> or <code>1:6</code> or whatever size was used for the column size.  I used one of the data ranges so that the coloring was simplified and to emphasize it needs to match the size of the block.</li>
<li>And the <code>ROW(1:30)</code> is used for the number of total items to collect.  It really only needs to be <code>1:24</code> since there are <code>6*4</code> items, but I made it big while testing.</li>
</ul>

<p>There are definitely a couple of downsides to this approach, but it may be a good trick to keep in the toolbox.  Never know when you might want to make a column out of discontinuous ranges.  The largest downside is that the columns of data all need to be the same size (and of course the helper column).</p>
"
"<p>This VBA array works and removes all the blanks I want. But it's extending all the way down to like the millonth row, taking up valuable computer resources. I need to either make the VBA stop if ""the next 10 rows in the array are not filled with data"" OR I just need it to stop at row 2000. It scans I1:K2000 &amp; the data is displayed in M1:O2000. </p>

<pre><code>Function NonBlanks(DataRange As Variant) As Variant

Dim i As Long, J As Long, NumRows As Long, NumCols As Long, RtnA() As Variant
Dim RtnRow As Long

Application.ScreenUpdating = 0
If TypeName(DataRange) = ""Range"" Then DataRange = DataRange.Value2

NumRows = UBound(DataRange)
NumCols = UBound(DataRange, 2)

ReDim RtnA(1 To NumRows, 1 To NumCols)

For i = 1 To NumRows
If DataRange(i, 1) &lt;&gt; """" Then
RtnRow = RtnRow + 1
For J = 1 To NumCols
If DataRange(i, J) &lt;&gt; """" Then RtnA(RtnRow, J) = DataRange(i, J) _
Else RtnA(RtnRow, J) = """"
Next J
  End If
Next i

For i = RtnRow + 1 To NumRows
For J = 1 To NumCols
RtnA(i, J) = """"
Next J
Next i

NonBlanks = RtnA
Application.ScreenUpdating = 1
End Function
</code></pre>
","<p>Assuming <code>DataRange</code> is a valid <code>Range</code> object, you can do a very quick limit on the size of the range with</p>

<pre><code>Set DataRange = Intersect(DataRange.Parent.UsedRange, DataRange)
</code></pre>

<p>Stick that at the top before you do the <code>If TypeName...</code> bit.</p>

<p>The <code>Parent</code> of a <code>Range</code> is a <code>Worksheet</code> object.  The <code>Worksheet</code> maintains a property called <code>UsedRange</code> which includes all cells that have data or formatting or are somehow different than a default blank cell.  It beats going corner to corner on the whole sheet.</p>
"
"<p>I have a column of cells that will line up with a header row for a time period (period 1, period 2, period 3, etc.)  There is a 1 or 0 flag next to it if I want to use this period in my sum formula. </p>

<p>I also have locations listed on my left column.  </p>

<p>How can create a sum formula to give me all amounts for a specific location if the period is flagged as 1 in the column next to it?  I am assuming it will be some sort of sumif array, but I have not been successful is writing the formula.</p>
","<p>Probably want to use <code>SUMPRODUCT(zero_one_range, values_range)</code>.  The 0s will exclude the values you don't want; the 1s will include the other values and then it all gets added up.</p>

<p>Here is a dummy example:</p>

<p><img src=""https://i.stack.imgur.com/jiTs7.png"" alt=""example of SUMPRODUCT""></p>

<p>Formula in cell <code>G3</code></p>

<pre><code>=SUMPRODUCT(B3:D3,B6:D6)
</code></pre>
"
"<p>I have a table that is pulling thousands of rows of data from a very large sheet.  Some of the columns in the table are getting their data from every 5th row on that large sheet.  In order to speed up the process of creating the cell references, I used an OFFSET formula to grab a cell from every 5th row:</p>

<pre><code>=OFFSET('Large Sheet'!B$2572,(ROW(1:1)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(2:2)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(3:3)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(4:4)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(5:5)-1)*5,,)
etc...
</code></pre>

<p>OFFSET can eat up resources during calculation of large tables though, and I'm looking for a way to speed up/simplify my formula.  Is there any easy way to convert the OFFSET formula into just a simple cell reference like:</p>

<pre><code>='Large Sheet'!B2572
='Large Sheet'!B2577
='Large Sheet'!B2582
='Large Sheet'!B2587
='Large Sheet'!B2592
etc...
</code></pre>

<p>I can't just paste values either.  This needs to be an active reference, because the large sheet will change.</p>

<p>Thanks for your help.</p>
","<p>Here is one approach using <code>INDEX</code> instead of <code>OFFSET</code>.  I am not sure if it is faster, I guess you can check.  <code>INDEX</code> is not volatile, so you might get some advantage from that.</p>

<p><strong>Picture of ranges</strong>, you can see that <code>Sheet1</code> has a lot of data and <code>Sheet2</code> is pulling every 5th row from that sheet.  The data in <code>Sheet1</code> goes from <code>A1:F1000</code> and just reports the address of the current cell.</p>

<p><img src=""https://i.stack.imgur.com/tQlSp.png"" alt=""sheets""></p>

<p><strong>Formulas</strong> use <code>INDEX</code> and are copied down and across from <code>A1</code> on <code>Sheet2</code>.</p>

<pre><code>=INDEX(Sheet1!$A$1:$F$1000,ROW()*5,COLUMN())
</code></pre>
"
"<p>I have a table that is pulling thousands of rows of data from a very large sheet.  Some of the columns in the table are getting their data from every 5th row on that large sheet.  In order to speed up the process of creating the cell references, I used an OFFSET formula to grab a cell from every 5th row:</p>

<pre><code>=OFFSET('Large Sheet'!B$2572,(ROW(1:1)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(2:2)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(3:3)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(4:4)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(5:5)-1)*5,,)
etc...
</code></pre>

<p>OFFSET can eat up resources during calculation of large tables though, and I'm looking for a way to speed up/simplify my formula.  Is there any easy way to convert the OFFSET formula into just a simple cell reference like:</p>

<pre><code>='Large Sheet'!B2572
='Large Sheet'!B2577
='Large Sheet'!B2582
='Large Sheet'!B2587
='Large Sheet'!B2592
etc...
</code></pre>

<p>I can't just paste values either.  This needs to be an active reference, because the large sheet will change.</p>

<p>Thanks for your help.</p>
","<p>If you want to take a VBA approach to this, you can generate the references very quickly using simple <code>For</code> loops.</p>

<p>Here is some <em>very</em> crude code which can get you started.  It uses hard-coded sheet names and variables.  I am really just trying to show the <code>i*5</code> part.</p>

<pre><code>Sub CreateReferences()

    For i = 0 To 12
        For j = 0 To 5
            Sheet2.Range(""H1"").Offset(i, j).Formula = _
                ""=Sheet1!"" &amp; Sheet1.Range(""A5"").Offset(i * 5, j).Address
        Next
    Next

End Sub
</code></pre>

<p>It works by building a quick formula using the <code>Address</code> from a reference to a cell on <code>Sheet1</code>.  The only key here is have one index count cells in the ""summary"" rows and multiply by 5 to get the reference to the ""master"" sheet.  I am starting at <code>A5</code> just to match the results from <code>INDEX</code>.</p>

<p><strong>Results</strong> show the formula input for <code>H1</code> and over.  I am comparing to the <code>INDEX</code> results generated above.</p>

<p><img src=""https://i.stack.imgur.com/fo7Bo.png"" alt=""results""></p>
"
"<p>I have a table that is pulling thousands of rows of data from a very large sheet.  Some of the columns in the table are getting their data from every 5th row on that large sheet.  In order to speed up the process of creating the cell references, I used an OFFSET formula to grab a cell from every 5th row:</p>

<pre><code>=OFFSET('Large Sheet'!B$2572,(ROW(1:1)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(2:2)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(3:3)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(4:4)-1)*5,,)
=OFFSET('Large Sheet'!B$2572,(ROW(5:5)-1)*5,,)
etc...
</code></pre>

<p>OFFSET can eat up resources during calculation of large tables though, and I'm looking for a way to speed up/simplify my formula.  Is there any easy way to convert the OFFSET formula into just a simple cell reference like:</p>

<pre><code>='Large Sheet'!B2572
='Large Sheet'!B2577
='Large Sheet'!B2582
='Large Sheet'!B2587
='Large Sheet'!B2592
etc...
</code></pre>

<p>I can't just paste values either.  This needs to be an active reference, because the large sheet will change.</p>

<p>Thanks for your help.</p>
","<p>And here is one last approach to this that does not use VBA or formulas.  It's just a quick and dirty use of AutoFilter and deleting rows.</p>

<p><strong>Main idea</strong></p>

<ul>
<li>Add a reference to a cell <code>=Sheet1!A1</code> and copy it down to match as many rows as there are in the main data.</li>
<li>Add another formula in <code>B1</code> to be <code>=MOD(ROW(), 5)</code></li>
<li>Filter column <code>B</code> and uncheck the 0s (or any single number)</li>
<li>Delete all the rows that are visible</li>
<li>Delete column B</li>
<li>Voila, formulas for every 5th row</li>
</ul>

<p><strong>Some reference images</strong>, these are all taken on <code>Sheet2</code>.</p>

<p>Formulas with AutoFilter ready.</p>

<p><img src=""https://i.stack.imgur.com/KNC8G.png"" alt=""formulas with filter""></p>

<p>Filtered and ready to delete</p>

<p><img src=""https://i.stack.imgur.com/Ihv8p.png"" alt=""filtered""></p>

<p>Delete all those rows (select <code>A1</code>, CTRL+SHIFT+DOWN ARROW, SHIFT+SPACE, CTRL+MINUS)</p>

<p><img src=""https://i.stack.imgur.com/4jjCZ.png"" alt=""delete rows""></p>

<p>Delete column B to get final result with ""pure"" formulas every 5th row.</p>

<p><img src=""https://i.stack.imgur.com/DqOnV.png"" alt=""result""></p>
"
"<p>I am trying to make data collected in 15 minute increments look like data collected in 5 minute increments with the blank spaces being zero.  I have created a column with Julian date/time in 15 minute increments (A) and a column with Julian date/time in 5 minute increments (C) and the 15 minute increment data is in column B.  I have created a simple formula to check all of column A for an exact match to column C if true I need it to return Column B corresponding to the match in column A, If false it can return 0.</p>

<p>Here is what I have so far with the ?????? being the missing True return formula.  What is the formula to return the corresponding data in column B?</p>

<pre><code>=IF(ISNUMBER(MATCH(C2,D:D,0)),""?????????"",""0"")
</code></pre>
","<p>The common way to handle this sort of lookup is using <code>INDEX-MATCH</code>.  You may also be able to use <code>VLOOKUP</code> but I always prefer <code>INDEX-MATCH</code>.</p>

<p><strong>Picture of ranges</strong> shows the 5 minute times in column <code>C</code> with 15 minute data in column <code>F</code>.</p>

<p><img src=""https://i.stack.imgur.com/xD9CY.png"" alt=""showing ranges""></p>

<p><strong>Formula</strong> in <code>C1</code> is a combination of <code>INDEX-MATCH</code> and <code>IFERROR</code>.  The <code>IFERROR</code> is used to handle the case of a value not found and returning the <code>0</code> you wanted.</p>

<pre><code>=IFERROR(INDEX($F$1:$F$11,MATCH(B1,$E$1:$E$11,0)),0)
</code></pre>

<p>That formula can be copied down from C1 to the end of the 5-minute times.</p>
"
"<p>I've copied a column of data starting from D9 to D-whatever, the copied data have both decimal value and text. The data varies in each cell in column D </p>

<h2>Example</h2>

<p>D9 : 1675.87 L/s 
D10 : 1555.87 L/s 
D11 : 1635.87 L/s 
This is my code i tried..  </p>

<pre><code>    Dim c As Collection, K As Long
     Set c = New Collection
     K = 9
     On Error Resume Next
     For Each r In Range(""D9:D"" &amp; Cells(Rows.Count, ""D"").End(xlUp).Row)
     ary = Split(r.Text, "","")
     For Each a In ary
     c.Add a, CStr(a)
     If Err.Number = 0 Then
     Cells(K, ""E"").Value = a
     K = K + 1
     Else
     Err.Number = 0
     End If
     Next a
     Next r
     On Error GoTo 0
</code></pre>

<p><strong>I want to split the data so that it will be D6 1675.87 and E6 L/s OR remove the L/s completely.</strong> </p>

<p>I know this is simple for most people but I'm relatively new at this so any help would be good. Thank you. You are much appreciated.</p>
","<p>As noted, <code>Split</code> is the easy way to do this.  If you know that you will always have a single space you can get all of the cells very quickly with</p>

<pre><code>Sub SplitAndRewrite()

    Dim rng_start As Range
    Set rng_start = Range(""D6"")

    Dim rng_cell As Range
    For Each rng_cell In Range(rng_start, rng_start.End(xlDown))
        rng_cell.Resize(, 2) = Split(rng_cell, "" "")
    Next
End Sub
</code></pre>

<p>Code works by iterating through a <em>contiguous</em> (uses <code>End</code>) column of values and applying <code>Split</code> on the <code></code>.  It then takes the two values and pops them back on top of the cell using <code>Resize</code> to expand the output by one column.</p>

<p><code>Split</code> returns an array so it can be quickly output back into the spreadsheet.</p>
"
"<pre><code>    For Each c In oSheet.Range(""A1:A1000"")
        If InStr(c.Value, ""VALUE"") Then
            c.EntireRow.Delete()
        End If
    Next
</code></pre>

<p>This will only delete a few of the rows within the specified range, what could the problem be?</p>
","<p>Here are two common patterns for deleting entire rows based on a condition.  The main idea is that you <strong>cannot delete from a collection while you iterate it</strong>.  This means that <code>Delete</code> should not appear in a <code>For Each</code>  This is fairly standard across most programming languages and some even throw an error to prevent it.</p>

<p><strong>Option 1</strong>, use an integer to track the rows and have it work from the end to the beginning.  You need to go backwards because it is the easy way to avoid skipping rows.  It is possible to go forwards, you just need to account for not incrementing when you delete.</p>

<pre><code>Sub DeleteRowsWithIntegerLoop()

    Dim rng_delete As Range
    Set rng_delete = Range(""A1:A1000"")

    Dim int_start As Integer
    int_start = rng_delete.Rows.Count

    Dim i As Integer
    For i = int_start To 1 Step -1
        If InStr(rng_delete.Cells(i), ""VALUE"") &gt; 0 Then
            rng_delete.Cells(i).EntireRow.Delete
        End If
    Next i

End Sub
</code></pre>

<p><strong>Option 2</strong>, use the <code>Union-Delete</code> pattern to build a range of cells and then delete them all in one step at the end.</p>

<pre><code>Sub DeleteRowsWithUnionDelete()


    Dim rng_cell As Range
    Dim rng_delete As Range

    For Each rng_cell In Range(""A1:A1000"")
        If InStr(rng_cell, ""VALUE"") &gt; 0 Then
            If rng_delete Is Nothing Then
                Set rng_delete = rng_cell
            Else
                Set rng_delete = Union(rng_delete, rng_cell)
            End If
        End If
    Next

    rng_delete.EntireRow.Delete

End Sub
</code></pre>

<p><strong>Notes on the code</strong></p>

<p>For Option 2, there is an extra conditional there to create <code>rng_delete</code> when it starts at the first item.  <code>Union</code> does not work with a <code>Nothing</code> reference, so we first check that and if so, <code>Set</code> to the first item.  All others come through and get <code>Set</code> by the <code>Union</code> line.</p>

<p><strong>Preference</strong></p>

<p>When choosing between the two, I always prefer Option 2 because I much prefer to work with <code>Ranges</code> in Excel instead of iterating through <code>Cells</code> with a counter.  There are limitations to this.  The second option also works for discontinuous <code>Ranges</code> and all other variety of weird <code>Ranges</code> (e.g. after a call to <code>SpecialCells</code>) which can make it valuable when you are not sure what data you will be dealing with.</p>

<p><strong>Speed</strong></p>

<p>I am not sure about a speed comparison.  Both can be slow if <code>ScreenUpdating</code> and calculations are enabled.  The first option makes <code>N-1</code> calls to <code>Delete</code> whereas the second option does a single one.  <code>Delete</code> is an expensive operation.  Option 2 does however make <code>N-1</code> calls to <code>Union</code> and <code>Set</code>.  I assume it's faster than the first one based on that (and it seems to be here), but I did not profile it.</p>

<p>Final note: <code>InStr</code> returns an integer indicating where the value was found.  I always like to make the boolean covnersion explicit here and compare to <code>&gt;0</code>.</p>
"
"<p>here there is my table</p>

<pre><code>N   tag
1   7-3
2   3-4
3   2-4
4   5-3
5   4-6
6   3-1
7   3-1
8   3-4
9   5-6
</code></pre>

<p>I need to create a Pivot Table (I do not know how many rows there will be) with the first value of Tag. 
Example : </p>

<pre><code>B2=""7-3""  ---&gt; =VALUE(LEFT(B2;FIND( ""-"";B2 ) - 1 )) = 7
</code></pre>

<p>So the expected table should be:</p>

<pre><code>N   FirstTag
1   7
2   3
3   2
4   5
5   4
6   3
7   3
8   3
9   5
</code></pre>

<p>When I create the computed field for the pivot table I get error:
<img src=""https://i.stack.imgur.com/iBydB.jpg"" alt=""enter image description here""></p>

<p>Can you help me?
Riccardo</p>
","<p>You don't have access to all of the normal functions in a <code>Calculated Field</code>. Check out <a href=""http://stackoverflow.com/questions/16657393/use-formula-in-custom-calculated-field-in-pivot-table"">this previous Q&amp;A</a> about the topic.  It looks like you may only have access to <code>SUM</code>.  <em>I have not confirmed that though.</em> </p>

<p>I would recommend creating a <code>Table</code> with the formula added as a column formula.  This allows it to apply to all of the rows that you don't know exist yet.  You can then summarize the <code>Table</code> with a Pivot Table and the <code>Data Source</code> will expand/contract as needed.</p>

<p><strong>Picture of resulting table and Pivot</strong>, not sure what the Pivot is for so I just put the fields in a hierarchy.</p>

<p><img src=""https://i.stack.imgur.com/pwuDi.png"" alt=""picture""></p>

<p><strong>Formula in <code>FIRST TAG</code></strong></p>

<pre><code>=VALUE(LEFT([@TAG],FIND( ""-"",[@TAG] ) - 1 ))
</code></pre>
"
"<p>I have a collection as a global variable, that would have Project Task objects in them.</p>

<p>The structure of my macro would be the following: </p>

<pre><code>Public TaskCollection As Collection
Sub Main()
   Set TaskCollection = New Collection

   GetData(List of project paths)

   For Each task in TaskCollection
        //ProcessTask()
   Next

End Sub


Function GetData(List of project paths)
    for each project path
         Open project p

            //do something else with the opened project...

            for each Task t in p.Tasks
                TaskCollection.Add t
            next
        Close project p
         //AFTER THIS, the TaskCollection object will be totally empty
   next
End Function
</code></pre>

<p>As i mentioned in the comments, after I close the project, from where I got the tasks into the TaskCollection, the TaskCollection loses it's values. The weird thing is, that it keeps the number of objects it had before, but they're all empty;</p>

<p>I tried to make a collection object locally in the GetData function, and then pass it in the TaskCollection global variable at the end, but the effect is the same.</p>
","<p>You are adding references to objects when you add a <code>Task</code> to the <code>Collection</code>.  These <strong>references only have meaning so long as the objects they refer to exist</strong>.  Those objects are destroyed when the project is closed.</p>

<p>If you want to use their data, you will need to copy it using value types (<code>String</code>, <code>Integer</code>, etc.) and not refer to the objects.  Or, you can keep the project open until you are done using the objects.</p>
"
"<p>I would like to know if there is a faster way do this than the code I am using. I got the code using xlUp from the recorder.</p>

<pre><code> rCnt = Cells(Rows.Count, ""B"").End(xlUp).Row
 ActiveSheet.Range(""$B$1:$J"" &amp; rCnt).AutoFilter Field:=5, _
      Criteria1:=Application.Transpose(arrCodes), Operator:=xlFilterValues
 Rows(""2:"" &amp; rCnt).Delete Shift:=xlUp
</code></pre>

<p>And actually, if there was some way to flip the filter, I wouldn't need to delete at all as this is a temporary table that I copy from. However, all my research has failed to find a way to do </p>

<pre><code>Criteria1:=Application.Transpose(&lt;&gt;arrCodes)
</code></pre>

<p>and arrCodes has too many elements to list in the filter. And the stuff that is not in arrCodes is way too numerous to make an array from. Thanks. </p>
","<p>If you want to just use Excel UI and not formulas or VBA, you can do the following simple steps to get an ""inverse"" filter.  This could then be ported to VBA if needed:</p>

<ul>
<li>Apply the filter with the opposite conditions</li>
<li>Color those cells in one column (either font or background)</li>
<li>Clear the filter</li>
<li>Filter again but this time by cells in that column without color</li>
<li>Copy those results where you want them</li>
</ul>

<p>This will not work well if the column already has some background colors.  If that is the case, you can add a new column and color it.  If this is in VBA, you could automate those steps.  There are limits, but this is quick and simple if it applies.</p>
"
"<p>I'm trying to change the font style of a chart through the selection.font.style property. Unfortunately this doesn't work, but I get an unsupported object or method error, this altough the documentation states that it should work</p>

<p>Documentation: <a href=""https://msdn.microsoft.com/en-us/library/aa213736(v=office.11).aspx"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/aa213736(v=office.11).aspx</a></p>

<p>Debug.print typename(selection) gives: ChartArea</p>

<p>The intelisense does not work either which complicates matters, what can be done? </p>

<p>My code</p>

<pre><code>Selection.Font.style =""mystyle""
</code></pre>
","<p><code>Style</code> does not exist on <code>Font</code>.  If you check the <a href=""https://msdn.microsoft.com/en-us/library/aa174220(v=office.11).aspx"" rel=""nofollow"">documentation for that object</a>, you will see that.  Sometimes undocumented properties exist, but it is clear from trying that this is not one of those times.</p>

<p>Another indicator is that the <code>Home-&gt;Styles</code> part of the Ribbon is all greyed out once a Chart is selected</p>

<p>If you want to change the <code>Font</code>, you need to go through the properties available there: <code>Bold</code>, <code>Name</code>, etc.</p>

<p>You can apply a <code>ChartStyle</code> to the <code>Chart</code> (<code>Parent</code> of the <code>ChartArea</code>) which is the same as the items in the <code>Chart-&gt;Design</code> gallery in the Ribbon.  Those are indexed by number and it is not obvious how those are determined. You can record a macro to get the desired number though.</p>

<p>Finally, a good idea for getting (some) help from Intellisense is to declare objects.  In this case, <code>Font</code> does not exist on <code>ChartArea</code> which is not that helpful, but the properties are declared for <code>Font</code> when you hit the dot after it.</p>

<pre><code>Dim cht_area As ChartArea
Set cht_area = Selection

'hitting the dot before Name brings up the list
'.. Font does not exist though
cht_area.Font.Name = ""Arial""
</code></pre>
"
"<p>I need to perform something similar to a vlookup, but with one value I'd like to display the multiple items it discovers on a different sheet.  Ex. Lookup A,  A found, with information in column B that is unique, then Finds A again from a different line in the second worksheet, with information in column B that is again unique.</p>
","<p>The multi-return is a pretty common question.  The main idea is to use <code>INDEX-SMALL</code> instead of <code>INDEX-MATCH</code>.  Normally you just search for the row to return using <code>MATCH</code>.  In this case, you need to track multiple matches and return them in order.  The ""in order"" part is best handled by <code>SMALL</code>, feeding it an input from <code>ROW</code> to get an array of increasing numbers.</p>

<p><strong>Picture of ranges</strong></p>

<p><img src=""https://i.stack.imgur.com/M7EtD.png"" alt=""ranges for formula""></p>

<p><strong>Formula</strong> in cell <code>F3</code> is an array formula (entered with CTRL+SHIFT+ENTER) and copied down to ensure it covers as many matches as could occur.  The extra rows return <code>#NUM!</code> when not needed.</p>

<pre><code>=INDEX($C$3:$C$8,SMALL(IF($B$3:$B$8=$E$3,ROW($B$3:$B$8)-ROW($B$2)),ROW(1:1)))
</code></pre>

<p><strong>How it works</strong>.</p>

<ul>
<li>Outside call is to <code>INDEX</code> which is looking at the <code>VALUE</code> column and returning a result from there.</li>
<li><code>INDEX</code> needs a row number to return the value.  This row number is determined by finding which rows match the given search term.</li>
<li>In order to find the rows, the <code>ID</code> column is compared to the search value in <code>E3</code>.  That check is wrapped in an <code>IF</code> which returns the <code>ROW</code> number if there is a match.</li>
<li>The row number is calculated as <code>ROW()-ROW(top)</code> this is to account for the offset of my data starting in <code>B3</code>.</li>
<li>Once we have an array of row numbers, <code>SMALL</code> is used to return them in increasing order.  <code>SMALL</code> will skip non numbers which includes the <code>FALSE</code> values returned for non-matching rows.</li>
<li>Finally, in order to a single number for <code>INDEX</code>, <code>SMALL</code> uses <code>ROW(1:1)</code> which will increment as the formula is copied down, giving 1-2-3-...</li>
</ul>
"
"<p>I have some code which changes all texts in a chart object to a specific size and font. Thing is the first time one runs the code it works like a charm. But if I change any part of the text within the chart and then re-run the code nothing happens. </p>

<p>E.g I run the code, then change the title heading to size 15 and font arial, then rerun macro, and nothing happens. </p>

<p>What can be wrong? </p>

<p>My code </p>

<pre><code>With Selection

        .Format.TextFrame2.TextRange.Font.Size = 10
        .Format.TextFrame2.TextRange.Font.Name = ""Times New Roman""
        .Format.TextFrame2.TextRange.Font.Bold = msoFalse

        End With
</code></pre>
","<p>When you apply the fonts/sizes to the <code>ChartArea</code> in order to propagate them down to the individual pieces, Excel stores that info at the <code>CharArea</code> level.  If you make a change to the one of the components (<code>ChartTitle</code>, <code>Axis</code>, etc.) and try to run your code again, there is no change on the <code>ChartArea</code>.  Seems that Excel does not propagate those changes ""back up"".  This makes sense since now the different items are styled differently.</p>

<p>The easiest way to deal with this is to reset the styles before you make your changes.  <code>ClearToMatchStyle</code> applied to the <code>Chart</code> (i.e. <code>ActiveChart</code> or <code>Selection.Parent</code> in your context) will do it.  It appears it will also make the change if you use a different font size or actually make a change to one of the <code>ChartArea.Format</code> properties (e.g. <code>Size</code>, <code>Name</code>, etc.).</p>

<p><strong>Code for the reset option</strong></p>

<pre><code>ActiveChart.ClearToMatchStyle

With Selection

    .Format.TextFrame2.TextRange.Font.Size = 12
    .Format.TextFrame2.TextRange.Font.Name = ""Times New Roman""
    .Format.TextFrame2.TextRange.Font.Bold = msoFalse

End With 
</code></pre>
"
"<p>I'm a beginner at VBA and I've been scratching my head all day trying to figure out what's wrong with my code:</p>

<pre><code>Sub DataTransfer():
    Dim position As Integer, location (1 To 9) As String
    location(1) = ""BC""
    location(2) = ""Calgary""
    location(3) = ""Edmonton""
    location(4) = ""Major Projects""
    location(5) = ""Minneapolis""
    location(6) = ""Saskatchewan""
    location(7) = ""Seattle""
    location(8) = ""Toronto""
    location(9) = ""Winnipeg""

    For position = 1 To 9
        Worksheets(location(position)).Select
        Cells(1, 2).Value = location(position)
    Next position
End Sub
</code></pre>

<p>Edit: Sorry about the ambiguity of my question. What I ultimately want to do is actually to be able to change that third last line (that writes the city name to the worksheets) to any function I want so as to modify the worksheets as I see fit. This is actually part of a larger subroutine that I broke out to troubleshoot the problem. These worksheets are interspersed between other worksheets so unfortunately, @nutsch's solution won't really achieve what I want (but thanks either way).</p>

<p>The biggest problem I have with this is that this exact code would sometimes work as intended and other times return the ""subscript out of range"" error on the fourth last line. </p>
","<p>I assume you are trying to put the sheet name into the worksheet it corresponds to?  If so, the problem is that you are using <code>Select</code> instead of <code>Activate</code> to give the <code>Worksheet</code> focus.</p>

<p>The becomes a problem because you are using <code>Cells</code> without a qualifier so it refers to the <code>ActiveSheet</code> which has not been changed in your code.</p>

<p>Two solutions:</p>

<ul>
<li>Use <code>Activate</code> which will make <code>Cells</code> work like you want.</li>
<li>Qualify the call to <code>Cells</code> by preceding it with a sheet object.</li>
</ul>

<p><strong>Option 1</strong></p>

<pre><code>Sub DataTransfer():
    Dim position As Integer, location(1 To 9) As String
    location(1) = ""BC""
    location(2) = ""Calgary""
    location(3) = ""Edmonton""
    location(4) = ""Major Projects""
    location(5) = ""Minneapolis""
    location(6) = ""Saskatchewan""
    location(7) = ""Seattle""
    location(8) = ""Toronto""
    location(9) = ""Winnipeg""

    For position = 1 To 9
        Worksheets(location(position)).Activate
        Cells(1, 2).Value = location(position)
    Next position
End Sub
</code></pre>

<p><strong>Option 2</strong></p>

<pre><code>Sub DataTransfer():
    Dim position As Integer, location(1 To 9) As String
    location(1) = ""BC""
    location(2) = ""Calgary""
    location(3) = ""Edmonton""
    location(4) = ""Major Projects""
    location(5) = ""Minneapolis""
    location(6) = ""Saskatchewan""
    location(7) = ""Seattle""
    location(8) = ""Toronto""
    location(9) = ""Winnipeg""

    For position = 1 To 9
        'this line really does nothign now
        Worksheets(location(position)).Select

        Worksheets(location(position)).Cells(1, 2).Value = location(position)
    Next position
End Sub
</code></pre>

<p>I prefer Option 2 because it does not require activating the <code>Worksheet</code> first.  It should always be your goal to avoid Activating and Selecting when possible.  They slow things down and make code the opposite of robust.</p>

<p>Finally, as pointed out by @nutsch there are easier ways to do something simialr to this, but it's worth knowing why your code doesn't work.</p>
"
"<p>Been working on this AutoFiltering code for a while. It works well as far as it goes. If I use my search criteria in ""Quotes"" replacing FilterCriteria it works everytime. However, when trying to pass numbers along in FilterCriteria it fails to find anything in my range (A:D ONLY!) everytime. It finds all text fields in Colums E:G fine as they are all text. Columns A:D returns nothing. I tried formatting A:D as text instead of numbers and it STILL sees nothing when filtering. Sample range shown hopefully at end.</p>

<pre><code>Sub FindProduct()

  'Note: This macro uses the function LastRow at end of Module
  ' Highly moded code from Ron de Bruin

    'To define My_Range
       Dim My_Range As Range
       Dim CalcMode As Long
       Dim ViewMode As Long
       Dim CCount As Long
    'To define New Sheet and Range
       Dim WSNew As Worksheet
    'Use for column and filter data selection
       Dim FilterCriteria As String
       Dim PickCol As String

    'Set filter range on ActiveSheet
       Set My_Range = Range(""A1:G"" &amp; LastRow(ActiveSheet))
       My_Range.Parent.Select

 '  ************************************
    My_Range.Parent.AutoFilterMode = False
       '  Unprotect sheet, turn off AutoFilter, Show All
          With ActiveSheet
             .Unprotect
             On Error Resume Next
             .ShowAllData
          End With
    '  Code to check if workbook is protected here. Redundant.
 '  ****************************************
     'Turn off ScreenUpdating, Calculation, EnableEvents code here
  '  +++++++++++++++++++++++++++++++++++
       '  Use this to pick a Column to search and your FilterCriteria
       PickCol = InputBox(""What Column do you want to search in "" &amp; vbCrLf _
       &amp; ""(A=1,B=2,C=3,D=4,E=5,F=6,G=7)?"" _
       &amp; vbCrLf &amp; vbCrLf, ""Select Column to Search"")
          '  Input error check
       '  ######################
       FilterCriteria = InputBox(""What are you looking for?"" _
       &amp; vbCrLf &amp; vbCrLf &amp; ""This will work with partial Information."", _
       ""Enter Filter Parameter"")
          '  Input error check
 '  *********************************************************
    '  Insert PickCol and FilterCriteria variables
    My_Range.AutoFilter Field:=PickCol, Criteria1:=""=*"" &amp; FilterCriteria &amp; ""*""

    'Check if there are not more then 8192 areas (limit of areas that Excel can copy)
    CCount = 0
    On Error Resume Next
    CCount = My_Range.Columns(1).SpecialCells(xlCellTypeVisible).Areas(1).Cells.Count
    On Error GoTo 0
      If CCount = 0 Then
          MsgBox ""There are more than 8192 areas:"" _
               &amp; vbCrLf &amp; ""It is not possible to copy the visible data.""
      Else
        '  ***********************************************
           'Delete ""Filtered Data"" sheet if it exists code here
        '  ***********************************************
        '  ------------------------------
          'Add a new Worksheet
           Set WSNew = Worksheets.Add(After:=Sheets(ActiveSheet.Index))
           On Error Resume Next
           WSNew.Name = ""Filtered Data""
        '  ------------------------------
        '  ///////////////////////////////////////////////////
           'Copy/paste the visible data to the new worksheet
           My_Range.Parent.AutoFilter.Range.Copy
             ' Paste copied range starting at Cell(""A2"")
             With WSNew.Range(""A2"")
                 .PasteSpecial Paste:=8
                 .PasteSpecial xlPasteAll
                 .PasteSpecial xlPasteFormats
                 Application.CutCopyMode = False
                 .Select
             End With
        ' ///////////////////////////////////////////////////
        ' *****************************************
          'Adds Formatted Text to Cell (""A1"") code here
        ' *****************************************
      End If

    ' Turn off AutoFilter
    My_Range.Parent.AutoFilterMode = False

'  ******************************************************
   'More finishing code here
'  ******************************************************

End Sub

 Function LastRow(Sh As Worksheet)
     On Error Resume Next
     LastRow = Sh.Cells.Find(What:=""*"", _
                        After:=Sh.Range(""A1""), _
                        Lookat:=xlPart, _
                        LookIn:=xlValues, _
                        SearchOrder:=xlByRows, _
                        SearchDirection:=xlPrevious, _
                        MatchCase:=False).Row
     On Error GoTo 0
 End Function
</code></pre>

<p>Sample data:</p>

<pre><code>    A        B     C         D          E         F           G
Date Rvd    Qty   File#    P.O.#    Cust Name    Vend Name   Carrier
02/14/15    210   41680    38565    Some Tech    John        DHL
03/08/15    458   17017    38569    Them Guys    Donn        Fedx
03/12/15    350   16736    38541    Some Guys    Teri        UPS
03/24/15    236   42630    38655    Some Tech    John        DHL
04/08/15    458   56985    85693    Them Guys    Donn        Fedx
04/12/15    350   12345    43851    Some Guys    Teri        UPS
04/18/15    838   56685    85693    Them Guys    Donn        Fedx
05/05/15    110   13245    43851    Some Guys    Teri        UPS
</code></pre>

<p>For whatever reason when it runs the AutoFilter using any numbers for A:D it fails to give any filtered Data. I'm stumped as I said It WILL return filtered data IF I place the exact value I want in the AutoFilter line.</p>

<p>Pretty sure this line is my issue/ problem:
<strong>My_Range.AutoFilter Field:=PickCol, Criteria1:=""=<em>"" &amp; FilterCriteria &amp; ""</em>""</strong></p>

<p>Any Ideas?</p>

<p>I guess now I have to figure out how to actually make that work. Using Autofilter properly on the sheet it works fine. If I have to do as I think the article shows then I have to add 4 more columns AND I have to rewrite the code in the SaveLog Code on the form that generates this list. Sounds like I need to substantially increase the size of my code for everything.  For a Novice as myself I'm certainly overwhelmed at this point. </p>
","<p>The core of this issue is that you cannot use Text comparison operators with Numbers.  <strong>When you add the wildcards <code>*</code> to the search criteria, you are enforcing a Text comparison.</strong></p>

<p>If you want this to work with numbers and text and have the variable column selection, you will need to add some checks to build the criteria correctly.  This would involve dropping the <code>*</code> when a number column is selected.  The main thing to keep in mind is that each data type only has certain filters that are available to it.  To check those, click the arrow in the normal filter menu to see what is listed under <code>Number Filters</code> or <code>Date Filters</code> or <code>Text Filters</code>.</p>

<p>Given all of that, <strong>if you want to filter those numerical columns on <code>Contains</code>, you will need to convert it to text.</strong></p>

<p>Per the <a href=""http://stackoverflow.com/questions/30520060/autofilter-not-seeing-numerical-data-in-filtered-view-multiple-values#comment49119082_30520060"">comment by @Tim Williams</a>, you can convert your numbers to text using the <code>Data-&gt;Text to Columns</code> feature.  You can automate this step using VBA if you know which ranges need to be converted.</p>

<p>The minimum number of parameters required to get that to work appears to be <code>DataType</code> and <code>FieldInfo</code>.  <code>FieldInfo</code> is the important one for forcing the conversion.</p>

<pre><code>Sub ConvertColumnNumberToText()

    Dim rng_column As Range
    For Each rng_column In Range(""B:D"").Columns
        rng_column.TextToColumns DataType:=xlDelimited, FieldInfo:=Array(1, 2)
    Next rng_column

End Sub
</code></pre>

<p>Check the documentation for <a href=""https://msdn.microsoft.com/en-us/library/office/ff193593.aspx"" rel=""nofollow"">TextToColumns</a> to see what the parameters are.  It will only work on a column at a time, hence the loop.</p>

<p>Also, there is little harm in running this code multiple times, so long as it only runs on columns with numbers only.  If you accidentally run it on a column that can be split into columns (contains a <code>TAB</code> by default), you will start to overwrite other columns.</p>
"
"<p>See picture: <a href=""http://s12.postimg.org/ov8djtuh9/Capture.jpg"" rel=""nofollow"">http://s12.postimg.org/ov8djtuh9/Capture.jpg</a></p>

<p><strong>Context:</strong> Trying to activate a sheet (variable: cSheet) in another workbook and paste data there from copied data from a different workbook. I'm getting a subscript out of range error whenever I try to activate directly using the variable (i.e. Worksheets(Name).Activate) or try to define a worksheet using the variable and then activate it. I've also tried other coding styles, using ""With Worksheet"" etc. and my code was a lot longer but I started over because every time I fix something, something else goes wrong. So, sticking to the basics. Any help would be greatly appreciated.</p>

<pre><code>Sub GenSumRep()

Dim AutoSR As Workbook
Dim asrSheet As Worksheet
Dim tempWB As Workbook
Dim dataWB As Workbook
Dim SecName As String
Dim oldcell As String
Dim nsName As String
Dim cSheet As Worksheet

Set AutoSR = ActiveWorkbook
Set asrSheet = AutoSR.ActiveSheet

For a = 3 To 10

    SecName = asrSheet.Range(""D"" &amp; a).Value

    If SecName &lt;&gt; """" Then

    Workbooks.Open Range(""B"" &amp; a).Value
    Set tempWB = ActiveWorkbook
    'tempWB.Windows(1).Visible = False

    AutoSR.Activate

    Workbooks.Open Range(""C"" &amp; a).Value
    Set dataWB = ActiveWorkbook
    'dataWB.Windows(1).Visible = False

    AutoSR.Activate

        'Copy paste data
        For b = 24 To 29
        oldcell = Range(""C"" &amp; b).Value
            If b = 24 Then
            nsName = Trim(SecName) &amp; "" Data""
            Set cSheet = tempWB.Sheets(nsName)
            Else
            nsName = asrSheet.Range(""B"" &amp; b).Value
            Set cSheet = tempWB.Sheets(nsName)
            End If

        'Copy
        dataWB.Activate
        Range(oldcell).Select
        Range(Selection, Selection.End(xlToRight)).Select
        Range(Selection, Selection.End(xlDown)).Select
        Selection.Copy

        'Paste
        tempWB.Activate
        cSheet.Select
        Range(""A1"").Select
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        Application.CutCopyMode = False

        b = b + 1
        Next b

    End If

a = a + 1

Next a

End Sub
</code></pre>
","<p>You only get that error for one reason: <strong>the name your provided does not exist in the collection!</strong></p>

<p>There are a couple of likely reasons for this based on your code:</p>

<ul>
<li>Your <code>nsName</code> variable contains hidden characters that make it different even though it appears correct.</li>
<li>You are looking for the sheet in the wrong workbook.</li>
</ul>

<p>Based on your comments, <strong>it seems that you are looking in the wrong workbook</strong>. A good way to check out these subscript errors is to iterate the collection and print out the <code>Names</code> included therein.</p>

<pre><code>Dim sht as Worksheet    
For Each sht In tempWB.Sheets
    Debug.Print sht.Name
Next sht
</code></pre>

<p>In general, it is desirable to get rid of calls to <code>Select</code> and <code>Activate</code> so that you are not relying on the interface in order to get objects.  See <a href=""http://stackoverflow.com/questions/10714251/how-to-avoid-using-select-in-excel-vba-macros"">this post about avoiding <code>Select</code> and <code>Activate</code></a> for more info.</p>

<p>One idea applied to your code is to assign the Workbooks directly without <code>ActiveWorkbook</code>:</p>

<pre><code>Set tempWB = Workbooks.Open(asrSheet.Range(""B"" &amp; a).Value)
Set dataWB = Workbooks.Open(asrSheet.Range(""C"" &amp; a).Value)
</code></pre>

<p>instead of:</p>

<pre><code>    Workbooks.Open Range(""B"" &amp; a).Value
    Set tempWB = ActiveWorkbook
    'tempWB.Windows(1).Visible = False

    AutoSR.Activate

    Workbooks.Open Range(""C"" &amp; a).Value
    Set dataWB = ActiveWorkbook
    'dataWB.Windows(1).Visible = False
</code></pre>
"
"<p>I have an Excel spreadsheet of data for work that I need to split up in VBA.  A couple of columns have multiple lines of text and others do not.  I've figured out how to split the multiple lines of text, my problem is taking the column with a single line of text and copying it down.  For example:</p>

<pre><code>Company_Name     Drug_1      Phase_2        USA
                 Drug_2      Discontinued 
                 Drug_3      Phase_1        Europe
                 Drug_4      Discontinued  
</code></pre>

<p>Below is the code I am using to split columns B &amp; C and then I can handle D manually, however I need column A to copy down into rows 2-4.  There's over 600 rows like this otherwise I would just do it manually.  (Note: I'm putting column B into A below, and column C into C)</p>

<pre><code>Sub Splitter()
    Dim iPtr1 As Integer
    Dim iPtr2 As Integer
    Dim iBreak As Integer
    Dim myVar As Integer
    Dim strTemp As String
    Dim iRow As Integer

'column A loop
    iRow = 0
    For iPtr1 = 1 To Cells(Rows.Count, 1).End(xlUp).Row
        strTemp = Cells(iPtr1, 1)
        iBreak = InStr(strTemp, vbLf)
        Range(""C1"").Value = iBreak
            Do Until iBreak = 0
            If Len(Trim(Left(strTemp, iBreak - 1))) &gt; 0 Then
                iRow = iRow + 1
                Cells(iRow, 2) = Left(strTemp, iBreak - 1)
            End If
            strTemp = Mid(strTemp, iBreak + 1)
            iBreak = InStr(strTemp, vbLf)
        Loop
        If Len(Trim(strTemp)) &gt; 0 Then
            iRow = iRow + 1
            Cells(iRow, 2) = strTemp
        End If
    Next iPtr1

'column C loop
    iRow = 0
    For iPtr2 = 1 To Cells(Rows.Count, 3).End(xlUp).Row
        strTemp = Cells(iPtr2, 3)
        iBreak = InStr(strTemp, vbLf)
        Do Until iBreak = 0
            If Len(Trim(Left(strTemp, iBreak - 1))) &gt; 0 Then
                iRow = iRow + 1
                Cells(iRow, 4) = Left(strTemp, iBreak - 1)
            End If
            strTemp = Mid(strTemp, iBreak + 1)
            iBreak = InStr(strTemp, vbLf)
        Loop
        If Len(Trim(strTemp)) &gt; 0 Then
            iRow = iRow + 1
            Cells(iRow, 4) = strTemp
        End If
    Next iPtr2

End Sub
</code></pre>
","<p>There is a bit of code I call the ""waterfall fill"" which does exactly this.  If you can build a range of cells to fill (i.e. set <code>rng_in</code>), it will do it.  It works on any number of columns which is a nice feature.  You can honestly feed it a range of <code>A:D</code> and it will polish off your blanks.</p>

<pre><code>Sub FillValueDown()

    Dim rng_in As Range
    Set rng_in = Range(""B:B"")

    On Error Resume Next

        Dim rng_cell As Range
        For Each rng_cell In rng_in.SpecialCells(xlCellTypeBlanks)
            rng_cell = rng_cell.End(xlUp)
        Next rng_cell

    On Error GoTo 0

End Sub
</code></pre>

<p><strong>Before and after</strong>, shows the code filling down.</p>

<p><img src=""https://i.stack.imgur.com/HEewM.png"" alt=""enter image description here"">
<img src=""https://i.stack.imgur.com/FzRce.png"" alt=""enter image description here""></p>

<p><strong>How it works</strong></p>

<p>This code works by getting a range of all the blank cells.  By default <code>SpecialCells</code> only looks into the <code>UsedRange</code> because of a <a href=""http://www.mrexcel.com/forum/excel-questions/371987-problem-specialcells-xlcelltypeblanks.html#post1844081"" rel=""nofollow noreferrer"">quirk with <code>xlCellTypeBlanks</code></a>.  From there it sets the value of the blank cell equal to the closest cell on top of it using <code>End(xlUp)</code>.  The error handling is in place because <code>xlCellTypeBlanks</code> will return an error if nothing is found.  If you do the whole column with a blank row at top though (like the picture), the error will never get triggered.</p>
"
"<p>I need help with this macro.  Every time I run it, I get the error below.  I thought it was a simple macro that I could have anybody on my team use to make it take a less time than they were taking to manually create this PivotTable every time they ran the report.  However, it's not working.  Please see error below and advise.  I emboldened and italicized the error.</p>

<p><img src=""https://i.stack.imgur.com/cqmPhm.jpg"" alt=""Error""></p>

<pre><code>Sub LEDOTTR()
'
' LEDOTTR Macro
'

'
    Range(""A87"").Select
    Range(Selection, ActiveCell.SpecialCells(xlLastCell)).Select
    ***ActiveWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:= _
        ""Sheet1!R87C1:R8214C25"", Version:=xlPivotTableVersion14).CreatePivotTable _
        TableDestination:=""LED OTTR!R1C1"", TableName:=""PivotTable6"", _
        DefaultVersion:=xlPivotTableVersion14***
    Sheets(""LED OTTR"").Select
    Cells(1, 1).Select
    With ActiveSheet.PivotTables(""PivotTable6"").PivotFields(""LED"")
        .Orientation = xlPageField
        .Position = 1
    End With
    With ActiveSheet.PivotTables(""PivotTable6"").PivotFields(""Hierarchy name"")
        .Orientation = xlRowField
        .Position = 1
    End With
    ActiveSheet.PivotTables(""PivotTable6"").PivotFields(""LED"").CurrentPage = ""(All)""
    With ActiveSheet.PivotTables(""PivotTable6"").PivotFields(""LED"")
        .PivotItems(""LED Marine"").Visible = False
        .PivotItems(""LL48 Linear LED"").Visible = False
        .PivotItems(""Other"").Visible = False
    End With
    ActiveSheet.PivotTables(""PivotTable6"").PivotFields(""LED""). _
        EnableMultiplePageItems = True
    ActiveSheet.PivotTables(""PivotTable6"").AddDataField ActiveSheet.PivotTables( _
        ""PivotTable6"").PivotFields(""   Late "" &amp; Chr(10) &amp; ""Indicator""), ""Sum of    Late "" &amp; Chr(10) &amp; ""Indicator"", _
        xlSum
    ActiveSheet.PivotTables(""PivotTable6"").AddDataField ActiveSheet.PivotTables( _
        ""PivotTable6"").PivotFields(""Early /Ontime"" &amp; Chr(10) &amp; ""   Indicator""), _
        ""Sum of Early /Ontime"" &amp; Chr(10) &amp; ""   Indicator"", xlSum
End Sub
</code></pre>
","<p>The answer to your problem is <a href=""http://www.mrexcel.com/forum/excel-questions/604666-visual-basic-applications-pivot-table-error-5-0_o.html#post2998219"" rel=""nofollow"">located here</a>.</p>

<p>Your sheet name in <code>TableDestination:=""LED OTTR!R1C1""</code> <strong>needs to be surrounded with single quotes</strong> in order for it to work <code>TableDestination:=""'LED OTTR'!R1C1""</code></p>

<p>You will also have problems with the duplicated name if you do not delete this PivotTable before rerunning the code.</p>
"
"<p>Is it possible to work in Excel with some metric suffix notation:
If I write 1000, the cell shows <code>1k</code>. if I write 1000000 the cell shows <code>1M</code>.</p>

<p>I made two functions to make a workaround but maybe there's a more suitable solution.</p>

<pre><code>Function lecI(cadena) As Double
    u = Right(cadena, 1)
    If u = ""k"" Then
        mult = 1000
    ElseIf u = ""M"" Then
        mult = 1000000
    ElseIf u = ""m"" Then
        mult = 0.001
    End If
    lecI = Val(Left(cadena, Len(cadena) - 1)) * mult
End Function

Function wriI(num) As String
    If num &gt; 1000000 Then 'M
        wriI = Str(Round(num / 1000000, 2)) &amp; ""M""
    ElseIf num &gt; 1000 Then 'k
        wriI = Str(Round(num / 1000, 1)) &amp; ""k""
    ElseIf num &lt; 0.01 Then 'm
        wriI = Str(Round(num * 1000, 1)) &amp; ""m""
    Else: wriI = Str(num)
    End If
</code></pre>
","<p>Based on the <a href=""http://stackoverflow.com/questions/30544932/is-it-possible-to-use-metric-k-notations-in-excel/30577371#comment49162998_30544932"">link by @Vasily</a>, you can get the desired outcome using only Conditional Formatting.  This is nice because it means that all of <strong>your values are stored as Numbers and not Text and math works like normal</strong>.</p>

<p>Overall steps:</p>

<ul>
<li>Create a new conditional formatting for each block of 1000 that applies the number format for that block</li>
<li>Add the largest condition at the top so it formats first</li>
<li>Rinse and repeat to get all the ones you want</li>
</ul>

<p><strong>Conditional formatting</strong> used to style column <code>C</code> which is just random data at different powers of ten.  It is the same number as column <code>D</code> just styled differently.</p>

<p><img src=""https://i.stack.imgur.com/SLI9a.png"" alt=""conditional setup""></p>

<p><strong>Number formats</strong>, are pretty easy since they are the same as <a href=""http://www.excel-easy.com/examples/custom-number-format.html"" rel=""nofollow noreferrer"">that link, see Large Numbers section</a>.</p>

<ul>
<li>ones = <code>0 "" ""</code></li>
<li>thousands = <code>0, "" k""</code></li>
<li>millions = <code>0,, "" M""</code></li>
<li>and so on for however many you want</li>
</ul>

<p><strong>Automation</strong>, if you don't want to click and type all day, here is some VBA that will create all the conditional formatting for you (for current <code>Selection</code>).  This example goes out to billions.  Keep adding powers of 3 by extending the <code>Array</code> with more entries.</p>

<pre><code>Sub CreateConditionalsForFormatting()

    'add these in as powers of 3, starting at 1 = 10^0
    Dim arr_markers As Variant
    arr_markers = Array("""", ""k"", ""M"", ""B"")

    For i = UBound(arr_markers) To 0 Step -1

        With Selection.FormatConditions.Add(xlCellValue, xlGreaterEqual, 10 ^ (3 * i))
            .NumberFormat = ""0"" &amp; Application.WorksheetFunction.Rept("","", i) &amp; "" """" "" &amp; arr_markers(i) &amp; """"""""
            .StopIfTrue = False
        End With

    Next

End Sub
</code></pre>

<p>I change the <code>StopIfTrue</code> value so that this does not break other conditional formatting that might exist.  If the largest condition is at the top (added first) then the <code>NumberFormat</code> from that one holds.  By default, these are created with <code>StopIfTrue = True</code>.  This is a moot point if you do not have any other conditional formatting on these cells.</p>
"
"<p>I'm  trying to figure out how to split rows of data where columns B,C,D in the row contain multiple lines and others do not.  I've figured out how to split the multi-line cells if I copy just those columns into a new sheet, manually insert rows, and then run the macro below (that's just for column A), but I'm lost at coding the rest. </p>

<p>Here's what the data looks like:
<img src=""https://i.stack.imgur.com/Y0Y5p.png"" alt=""enter image description here""></p>

<p>So for row 2, I need it split into 6 rows (one for each line in cell B2) with the text in cell A2 in A2:A8.  I also need columns C and D split the same as B, and then <strong>columns E:CP</strong> the same as column A.</p>

<p>Here is the code I have for splitting the cells in columns B,C,D:</p>

<pre><code>Dim iPtr As Integer
Dim iBreak As Integer
Dim myVar As Integer
Dim strTemp As String
Dim iRow As Integer
iRow = 0
For iPtr = 1 To Cells(Rows.Count, col).End(xlUp).Row
    strTemp = Cells(iPtr1, 1)
    iBreak = InStr(strTemp, vbLf)
    Range(""C1"").Value = iBreak
        Do Until iBreak = 0
        If Len(Trim(Left(strTemp, iBreak - 1))) &gt; 0 Then
            iRow = iRow + 1
            Cells(iRow, 2) = Left(strTemp, iBreak - 1)
        End If
        strTemp = Mid(strTemp, iBreak + 1)
        iBreak = InStr(strTemp, vbLf)
    Loop
    If Len(Trim(strTemp)) &gt; 0 Then
        iRow = iRow + 1
        Cells(iRow, 2) = strTemp
    End If
Next iPtr
End Sub
</code></pre>

<p>Here is a link to an example file (note this file has 4 rows, the actual sheet has over 600):  <a href=""https://www.dropbox.com/s/46j9ks9q43gwzo4/Example%20Data.xlsx?dl=0"" rel=""nofollow noreferrer"">https://www.dropbox.com/s/46j9ks9q43gwzo4/Example%20Data.xlsx?dl=0</a> </p>
","<p>This is a fairly interesting question and something I have seen variations of before.  I went ahead and wrote up a general solution for it since it seems like a useful bit of code to keep for myself.</p>

<p>There are pretty much only two assumptions I make about the data:</p>

<ul>
<li>Returns are represented by <code>Chr(10)</code> or which is the <code>vbLf</code> constant.</li>
<li>Data that belongs with a lower row has enough returns in it to make it line up.  This appears to be your case since there are return characters which appear to make things line up like you want.</li>
</ul>

<p><strong>Pictures of the output</strong>, zoomed out to show all the data for <code>A:D</code>.  Note that the code below <strong>processes all of the columns by default and outputs to a new sheet</strong>. You can limit the columns if you want, but it was <em>too</em> tempting to make it general.</p>

<p><img src=""https://i.stack.imgur.com/6bo3f.png"" alt=""output of the code""></p>

<p><strong>Code</strong></p>

<pre><code>Sub SplitByRowsAndFillBlanks()

    'process the whole sheet, could be
    'Intersect(Range(""B:D""), ActiveSheet.UsedRange)
    'if you just want those columns
    Dim rng_all_data As Range
    Set rng_all_data = Range(""A1"").CurrentRegion

    Dim int_row As Integer
    int_row = 0

    'create new sheet for output
    Dim sht_out As Worksheet
    Set sht_out = Worksheets.Add

    Dim rng_row As Range
    For Each rng_row In rng_all_data.Rows

        Dim int_col As Integer
        int_col = 0

        Dim int_max_splits As Integer
        int_max_splits = 0

        Dim rng_col As Range
        For Each rng_col In rng_row.Columns

            'splits for current column
            Dim col_parts As Variant
            col_parts = Split(rng_col, vbLf)

            'check if new max row count
            If UBound(col_parts) &gt; int_max_splits Then
                int_max_splits = UBound(col_parts)
            End If

            'fill the data into the new sheet, tranpose row array to columns
            sht_out.Range(""A1"").Offset(int_row, int_col).Resize(UBound(col_parts) + 1) = Application.Transpose(col_parts)

            int_col = int_col + 1
        Next

        'max sure new rows added for total length
        int_row = int_row + int_max_splits + 1
    Next

    'go through all blank cells and fill with value from above
    Dim rng_blank As Range
    For Each rng_blank In sht_out.Cells.SpecialCells(xlCellTypeBlanks)
        rng_blank = rng_blank.End(xlUp)
    Next

End Sub
</code></pre>

<p><strong>How it works</strong></p>

<p>There are comments within the code to highlight what is going on.  Here is a high level overview:</p>

<ul>
<li>Overall, we iterate through each row of the data, processing all of the columns individually.</li>
<li>The text of the current cell is <code>Split</code> using the <code>vbLf</code>.  This gives an array of all the individual lines.</li>
<li>A counter is tracking the maximum number of rows that were added (really this is <code>rows-1</code> since these arrays are <code>0-indexed</code>.</li>
<li>Now the data can be output to the new sheet.  This is easy because we can just dump the array that <code>Split</code> created for us.  The only tricky part is getting it to the right spot on the sheet.  To that end, there is a counter for the current column offset and a global counter to determine how many total rows need to be offset.  The <code>Offset</code> moves us to the right cell; the <code>Resize</code> ensures that all of the rows are output.  Finally, <code>Application.Transpose</code> is needed because <code>Split</code> returns a row array and we're dumping a column.</li>
<li>Update the counters.  Column offset is incremented every time.  The row offset is updated to add enough rows to cover the last maximum (<code>+1</code> since this is <code>0-indexed</code>)</li>
<li>Finally, I get to <a href=""http://stackoverflow.com/questions/30537813/count-lines-of-text-in-a-cell/30538117#30538117"">use my waterfall fill (your previous question)</a> on all of the blanks cells that were created to ensure no blanks.  I forgo error checking because I assume blanks exist.</li>
</ul>
"
"<p>I am trying to write a macro in Excel to calculate the standard deviation of same text in column A taking the values from column B and giving the results in column C: </p>

<p><img src=""https://i.stack.imgur.com/0GASH.png"" alt=""spreadsheet ""></p>

<p>I did it manually by putting the equation<code>=STDEV.S(A2;A3;A4;A16)</code>for ""aaa"". But I need to do this automatically because I am doing another calculation and procedures which are completing by macros. Here is my code: </p>

<pre><code>Option Explicit
Sub Main()
    CollectArray ""A"", ""D""
    DoSum ""D"", ""E"", ""A"", ""B""
End Sub


' collect array from a specific column and print it to a new one without duplicates
' params:
'           fromColumn - this is the column you need to remove duplicates from
'           toColumn - this will reprint the array without the duplicates
Sub CollectArray(fromColumn As String, toColumn As String)

    ReDim arr(0) As String

    Dim i As Long
    For i = 1 To Range(fromColumn &amp; Rows.Count).End(xlUp).Row
        arr(UBound(arr)) = Range(fromColumn &amp; i)
        ReDim Preserve arr(UBound(arr) + 1)
    Next i
    ReDim Preserve arr(UBound(arr) - 1)
    RemoveDuplicate arr
    Range(toColumn &amp; ""1:"" &amp; toColumn &amp; Range(toColumn &amp; Rows.Count).End(xlUp).Row).ClearContents
    For i = LBound(arr) To UBound(arr)
        Range(toColumn &amp; i + 1) = arr(i)
    Next i
End Sub


' sums up values from one column against the other column
' params:
'           fromColumn - this is the column with string to match against
'           toColumn - this is where the SUM will be printed to
'           originalColumn - this is the original column including duplicate
'           valueColumn - this is the column with the values to sum
Private Sub DoSum(fromColumn As String, toColumn As String, originalColumn As String, valueColumn As String)
    Range(toColumn &amp; ""1:"" &amp; toColumn &amp; Range(toColumn &amp; Rows.Count).End(xlUp).Row).ClearContents
    Dim i As Long
    For i = 1 To Range(fromColumn &amp; Rows.Count).End(xlUp).Row
        Range(toColumn &amp; i) = WorksheetFunction.SumIf(Range(originalColumn &amp; "":"" &amp; originalColumn), Range(fromColumn &amp; i), Range(valueColumn &amp; "":"" &amp; valueColumn))
    Next i
End Sub


Private Sub RemoveDuplicate(ByRef StringArray() As String)
    Dim lowBound$, UpBound&amp;, A&amp;, B&amp;, cur&amp;, tempArray() As String
    If (Not StringArray) = True Then Exit Sub
    lowBound = LBound(StringArray): UpBound = UBound(StringArray)
    ReDim tempArray(lowBound To UpBound)
    cur = lowBound: tempArray(cur) = StringArray(lowBound)
    For A = lowBound + 1 To UpBound
        For B = lowBound To cur
            If LenB(tempArray(B)) = LenB(StringArray(A)) Then
                If InStrB(1, StringArray(A), tempArray(B), vbBinaryCompare) = 1 Then Exit For
            End If
        Next B
        If B &gt; cur Then cur = B
        tempArray(cur) = StringArray(A)
    Next A
    ReDim Preserve tempArray(lowBound To cur): StringArray = tempArray
End Sub
</code></pre>

<p>It would be nice if someone could please give me an idea or solution. The above code is for calculating the summation of same text values. Is there any way to modify my code to calculate the standard deviation?  </p>
","<p>Here is a formula and VBA route that gives you the <code>STDEV.S</code> for each set of items.</p>

<p><strong>Picture</strong> shows the various ranges and results.  My input is the same as yours, but I accidentally sorted it at one point so they don't line up.</p>

<p><img src=""https://i.stack.imgur.com/APJ2e.png"" alt=""enter image description here""></p>

<p>Some notes</p>

<ul>
<li><code>ARRAY</code> is the actual answer you want.  <code>NON-ARRAY</code> showing for later.</li>
<li>I included the PivotTable to test the accuracy of the method.</li>
<li><code>VBA</code> is the same answer as <code>ARRAY</code> calculated as a UDF which could be used elsewhere in your VBA.</li>
</ul>

<p><strong>Formula</strong> in cell <code>D3</code> is an array formula entered with CTRL+SHIFT+ENTER.  That same formula is in <code>E3</code> without the array entry.  Both have been copied down to the end of the data.</p>

<pre><code>=STDEV.S(IF(B3=$B$3:$B$21,$C$3:$C$21))
</code></pre>

<p>Since it seems you need a VBA version of this, you can use the same formula in VBA and just wrap it in <code>Application.Evaluate</code>. This is pretty much how @Jeeped gets an answer, converting the range to values which meet the criteria.</p>

<p><strong>VBA Code</strong> uses <code>Evaluate</code> to process a formula string built from the ranges given as input.</p>

<pre><code>Public Function STDEV_S_IF(rng_criteria As Range, rng_criterion As Range, rng_values As Range) As Variant

    Dim str_frm As String

    'formula to reproduce
    '=STDEV.S(IF(B3=$B$3:$B$21,$C$3:$C$21))

    str_frm = ""STDEV.S(IF("" &amp; _
        rng_criterion.Address &amp; ""="" &amp; _
        rng_criteria.Address &amp; "","" &amp; _
        rng_values.Address &amp; ""))""

    'if you have more than one sheet, be sure it evalutes in the right context
    'or add the sheet name to the references above
    'single sheet works fine with just Application.Evaluate

    'STDEV_S_IF = Application.Evaluate(str_frm)
    STDEV_S_IF = Sheets(""Sheet2"").Evaluate(str_frm)

End Function
</code></pre>

<p>The formula in <code>F3</code> is the VBA UDF of the same formula as above, it is entered as a normal formula (although entering as an array does not affect anything) and is copied down to the end.</p>

<pre><code>=STDEV_S_IF($B$3:$B$21,B3,$C$3:$C$21)
</code></pre>

<p>It is worth noting that <code>.Evaluate</code> processes this correctly as an array formula.  You can compare this against the <code>NON-ARRAY</code> column included in the output.  I am not certain how Excel knows to treat it this way.  There was previously <a href=""http://stackoverflow.com/questions/30314570/vba-long-array-formula-via-application-evaluate"">a fairly extended conversion about how <code>Evaluate</code> process array formulas and determines the output</a>.  This is tangentially related to that conversation.</p>

<p>And for completeness, here is the test of the <code>Sub</code> side of things.  I am running this code in a module with a sheet other than <code>Sheet2</code> active.  This emphasizes the ability of using <code>Sheets(""Sheets2"").Evaluate</code> for a multi-sheet workbook since my <code>Range</code> call is technically misqualified.  Console output is included.</p>

<pre><code>Sub test()

    Debug.Print STDEV_S_IF(Range(""B3:B21""), Range(""B3""), Range(""C3:C21""))
    'correctly returns  206.301357242263

End Sub
</code></pre>
"
"<p>For a pivot table (pt1) on Sheet1, I use VBA to change the value of a filter field (filterfield) using the code below. Let's say values for field can be A, B or C</p>

<pre><code>Sheets(""Sheet1"").PivotTables(""pt1"").PivotFields(""filterfield"").CurrentPage = ""A""
</code></pre>

<p>Occasionally, and let's say randomonly for the purposes of this question, A, B or C will not be a valid selection for filterfield. When VBA attempts to change the field, it throws a run-time error. I want to avoid this.</p>

<p>How can I check if my values are valid for filterfield before I run the code above? I would like to avoid using On Error and VBA does not have try/catch functionality..</p>
","<p>You can iterate through the <code>PivotItems</code> and check the <code>Name</code> against your test.</p>

<pre><code>Sub CheckIfPivotFieldContainsItem()

    Dim pt As PivotTable
    Set pt = Sheet1.PivotTables(1)

    Dim test_val As Variant
    test_val = ""59""

    Dim pivot_item As PivotItem
    For Each pivot_item In pt.PivotFields(""C"").PivotItems
        If pivot_item.Name = test_val Then
            Debug.Print ""MATCHES""
        End If
    Next pi

End Sub
</code></pre>

<p><strong>Relevant data</strong> shows that a match should exist and indeed it returns <code>MATCHES</code>.</p>

<p><img src=""https://i.stack.imgur.com/PR6PA.png"" alt=""pivot data""></p>
"
"<p>I seem to be getting an error on this, and I do not understand why, I know I can just use Range with letters but I want to learn how to do it in this format.</p>

<pre><code> ThisWorkbook.Sheets(""t"").Range(Cells(1, 1), Cells(2, 2)).Value = ThisWorkbook.Sheets(""1"").Range(Cells(1, 1), Cells(2, 2)).Value
</code></pre>
","<p>The answer by @Sobigen gives a good way to qualify your references to avoid the error.</p>

<p>You can also avoid <code>Cells</code> altogether by using <code>Resize</code>.</p>

<pre><code>Sub UseResizeInsteadOfCells()

    ThisWorkbook.Sheets(""t"").Range(""A1"").Resize(2, 2).Value = _
        ThisWorkbook.Sheets(""1"").Range(""A1"").Resize(2, 2).Value

End Sub
</code></pre>

<p>I used <code>A1</code> since you are doing <code>Cells(1,1)</code> on a <code>Worksheet</code> which is the same reference.  You could also use <code>.Cells(1,1).Resize(2,2)</code> and get the same result without worrying about qualifying references inside a <code>Range</code> call.</p>
"
"<p>I'm trying to write a linear regression function that dynamically references columns, can handle <code>#N/A</code> values, and will function as additional rows are added over time. Here is a sample dataset:</p>

<pre><code>Date        Value 1 Value 2
1/2/1991    #N/A    #N/A
2/4/2002    276.36  346.31
1/7/2003    252     350
1/21/2004   232     345.5
1/6/2005    257     368
2/1/2006    278.24  390.11
2/23/2007   #N/A    380.46
2/11/2008   326.34  383.04
2/12/2009   #N/A    399.9
2/17/2009   334.39  #N/A
1/29/2010   344.24  400.83
1/27/2011   342.88  404.52
2/7/2012    379     417.91
1/23/2013   #N/A    433.35
</code></pre>

<p>Here is the function that I've developed so far, based on <a href=""http://www.mrexcel.com/forum/excel-questions/677162-how-do-i-ignore-n-linest-i-have-partial-solution-already.html"" rel=""nofollow"">this forum post</a>.  It calculates the linear regression for Value 1.</p>

<pre><code>=TRANSPOSE(
  LINEST(
    N(
      OFFSET(
        INDIRECT(""B2"" &amp; "":B"" &amp; COUNTA(B:B)),
          SMALL(
            IF(
              ISNUMBER(
                INDIRECT(""A2:A"" &amp; COUNTA($A:$A)) *
                INDIRECT(""B2"" &amp; "":B"" &amp; COUNTA(B:B))),
              ROW(INDIRECT(""B2:B"" &amp; COUNTA(B:B))) - ROW(B2)),
            ROW(INDIRECT(""1:"" &amp; MIN(
              COUNT(INDIRECT(""A2:A"" &amp; COUNTA($A:$A))),
              COUNT(INDIRECT(""B2:B"" &amp; COUNTA(B:B))))))), 0, 1)),
    N(
      OFFSET(
        INDIRECT(""A2:A"" &amp; COUNTA($A:$A)),
          SMALL(
            IF(
              ISNUMBER(
                INDIRECT(""A2:A"" &amp; COUNTA($A:$A)) *
                INDIRECT(""B2:B"" &amp; COUNTA(B:B))),
              ROW(INDIRECT(""B2:B"" &amp; COUNTA(B:B))) - ROW(B2)),
            ROW(INDIRECT(""1:"" &amp; MIN(
              COUNT(INDIRECT(""A2:A"" &amp; COUNTA($A:$A))),
              COUNT(INDIRECT(""B2:B"" &amp; COUNTA(B:B))))))), 0, 1)),
    TRUE, FALSE))
</code></pre>

<p>With the way it is currently written, dragging my array to the right to solve for Value 2 requires some manual updating of the formula.  Everything in quotes in the <code>INDIRECT</code> formulas must be manually changed from <code>B</code> to <code>C</code>.  I have 40 columns of data, though, so I tried to make the formula entirely dynamic using <code>ADDRESS</code>, <code>ROW</code>, and <code>COLUMN</code>:</p>

<pre><code>=TRANSPOSE(
  LINEST(
    N(
      OFFSET(
        INDIRECT(ADDRESS(2, COLUMN(B2)) &amp; "":"" &amp; ADDRESS(COUNTA(B:B), COLUMN(B2))),
        SMALL(
          IF(
            ISNUMBER(
              INDIRECT(""A2:A"" &amp; COUNTA($A:$A)) *
              INDIRECT(ADDRESS(2, COLUMN(B2)) &amp; "":"" &amp; ADDRESS(COUNTA(B:B), COLUMN(B2)))),
            ROW(INDIRECT(ADDRESS(2, COLUMN(B2)) &amp; "":"" &amp; ADDRESS(COUNTA(B:B), COLUMN(B2)))) - ROW(B2)),
          ROW(INDIRECT(""1:"" &amp; MIN(
            COUNT(INDIRECT(""A2:A"" &amp; COUNTA($A:$A))),
            COUNT(INDIRECT(ADDRESS(2, COLUMN(B2)) &amp; "":"" &amp; ADDRESS(COUNTA(B:B), COLUMN(B2)))))))), 0, 1)),
    N(
      OFFSET(
        INDIRECT(""A2:A"" &amp; COUNTA($A:$A)),
          SMALL(
            IF(
              ISNUMBER(
                INDIRECT(""A2:A"" &amp; COUNTA($A:$A)) *
                INDIRECT(ADDRESS(2, COLUMN(B2)) &amp; "":"" &amp; ADDRESS(COUNTA(B:B), COLUMN(B2)))),
              ROW(INDIRECT(ADDRESS(2, COLUMN(B2)) &amp; "":"" &amp; ADDRESS(COUNTA(B:B), COLUMN(B2)))) - ROW(B2)),
            ROW(INDIRECT(""1:"" &amp; MIN(
              COUNT(INDIRECT(""A2:A"" &amp; COUNTA($A:$A))),
              COUNT(INDIRECT(ADDRESS(2, COLUMN(B2)) &amp; "":"" &amp; ADDRESS(COUNTA(B:B), COLUMN(B2)))))))), 0, 1)),
    TRUE, FALSE))
</code></pre>

<p>This gives me <code>#REF!</code>.  When I do a step-by-step evaluation of the formula, it looks like the issue comes when Excel evaluates <code>COLUMN</code>.  It introduces braces to the formula, which propagate through the rest of the <code>INDIRECT</code> evaluation.  Here is a quick comparison:</p>

<p><strong>Original formula:</strong></p>

<pre><code>INDIRECT(""B2:B15"")
</code></pre>

<p><strong>Dynamic formula:</strong></p>

<pre><code>INDIRECT({""$B$2:$B$15""})
</code></pre>

<p>This evaluates as <code>#VALUE</code>, and at that point the rest of the formula is broken.  Is there a way to force Excel to not use braces in this evaluation, or is there a better way of making this calculation?</p>
","<p>Are you only trying to get the <code>SLOPE</code> from the linear regression?  If so, you can just use the <code>SLOPE</code> function after converting the <code>#N/A</code> to blanks (using <code>IFERROR</code> in a formula).  <code>SLOPE</code> will then just toss out the blanks.  If you want the intercept as well, use the same formulas below and substitute <code>INTERCEPT</code> for <code>SLOPE</code>.</p>

<p><strong>Picture of ranges</strong></p>

<p><img src=""https://i.stack.imgur.com/ozBUv.png"" alt=""picture""></p>

<p><strong>Formulas</strong> are array formulas (use CTRL+SHIFT+ENTER) and copied over. Given this arrangement, the simple formula (non-dyanmic) would be:</p>

<pre><code>=SLOPE(IFERROR(B2:B15,""""),$A$2:$A$15)
</code></pre>

<p>If you want these to be dynamic, you can use <code>INDEX</code> and <code>COUNTA</code> to get the dynamic range.</p>

<pre><code>=SLOPE(IFERROR(B2:INDEX(B:B,COUNTA(B:B)),""""),$A$2:INDEX($A:$A,COUNTA($A:$A)))
</code></pre>

<p><strong>Use a <code>Table</code> instead</strong></p>

<p>Even better, you could define this data inside a <code>Table</code> and then use the headers to pull in the whole column.  That formula would look nice and copy easily.</p>

<p><img src=""https://i.stack.imgur.com/Q9XtG.png"" alt=""table instead""></p>

<p>Still using an array formula here, but the only variable is the column heading which is used to look into the <code>Table1</code>.  This one would be more resistant to blanks in the data which will break the <code>COUNTA</code> used above.</p>

<pre><code>=SLOPE(IFERROR(INDEX(Table1,,MATCH(M1,Table1[#Headers])),""""),Table1[Date])
</code></pre>
"
"<p>I want to loop through a range of cells alphabetically to create a report in alphabetical order. I dont want to sort the sheet as the original order is important.</p>

<pre><code>Sub AlphaLoop()

'This is showing N and Z in uppercase, why?
For Each FirstLetter In Array(a, b, c, d, e, f, g, h, i, j, k, l, m, N, o, p, q, r, s, t, u, v, w, x, y, Z)
    For Each SecondLetter In Array(a, b, c, d, e, f, g, h, i, j, k, l, m, N, o, p, q, r, s, t, u, v, w, x, y, Z)
        For Each tCell In Range(""I5:I"" &amp; Range(""I20000"").End(xlUp).Row)
            If Left(tCell, 2) = FirstLetter &amp; SecondLetter Then
                'Do the report items here
        End If
        Next
    Next
Next

End Sub
</code></pre>

<p>Note that this code is untested, only sorts by the first 2 letters and is time consuming as it has to loop through the text 676 times. Is there a better way than this?</p>
","<p>One option is to create an array of the values, quick sort the array, and then iterate the sorted array to create the report.  This works even if there are  duplicates in the source data (<strong>edited</strong>).</p>

<p><strong>Picture of ranges and results</strong> shows the data in the left box and the sorted ""report"" on the right.  My report is just copying the data from the original row.  You could do whatever at this point.  I added the coloring after the fact to show the correspondence.</p>

<p><img src=""https://i.stack.imgur.com/OsCEI.png"" alt=""results of sorting""></p>

<p><strong>Code</strong> runs through the data index, sorts the values, and then runs through them again to output the data.  It is using <code>Find/FindNext</code> to get the original item from the sorted array.</p>

<pre><code>Sub AlphabetizeAndReportWithDupes()

    Dim rng_data As Range
    Set rng_data = Range(""B2:B28"")

    Dim rng_output As Range
    Set rng_output = Range(""I2"")

    Dim arr As Variant
    arr = Application.Transpose(rng_data.Value)
    QuickSort arr
    'arr is now sorted

    Dim i As Integer
    For i = LBound(arr) To UBound(arr)

        'if duplicate, use FindNext, else just Find
        Dim rng_search As Range
        Select Case True
            Case i = LBound(arr), UCase(arr(i)) &lt;&gt; UCase(arr(i - 1))
                Set rng_search = rng_data.Find(arr(i))
            Case Else
                Set rng_search = rng_data.FindNext(rng_search)
        End Select

        ''''do your report stuff in here for each row
        'copy data over
        rng_output.Offset(i - 1).Resize(, 6).Value = rng_search.Resize(, 6).Value

    Next i
End Sub

'from http://stackoverflow.com/a/152325/4288101
'modified to be case-insensitive and Optional params
Public Sub QuickSort(vArray As Variant, Optional inLow As Variant, Optional inHi As Variant)

    Dim pivot   As Variant
    Dim tmpSwap As Variant
    Dim tmpLow  As Long
    Dim tmpHi   As Long

    If IsMissing(inLow) Then
      inLow = LBound(vArray)
    End If

    If IsMissing(inHi) Then
      inHi = UBound(vArray)
    End If

    tmpLow = inLow
    tmpHi = inHi

    pivot = vArray((inLow + inHi) \ 2)

    While (tmpLow &lt;= tmpHi)

       While (UCase(vArray(tmpLow)) &lt; UCase(pivot) And tmpLow &lt; inHi)
          tmpLow = tmpLow + 1
       Wend

       While (UCase(pivot) &lt; UCase(vArray(tmpHi)) And tmpHi &gt; inLow)
          tmpHi = tmpHi - 1
       Wend

       If (tmpLow &lt;= tmpHi) Then
          tmpSwap = vArray(tmpLow)
          vArray(tmpLow) = vArray(tmpHi)
          vArray(tmpHi) = tmpSwap
          tmpLow = tmpLow + 1
          tmpHi = tmpHi - 1
       End If

    Wend

    If (inLow &lt; tmpHi) Then QuickSort vArray, inLow, tmpHi
    If (tmpLow &lt; inHi) Then QuickSort vArray, tmpLow, inHi

End Sub
</code></pre>

<p><strong>Notes on the code:</strong></p>

<ul>
<li>I have taken the Quick Sort code from this <a href=""http://stackoverflow.com/a/152325/4288101"">previous answer</a> and added <code>UCase</code> to the comparisons for case-insensitive searching and made parameters <code>Optional</code> (and <code>Variant</code> for that to work).</li>
<li>The <code>Find/FindNext</code> part is going through the original data and locating the sorted items therein.  If a duplicate is found (that is, if the current value matches the previous value) then it uses <code>FindNext</code> starting at the previously found entry.</li>
<li>My report generation is just taking the values from the data table.  <code>rng_search</code> holds the <code>Range</code> of the current item in the original data source.</li>
<li>I am using <code>Application.Tranpose</code> to force <code>.Value</code> to be a <code>1-D</code> array instead of the multi-dim like normal.  See <a href=""http://stackoverflow.com/a/7651439/4288101"">this answer for that usage</a>.  Transpose the array again if you want to output into a column again.</li>
<li>The <code>Select Case</code> bit is just a hacky way of doing short-circuit evaluation in VBA.  See <a href=""http://stackoverflow.com/a/3245183/4288101"">this previous answer</a> about the usage of that.</li>
</ul>
"
"<p>I am exporting the table data to excel and trying to generate a scatter graph for it.</p>

<p>The code for generating is as follows,</p>

<pre><code>Dim xlApp As Excel.Application
Dim xlWorkBook As Excel.Workbook
Dim xlWorkSheet As Excel.Worksheet
Dim misValue As Object = System.Reflection.Missing.Value
Dim i As Integer
Dim j As Integer
xlApp = New Excel.ApplicationClass
xlWorkBook = xlApp.Workbooks.Add(misValue)
xlWorkSheet = xlWorkBook.Sheets(""sheet1"")
For i = 0 To DataGridView2.RowCount - 1
   For j = 0 To DataGridView2.ColumnCount - 1
       xlWorkSheet.Cells(i + 1, j + 1) = _
       DataGridView2(j, i).Value.ToString()
   Next
Next
'create chart
Dim chartPage As Excel.Chart
Dim xlCharts As Excel.ChartObjects
Dim myChart As Excel.ChartObject
Dim chartRange As Excel.Range
xlCharts = xlWorkSheet.ChartObjects
myChart = xlCharts.Add(180, 80, 300, 250)
chartPage = myChart.Chart

With chartPage
   chartRange = xlWorkSheet.Range(""B2"", ""C16"")
   .SetSourceData(chartRange)
   'set how you want to draw chart i.e column wise or row wise
   .PlotBy = Excel.XlRowCol.xlColumns
   'set data labels for bars
   .ApplyDataLabels(Excel.XlDataLabelsType.xlDataLabelsShowNone)
   'set legend to be displayed or not
   .HasLegend = True
   'set legend location
   .Legend.Position = Excel.XlLegendPosition.xlLegendPositionRight
   'select chart type
   .ChartType = Excel.XlChartType.xlXYScatter
   'chart title
   .HasTitle = True
   .ChartTitle.Text = ""XY Scatter Chart""
   'set titles for Axis values and categories
   Dim xlAxisCategory, xlAxisValue As Excel.Axes
   xlAxisCategory = CType(chartPage.Axes(,                           
   _Excel.XlAxisGroup.xlPrimary), Excel.Axes)
   xlAxisCategory.Item(Excel.XlAxisType.xlCategory).HasTitle = True
   xlAxisCategory.Item(Excel.XlAxisType.xlCategory)
      .AxisTitle.Characters.Text = ""Title 1""
   xlAxisValue = CType(chartPage.Axes(, _Excel.XlAxisGroup.xlPrimary),  
      Excel.Axes)
   xlAxisValue.Item(Excel.XlAxisType.xlValue).HasTitle = True
   xlAxisValue.Item(Excel.XlAxisType.xlValue).AxisTitle.Characters.Text 
      = ""Velocity""
End With
xlWorkSheet.SaveAs(""C:\vbexcel.xlsx"")
xlWorkBook.Close()
xlApp.Quit()

releaseObject(xlApp)
releaseObject(xlWorkBook)
releaseObject(xlWorkSheet)
</code></pre>

<p>and the output after generating it I get like below,</p>

<p><img src=""https://i.stack.imgur.com/HoevG.jpg"" alt=""Graph based on above code""></p>

<p>but the actual graph appears to be like this If I generate graph manually in the excel</p>

<p><img src=""https://i.stack.imgur.com/FakUL.jpg"" alt=""Expected Graph when generated manually in excel""></p>

<p>I am using Visual Studio 13 and Framework 3.5</p>
","<p>You need to manually create the <code>Series</code> object and supply it with <code>XValues</code> and <code>Values</code> properties accordingly.  This replaces the call to <code>SetSourceData</code>.</p>

<p>Here is some rough C# code that works.  I apologize for not using VB.NET.  The key step is to use the <code>NewSeries</code> method on the <code>SeriesCollection</code> object to get an empty series to add data to.  <a href=""https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.seriescollection.newseries.aspx?cs-save-lang=1&amp;cs-lang=vb#code-snippet-1"" rel=""nofollow noreferrer"">Here is the MS support for <code>NewSeries</code></a>.</p>

<pre><code>private void CreateChartAddSeries()
{
    Microsoft.Office.Interop.Excel.Application xl_app = new Microsoft.Office.Interop.Excel.Application();
    xl_app.Visible = true;

    Workbook wkbk = xl_app.Workbooks.Add();
    Worksheet wksht = wkbk.Worksheets[1];

    wksht.get_Range(""A1:A10"").Formula = ""=RAND()"";
    wksht.get_Range(""B1:B10"").Formula = ""=RAND()"";

    ChartObjects cht_objs = wksht.ChartObjects();
    ChartObject cht_obj = cht_objs.Add(100, 0, 300, 300);

    Chart cht = cht_obj.Chart;
    cht.ChartType = XlChartType.xlXYScatter;

    SeriesCollection sc = cht.SeriesCollection();

    Series ser = sc.NewSeries();
    ser.Values = wksht.get_Range(""B1:B10"");
    ser.XValues = wksht.get_Range(""A1:A10"");

}
</code></pre>

<p><strong>Results</strong></p>

<p><img src=""https://i.stack.imgur.com/fX3gf.png"" alt=""result of C# code""></p>
"
"<p>Hello I have been trying to use the <a href=""https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.range.pastespecial.aspx"" rel=""nofollow"">PasteSpecial</a> paste values on another sheet but every thing I've tried I keep receiving the same error. </p>

<blockquote>
  <p>PasteSpecial method of Range class failed</p>
</blockquote>

<pre><code>xl.Application xlApp = Globals.ThisWorkbook.Application;
xl.Workbook wb = xlApp.ActiveWorkbook;
xl.Worksheet data = wb.Sheets[""Data""];
xl.Worksheet datasheet = wb.Sheets[""DataSheet""];
xl.Worksheet pivot = wb.Sheets[""Pivot""];
xl.Range dataRng = data.Range[""A1:C"" + 
      xlApp.WorksheetFunction.CountA(data.Range[""A:A""])];
xl.Range pivotRng = pivot.Range[""A1""];

addPivot ap = new addPivot();
ap.DataRange = dataRng;
ap.DestRng = pivotRng;
ap.PivotSheet = pivot;
ap.createPivot(""FullName"",""Date"");

pivot.PivotTables(""PivotTable1"").NullString = ""0"";
pivot.UsedRange.Copy();   

datasheet.Range[""A2:GT999""].ClearContents();  

datasheet.Range[""A2""].PasteSpecial(xl.XlPasteType.xlPasteValues, 
                                   xl.XlPasteSpecialOperation.xlPasteSpecialOperationNone, 
                                   System.Type.Missing, System.Type.Missing);

datasheet.Range[""2:2""].ClearContents();
</code></pre>

<p>I have Tried </p>

<pre><code>datasheet.Range[""A2""].PasteSpecial(xl.XlPasteType.xlPasteValues

datasheet.Range[""A2""].PasteSpecial(xl.XlPasteType.xlPasteValues, 
                                   xl.XlPasteSpecialOperation.xlPasteSpecialOperationNone)
</code></pre>

<p>and what you see above.</p>

<p>thanks!</p>
","<p>Do the <code>ClearContents</code> before the <code>Copy</code>.  Excel is removing your copied range (same as hitting <code>ESC</code> in the program) when you clear those cells out.  Then you are trying to <code>PasteSpecial</code> but nothing is in the clipboard any longer.</p>

<pre><code>//...code above

datasheet.Range[""A2:GT999""].ClearContents();  

pivot.UsedRange.Copy();

datasheet.Range[""A2""].PasteSpecial(xl.XlPasteType.xlPasteValues, 
                                   xl.XlPasteSpecialOperation.xlPasteSpecialOperationNone, 
                                   System.Type.Missing, System.Type.Missing);                                   
//code below...
</code></pre>

<p>If you are debugging this step-by-step, you would see the dashed border around the copied range disappear after the <code>ClearContents</code> call.  Excel is a bit odd (but predictable) about when the copied range is forgotten.  Editing cells anywhere in the <code>Workbook</code> is one sure way to make it forget.</p>
"
"<p>I need to insert a row into an existing Excel worksheet using C# but keep the existing formatting.</p>

<p>The default behaviour in Excel is to use the formatting of the row above, which in some cases is what I don't want as this could be different.</p>

<p>I am sure I have seen that there is a way to specify using the format of the row below rather than from the row above but I can't find it now.</p>

<p>Does anyone know how to specify this?</p>

<p>This is the code I am using:</p>

<pre><code>sheet.Range[string.Format(""{0}:{0}"", row)]
  .EntireRow
  .Insert(
  Excel.XlInsertShiftDirection.xlShiftDown);
</code></pre>
","<p>You need to use the <code>CopyOrigin</code> parameter as well.</p>

<pre><code>sheet.Range[string.Format(""{0}:{0}"", row)]
  .EntireRow
  .Insert(
  Excel.XlInsertShiftDirection.xlShiftDown,
  Excel.XlInsertFormatOrigin.xlFormatFromRightOrBelow
)
</code></pre>

<p>See here for details on <a href=""https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.range.insert.aspx?cs-save-lang=1&amp;cs-lang=csharp#code-snippet-1"" rel=""nofollow noreferrer"">Insert</a> and <a href=""https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.xlinsertformatorigin.aspx"" rel=""nofollow noreferrer"">that enum</a>.</p>

<p>It is possible to get this parameter by recording a macro.  There is a small box that pops up when you insert the row to choose where the formatting comes from.</p>

<p><img src=""https://i.stack.imgur.com/UILH0.png"" alt=""format options""></p>
"
"<p>Here is my current formula I use to pull the latest live date for a customer out of a web query.</p>

<pre><code>{=LARGE(
    IF(Table_owssvr_1[HQ Name]=B1,1,0)*
    IF(ISNUMBER(Table_owssvr_1[Live Date]),Table_owssvr_1[Live Date],0),
  1)}
</code></pre>

<p><code>B1</code> is the name of the customer.  <code>HQ name</code> is column <code>A</code> and contains customer names.  </p>

<p>This formula will give me the latest open date for the customer but it doesn't filter whether it was a live, closed, or customer on hold.  The problem I am having is that I need to have this formula check one more column in that table to see that is matches <code>Live -3</code> before giving me the largest date.  It is column <code>C</code> in the table <code>Status</code>.  If the data in the column says <code>Live -3</code> for that customer, then I need it to pull the largest date from among multiple entries that say the <code>Live -3</code>.  The dates are in column <code>L</code>, <code>Live Date</code>.</p>

<p>I've been attempting using match and index function but have had no luck.  I appreciate any help.</p>
","<p>This should be as simple as multiplying in another condition that returns <code>1/0</code>.  You will get a 0 unless both conditions are met.</p>

<pre><code>{=LARGE(
    IF(Table_owssvr_1[HQ Name]=B1,1,0)*
    IF(Table_owssvr_1[Status]=""Live -3"",1,0)*
    IF(ISNUMBER(Table_owssvr_1[Live Date]),Table_owssvr_1[Live Date],0),
  1)}
</code></pre>
"
"<p>I am trying to go through each CommandButton on a worksheet. But I keep getting the Type Mismatch error when I try to run my function. I really dont know what mistake I am making here. Could someone please help me.</p>

<pre><code>Sub Worksheet_Calculate()


Dim s As Shape
Dim findShape As String

findShape = ""Not Found"" 
For Each s In Me.Shapes
    If Intersect(s.TopLeftCell.Address, Range(""D8:D21,D52:D64,D107:D117"")) = True Then
      findShape = s.Name
        MsgBox findShape, vbOKOnly
        Else
        MsgBox ""The active cell does Intersect ""

     End If
Next
</code></pre>
","<p>You are not using <code>Intersect</code> correctly.  <code>Intersect</code> returns the <em><code>Range</code></em> which is the intersection of two other ranges.  If you want to know that the two <code>Ranges</code> have something in common, you check that the result is not <code>Nothing</code>.  Specifically you do:</p>

<pre><code>Dim s As Shape
Dim findShape As String

findShape = ""Not Found""
For Each s In Me.Shapes
    If Not Intersect(s.TopLeftCell, Range(""D8:D21,D52:D64,D107:D117"")) Is Nothing Then
        findShape = s.Name
        MsgBox findShape, vbOKOnly
    Else
    MsgBox ""The active cell does Intersect ""

    End If
Next
</code></pre>

<p>Note that I have also removed <code>.Address</code> from <code>TopLeftCell</code>.  <code>Intersect</code> works on <code>Ranges</code> which is what <code>TopLeftCell</code> already is.  <code>Address</code> returns a string which is not what <code>Intersect</code> wants.  I think this error is actually what's causing the run time error, although the incorrect usage of <code>Intersect</code> would be next.</p>
"
"<p>I have a dataset where I have about 200 <code>\N</code> and I'd like to replace <code>\N</code> with the date/day value in the row above. Such as for row 641, I want to change the date to 10-Nov-14 and day to Mon:  </p>

<p><img src=""https://i.stack.imgur.com/Uoz4B.png"" alt=""enter image description here"">  </p>

<p>If this can be done in R, does the format of date matter? As currently, these dates are shown as factors.</p>
","<p>This can be done rapidly in Excel with a quick use of <code>Find</code> and <code>FindNext</code>.  Assuming you want to replace all of the <code>\N</code> on the <code>ActiveSheet</code>, this code will terminate once it has replaced them all.  <code>Offset(-1)</code> gets the value one row up.</p>

<pre><code>Sub ReplaceWithValueAbove()

    Dim rng_search As Range
    Set rng_search = ActiveSheet.UsedRange.Find(""\N"")

    While Not rng_search Is Nothing
        'set to row above
        rng_search = rng_search.Offset(-1)

        'find the next one
        Set rng_search = ActiveSheet.UsedRange.FindNext()
    Wend

End Sub
</code></pre>

<p><strong>Before and After pictures</strong></p>

<p><img src=""https://i.stack.imgur.com/EyCGh.png"" alt=""before""> <img src=""https://i.stack.imgur.com/Hw5sD.png"" alt=""after""></p>
"
"<p>I worked on VSTO C# Excel 2013. I tried and searched many approaches to find a way to trigger more events.</p>

<p>One of the important events I need is, cells formatted event (changing background color, merging cells.</p>

<p>Is there any way?</p>
","<p>There is no such event.  Your main events are for <code>Workbook</code> and <code>Worksheet</code> objects.  Intellisense is presumably giving them all to you.  If not, check out the <a href=""https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.worksheet_events.aspx"" rel=""nofollow"">MS reference for <code>Worksheet</code> events</a>.  There is a similar list for <code>Workbook</code>.  These are also the same as the events available within the VBA editor inside Excel.</p>

<p>If you want to cheat and make an event, it involves watching all of the cells and detecting the change yourself using the <code>Worksheet_SelectionChange</code> event.  See related: <a href=""http://stackoverflow.com/questions/21342408/how-to-detect-changes-in-cell-format"">How to detect changes in cell format?</a></p>

<p>Note that approach will not work if you are trying to detect format changes that are effected by your code instead of the user (unless of course you are using <code>Select</code> in your code which would be inadvisable).</p>
"
"<p>I don't quite understand the differences between the combobox properties <code>SelText</code> and <code>Text</code>.</p>

<p>If I want to send the content of a combobox as a parameter to another procedure, should I send <code>.text</code> or <code>.selText</code>?</p>

<p>If I want to make enter text into a combobox using a macro, should I write the text in <code>.selText</code> or <code>.Text</code>?</p>
","<p>The difference is really given in the name (<strong>Sel</strong>Text vs. Text) where <strong>Sel</strong> stands for <code>Selected</code>.  One is used to return or modify the selected text (i.e. <code>SelText</code>) and the other is used to return or modify the entire text (i.e. <code>Text</code>).</p>

<p>If no text is selected in the ComboBox then they return and modify the same value.</p>

<p>I suspect you want to use <code>Text</code> unless you are specifically interested in the selected text.</p>

<p>This appears to be consistent for an ActiveX control on a <code>Worksheet</code> or for a control on a User Form.</p>
"
"<p>I have a script I put together to import multiple text files that are semi colon delimited in to new workbooks for each file that is selected. It is about 99% functional aside from the fact it seems to paste all of the data from the selected text files in a column after the correctly imported columns in the new workbook. I'm not entirely sure what part of the code is causing this to be pasted in to that particular row. Below is the main part of the code. Can anyone identify where the issue might be?</p>

<p>Also I just want to say thanks to the community here. I have learned a lot by going through other posts on this forum.</p>

<pre><code>FilesToOpen = Application.GetOpenFilename _
  (FileFilter:=""Text Files (*.txt), *.txt"", _
  MultiSelect:=True, Title:=""Text Files to Open"")



For i = LBound(FilesToOpen) To UBound(FilesToOpen)
    Set wkb = Workbooks.Open(FilesToOpen(i))
    Set wks = wkb.ActiveSheet
     With wks.QueryTables.Add(Connection:= _
        ""TEXT;"" &amp; FilesToOpen(i), Destination:=Range(""A1""))
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .RefreshStyle = xlInsertDeleteCells
        .TextFilePlatform = 437
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = True
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = True
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
Next i
</code></pre>
","<p>Your issue is the use of <code>Workbooks.Open</code> to get a new <code>Workbook</code>.  You are really opening the text file in the same way as going to <code>File-&gt;Open</code>.  If you want a <em>new</em> <code>Workbook</code> to dump the data, create it explicitly using <code>Set wkb = Workbooks.Add()</code> instead of your current call to <code>Workbooks.Open</code>.  You are seeing the file's data because you opened the file first.</p>

<p><strong>Full code</strong></p>

<pre><code>FilesToOpen = Application.GetOpenFilename _
  (FileFilter:=""Text Files (*.txt), *.txt"", _
  MultiSelect:=True, Title:=""Text Files to Open"")



For i = LBound(FilesToOpen) To UBound(FilesToOpen)
    Set wkb = Workbooks.Add()
    Set wks = wkb.ActiveSheet
     With wks.QueryTables.Add(Connection:= _
        ""TEXT;"" &amp; FilesToOpen(i), Destination:=Range(""A1""))
        .FieldNames = True
        .RowNumbers = False
        .FillAdjacentFormulas = False
        .PreserveFormatting = True
        .RefreshOnFileOpen = False
        .SavePassword = False
        .SaveData = True
        .AdjustColumnWidth = True
        .RefreshPeriod = 0
        .TextFilePromptOnRefresh = False
        .RefreshStyle = xlInsertDeleteCells
        .TextFilePlatform = 437
        .TextFileStartRow = 1
        .TextFileParseType = xlDelimited
        .TextFileTextQualifier = xlTextQualifierDoubleQuote
        .TextFileConsecutiveDelimiter = True
        .TextFileTabDelimiter = False
        .TextFileSemicolonDelimiter = True
        .TextFileCommaDelimiter = False
        .TextFileSpaceDelimiter = False
        .TextFileColumnDataTypes = Array(2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
        .TextFileTrailingMinusNumbers = True
        .Refresh BackgroundQuery:=False
    End With
Next i
</code></pre>
"
"<p><strong>Update Below -- 6/4</strong></p>

<p>I have two worksheets in excel. One is a list of donors with their check#/amount/ Donor ID ( ""<em>donations</em>"" worksheet) and the other is a copy of the accounting info with Donor ID/check#/amounts (<em>quickbooks</em> worksheet). Quickbooks does not have the DonorID's filled in yet. </p>

<p>The issue I have is that i need match up Donor ID's with their checks. To get this i need to match the <code>check#</code> and <code>amount</code> in ""Quickbooks"" to the same in ""Donations"",  when they match,  it will give me the Donor ID that corresponds with that check.</p>

<p>Here is how it is laid out:</p>

<pre><code>Donations Worksheet:
     A                  B           C
 DonationID           Check#     Amount
1   179                106        $200
2   210                106        $500
3   220                106        $600

Quickbooks Worksheet:
      A                B          C
  DonationID         Check#     Amount
1    n/a              106        200
2    N/a              1074       500
3    N/a              300        1000
</code></pre>

<p>When I ask to find ""check# 106 is for $200""  it should tell me that it is from Donor 179. </p>

<p>Some checks don't match and are not from donors. The list has close to 50000 names.</p>

<p>Please ask me any questions so i can clarify this more. I am also somewhat new to all this and apologize if I am not to clear.</p>

<p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>

<p>Thanks everyone for your help. We are not there yet but you were all steering me in the right direction.</p>

<p>I have added a screen shot of the page for reference because the team was having issues making the given formula's work. I also combined the two sheets onto one page so there is less cross worksheet referencing and will be easier to read.</p>

<p><strong>Cknum = Check#</strong> </p>

<p><img src=""https://i.stack.imgur.com/ktSLB.jpg"" alt=""worksheet""></p>
","<p>One quick way out of this problem is to create a Pivot Table on the <code>Donations</code> data and then use <code>GETPIVOTDATA</code> to pull values out of it to get the donation id on the <code>Quickbooks</code> table.</p>

<p>This is easily done if the donation ID is always numeric.  You set up a Pivot Table with row fields including check number and amount.  You then set the values to be equal to <code>MIN</code> or <code>MAX</code> of the donation ID.  If there is only one result you will get it immediately.  If there is a clash, you can determine this by switching over to <code>COUNT</code> and flag any of those <code>&gt;1</code>.</p>

<p>Once you have the table set up with <code>MAX</code> you can then quickly use <code>GETPIVOTDATA</code> to pull in the matching value.</p>

<p>This assumes that your <code>amount</code> values are close enough (in the floating point decimal sense) to match.  Nearly all will be.  Some may not.  If you can get 50k records down to 100 though to double check, then life is good.</p>

<p><strong>Picture of sample data and Pivot set up</strong>, shows the Pivot Table built on the left data (with the donation ID).  The lookup data is on the right.</p>

<p><img src=""https://i.stack.imgur.com/wjwqT.png"" alt=""data and pivot""></p>

<p><strong>Formula</strong> for the lookup is a simple <code>GETPIVOTDATA</code>, this is in cell <code>F3</code> and copied down.</p>

<pre><code>=GETPIVOTDATA(""Donation"",$B$10,""Check"",G3,""Amount"",H3)
</code></pre>

<p>You will get the <code>#REF!</code> error if a match is not made.  See the last row for an example.</p>
"
"<p>I am having a heck of a time having code from one workbook (""W1"") open another workbook (""W2"") and perform deletions in W2.  When I run it, it selects the ranges in W2 but will not delete the selection.  I figured out I must be explict with naming W2 for the deletions, but I'm getting lost with it.  Any help would be very appreciated.</p>

<p>My code is as follows:</p>

<pre><code>Sub Clear_FM_Contents()

Dim f As FileDialog
Dim varfile As Variant
Dim path As Variant

'Prompt the user to select the Excel File to Import
Set f = Application.FileDialog(msoFileDialogFilePicker)

'Error handling with file selector
If f.Show = False Then
    MsgBox ""You clicked Cancel in the file dialog box.""
    End
End If

'Set the path of the User selected file
For Each varfile In f.SelectedItems
    path = varfile
Next

'Create the Excel object
Dim xlApp As Excel.Application
Set xlApp = CreateObject(""Excel.Application"")
xlApp.Visible = True

'Open the selected Excel file
xlApp.Workbooks.Open path, True, False

'Clear all Template Inputs
With xlApp.ActiveWorkbook
    .Sheets(""Mrkt Data"").Select
    With xlApp.ActiveWorkbook.ActiveSheet
        .Range(""E36,E5,E7,E10,E13,E17,E39,J7:J11,J13:J20,J24:J29,J31:J33,J35,O21"").Select
        .Range(""O21"").Activate
        xlApp.ActiveWorkbook.ActiveSheet.Selection.ClearContents
    End With
    'Close the Excel File
    ActiveWorkbook.Save
    ActiveWorkbook.Close  
End With
'Close Excel
xlApp.Quit
'Eliminate the xl app object from memory
Set xlApp = Nothing

MsgBox ""Model Inputs Cleared""
End Sub
</code></pre>
","<p>If <code>Select</code> works, then just replace it with <code>ClearContents</code> instead and delete the 2 lines under it that try to <code>Activate</code> and <code>Clear</code>.  I suspect the issue is <code>Activate</code> and that <code>O21</code> is being cleared but not the others.  You could also just delete the <code>Activate</code> line but I am trying to clean up an instance of <code>Select</code> that is not needed.</p>

<pre><code>With xlApp.ActiveWorkbook.ActiveSheet
    .Range(""E36,E5,E7,E10,E13,E17,E39,J7:J11,J13:J20,J24:J29,J31:J33,J35,O21"").ClearContents
End With
</code></pre>

<p>instead of</p>

<pre><code>With xlApp.ActiveWorkbook.ActiveSheet
    .Range(""E36,E5,E7,E10,E13,E17,E39,J7:J11,J13:J20,J24:J29,J31:J33,J35,O21"").Select
    .Range(""O21"").Activate
    xlApp.ActiveWorkbook.ActiveSheet.Selection.ClearContents
End With
</code></pre>

<p>You could also compress the <code>With</code> and do it all on one line, but that is too wide for here so I didn't do it.</p>

<p>You should also take a look at <a href=""http://stackoverflow.com/questions/10714251/how-to-avoid-using-select-in-excel-vba-macros/10717999#10717999"">this post about not using Select.</a></p>
"
"<p>I am trying to copy a set of filtered data from one sheet to the bottom of another sheet. And my code works great except for the first time upon opening the file I get a:</p>

<blockquote>
  <p>Run Time error 1004</p>
</blockquote>

<p>If I quit the debugger and re-run the macro it works great.<br>
Here is my code: noted where the problem occurs.</p>

<pre><code>Sub MoveData_Click()
    'Select the filtered alarm data and paste on the master spreadsheet
    Sheets(""DailyGen"").Select
    ActiveSheet.UsedRange.Offset(5, 0).SpecialCells _
        (xlCellTypeVisible).Copy

    Sheets(""2015 Master"").Select

    If ActiveWorkbook.ActiveSheet.FilterMode _
    Or ActiveWorkbook.ActiveSheet.AutoFilterMode Then
        ActiveWorkbook.ActiveSheet.ShowAllData
    End If

    Range(""C4"").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1, -2).Range(""A1"").Select
    ActiveSheet.Paste '~~&gt; THIS IS WHERE IT ERRORS

    'Sort newest to oldest in the date column

    ActiveWorkbook.Worksheets(""2015 Master"").ListObjects(""Table44"").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(""2015 Master"").ListObjects(""Table44"").Sort.SortFields.Add _
        Key:=Range(""Table44[[#All],[Active Time]]""), _
        SortOn:=xlSortOnValues, 
        Order:=xlDescending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets(""2015 Master"").ListObjects(""Table44"").Sort
       .Header = xlYes
       .MatchCase = False
       .Orientation = xlTopToBottom
       .SortMethod = xlPinYin
       .Apply
    End With
End Sub
</code></pre>
","<p>When you <code>ShowAllData</code> (same as <code>Data-&gt;Clear</code> in the Filter section) you are emptying the clipboard and telling Excel to forget about the copied <code>Range</code>.  Do it outside of VBA to confirm if you want.  Excel loves to empty the clipboard when you edit a cell or do much of anything other than selecting.</p>

<p>To fix, do the <code>Copy</code> after the <code>ShowAllData</code>.  In your case, you will have to <code>Select</code> the <code>Worksheet</code> back and forth.</p>

<p>You should generally work to avoid using <code>Select</code> and <code>Activate</code> for your VBA.  <a href=""http://stackoverflow.com/questions/10714251/how-to-avoid-using-select-in-excel-vba-macros"">See this post for details.</a></p>

<p>Here is the final code with the changes made:</p>

<pre><code>Sub MoveData_Click()

'Select the filtered alarm data and paste on the master spreadsheet

Sheets(""2015 Master"").Select
If ActiveWorkbook.ActiveSheet.FilterMode Or ActiveWorkbook.ActiveSheet.AutoFilterMode Then
ActiveWorkbook.ActiveSheet.ShowAllData
End If

Sheets(""DailyGen"").Select
ActiveSheet.UsedRange.Offset(5, 0).SpecialCells _
    (xlCellTypeVisible).Copy

Sheets(""2015 Master"").Select
Range(""C4"").Select
Selection.End(xlDown).Select
ActiveCell.Offset(1, -2).Range(""A1"").Select
ActiveSheet.Paste

 'Sort newest to oldest in the date column

ActiveWorkbook.Worksheets(""2015 Master"").ListObjects(""Table44"").Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(""2015 Master"").ListObjects(""Table44"").Sort.SortFields.Add _
    Key:=Range(""Table44[[#All],[Active Time]]""), SortOn:=xlSortOnValues, Order _
     :=xlDescending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets(""2015 Master"").ListObjects(""Table44"").Sort
   .Header = xlYes
   .MatchCase = False
   .Orientation = xlTopToBottom
   .SortMethod = xlPinYin
   .Apply
End With

End Sub
</code></pre>
"
"<p>I have a set of data where each item has a 2D array of information corresponding to it. I'd like to create a 3D array where the first dimension is the item name and the second and third dimensions are taken up by the info corresponding to the item.</p>

<p>I can read the data for each item into a 2D array, but I can't figure out how to get the 2D array read into the 3D array.</p>

<p>I know the sizes of all the dimensions so I can create an array of fixed size before I begin the reading and writing process.</p>

<p>I'd like to do this by looping only through the names of the items and not looping through every cell of every 2D array.</p>

<p>It is easy to get the 2D arrays read in to an ArrayList but I want to be able to name the items and be able to read these back in to excel and it seems difficult to do with an ArrayList.</p>

<p>The question is: how do I read a 2D selection from excel into a 3D fixed sized array in VBA?</p>
","<p>Here is an example of each approach: array of arrays or <code>Dictionary</code> of arrays.  The <strong>Dictionary approach is considerably easier</strong> than the array of arrays if what you want is keyed lookup of values.  There might be merits to the array of arrays in other cases.</p>

<p>This is dummy code with no real purpose but to show a couple things: grabbing a single value and an array of values.  I am building a 2D array of values by grabbing some <code>Range</code> data which is easy and 2D.  From there I build up the arrays of these values and then put them into the relevant data structure.  Then I poke at the data structure to get some values out of it.</p>

<p><strong>Array of Arrays approach</strong> is shown first (and outputs on the left of the picture).</p>

<pre><code>Sub ArraysOfArrays()

    Dim arrA() As Variant
    Dim arrB() As Variant

    'wire up a 2-D array
    arrA = Range(""B2:D4"").Value
    arrB = Range(""F2:H4"").Value

    Dim arrCombo() As Variant
    ReDim arrCombo(2, 1) As Variant

    'name and give data
    arrCombo(0, 0) = ""arrA""
    arrCombo(1, 0) = arrA

    'add more elements
    ReDim Preserve arrCombo(2, 2)

    arrCombo(0, 1) = ""arrB""
    arrCombo(1, 1) = arrB

    'output a single result
    'cell(2,2) of arrA
    Range(""B6"") = arrCombo(1, 0)(2, 2)

    Dim str_search As String
    str_search = ""arrB""

    'iterate through and output arrB to cells
    Dim i As Integer
    For i = LBound(arrCombo, 1) To UBound(arrCombo, 1)
        If arrCombo(0, i) = str_search Then
            Range(""B8"").Resize(3, 3).Value = arrCombo(1, i)
        End If
    Next i
End Sub
</code></pre>

<p>Couple key points here:</p>

<ul>
<li>You can only expand the array using <code>ReDim</code>.  <code>ReDim</code> is very particular that you only <a href=""http://stackoverflow.com/a/13184027/4288101"">change the last dimension of the array</a> when used with <code>Preserve</code>.  Since I need one of them to track the number of entries, I do that in the second index which is... unnatural.  If you know the size in advance, this painful step is skipped.</li>
<li>My final array is a 2xN array where the 2 contains a name and a YxZ array of data.</li>
<li>In order to find a given array in the mix, you have to iterate through them all.</li>
</ul>

<p><strong>Dictionary of Arrays</strong> is far less code and more elegant.  Be sure to add the reference <code>Tools-&gt;References</code> in the VBA editor to Microsoft Scripting Runtime.</p>

<pre><code>Sub DictionaryOfArrays()

    Dim dict As New Scripting.Dictionary

    'wire up a 2-D array
    arrA = Range(""B2:D4"").Value
    arrB = Range(""F2:H4"").Value

    dict.Add ""arrA"", arrA
    dict.Add ""arrB"", arrB

    'get a single value
    Range(""F6"") = dict(""arrB"")(2, 2)

    'get a array of values
    Range(""F8"").Resize(3, 3) = dict(""arrA"")

End Sub
</code></pre>

<p><strong>Picture of input data and results</strong></p>

<p><img src=""https://i.stack.imgur.com/ApX58.png"" alt=""data and results""></p>

<p>Data to copy if you want it (paste in <code>B1</code>)</p>

<pre><code>a               b       
1   2   3       10  11  12
4   5   6       13  14  15
7   8   9       16  17  18
</code></pre>
"
"<p>Just like the title says, I've been using VB.NET to do various things on Excel and am kinda new. If i have an Excel sheet with various data including staff and things sold, how can i select 2 Columns and sort them so it counts how many of each items were sold by each person into a Messagebox or Listbox?</p>

<p>for eg, the output i'm looking for is something like</p>

<pre><code>Staff   Sold       how many
NAME1 - PRODUCT1 - AMOUNTSOLDBYNAME1
NAME1 - PRODUCT2 - AMOUNTSOLDBYNAME1
NAME1 - PRODUCT3 - AMOUNTSOLDBYNAME1
NAME1 - PRODUCT4 - AMOUNTSOLDBYNAME1
NAME2 - PRODUCT1 - AMOUNTSOLDBYNAME2
NAME2 - PRODUCT2 - AMOUNTSOLDBYNAME2

and so on...
</code></pre>

<p>the furthest i've gotten is counting how many of each staff member there are in  1 column but i would like to go a step further on this and get 2 columns and count each product sold by each person but am unclear how to go about it.</p>

<pre><code>Private Sub getexcelfile_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button3.Click
    Dim excelfile As New OpenFileDialog()
    excelfile.ShowDialog()
    If (excelfile.ShowDialog() = DialogResult.Cancel) Then
        Return
    Else
        Dim file As String = excelfile.FileName
        Dim xlApp As Excel.Application
        Dim xlWorkBook As Excel.Workbook
        Dim xlWorkSheet As Excel.Worksheet

        xlApp = New Excel.Application
        xlWorkBook = xlApp.Workbooks.Open(file)
        xlWorkSheet = xlWorkBook.Worksheets(""PSSalesFullConnectionReport"")

        Dim col As String = ""N""
        For row As Integer = 1 To xlWorkSheet.UsedRange.Rows.Count - 1
            Dim elemValue As String = xlWorkSheet.Range(col &amp; row).Text
            ListBox1.Items.Add(elemValue)
        Next

        MessageBox.Show(ReturnDuplicateListBoxItems(ListBox1))

        ListBox1.Items.Clear()

    End If

End Sub

Public Shared Function ReturnDuplicateListBoxItems(ByVal lBox As System.Windows.Forms.ListBox) As String
    Dim strReturn As New System.Text.StringBuilder
    Dim lItems As New Dictionary(Of String, Integer)
    Dim intCount As Integer = 0
    Dim strCurrentItem As String = String.Empty

    Try
        For Each nItem As String In lBox.Items
            If Not (lItems.ContainsKey(nItem)) Then
                strCurrentItem = nItem
                For Each sItem As String In lBox.Items
                    If sItem.Equals(strCurrentItem) Then
                        intCount += 1
                    End If
                Next
                lItems.Add(nItem, intCount)
                intCount = 0
                strCurrentItem = String.Empty
            End If
        Next

        For i As Integer = 0 To lItems.Count - 1
            strReturn.AppendLine(lItems.Keys(i).ToString &amp; "" - "" &amp; lItems.Values(i).ToString)
        Next

    Catch ex As Exception
        Return strReturn.ToString
    End Try

    Return strReturn.ToString
End Function
</code></pre>

<p>any guidance on this would help me alot</p>
","<p>Slight delay on the answer, but here is relevant code for creating a Pivot Table from Interop (sorry, it's C#) and then using that Pivot Table to summarize the results.  This is nice because once the Pivot Table is done, you know that you have all the unique entries sorted.  You can then iterate the Pivot Table to get the results that you want.  For some cases, this may be easier than building out all the logic on the .NET side of things since Excel is so good at aggregating data.  The downside is you have to create the Pivot Table.</p>

<p>This is full code to create dummy data and summarize it to be as general as possible.</p>

<pre class=""lang-cs prettyprint-override""><code>//up above is a namespace usage that defines:
//using Excel = Microsoft.Office.Interop.Excel;
private void button1_Click(object sender, EventArgs e)
{
    Excel.Application xl_app = new Excel.Application();

    Excel.Workbook wkbk = xl_app.Workbooks.Add();
    Excel.Worksheet sht = wkbk.Worksheets[1];

    xl_app.Visible = true;

    //create some dummy data... not using an array.. I know
    Random rnd = new Random();

    int rows = 100;
    for (int i = 0; i &lt; rows; i++)
    {
        sht.Cells[2 + i, 1].Value = ""NAME"" + rnd.Next(5);
        sht.Cells[2 + i, 2].Value = ""PROD"" + rnd.Next(5);
        sht.Cells[2 + i, 3].Value =  rnd.Next(10);
    }

    sht.Cells[1, 1].Value = ""STAFF"";
    sht.Cells[1, 2].Value = ""SOLD"";
    sht.Cells[1, 3].Value = ""HOW MANY"";

    //create the pivot table
    Excel.PivotCache pc = wkbk.PivotCaches().Add(
        Excel.XlPivotTableSourceType.xlDatabase, 
        sht.get_Range(""A1"").CurrentRegion);

    Excel.PivotTable pt = sht.PivotTables().Add(pc, sht.get_Range(""F1""));

    pt.PivotFields(""STAFF"").Orientation = Excel.XlPivotFieldOrientation.xlRowField;
    pt.PivotFields(""SOLD"").Orientation = Excel.XlPivotFieldOrientation.xlRowField;

    pt.AddDataField(pt.PivotFields(""HOW MANY""), Type.Missing, Excel.XlConsolidationFunction.xlSum);
    //formatting here ensures it is a table with no extra values

    foreach (Excel.PivotField pf in pt.PivotFields())
    {
        pf.Subtotals[1] = false;
    }

    pt.ColumnGrand = false;
    pt.RowGrand = false;

    pt.RowAxisLayout(Excel.XlLayoutRowType.xlTabularRow);
    pt.RepeatAllLabels(Excel.XlPivotFieldRepeatLabels.xlRepeatLabels);

    //now we need to go through the Pivot Table to get data

    Excel.Range rng_start = sht.get_Range(""F3"");

    foreach (Excel.Range rng_cell in 
        sht.get_Range(
            rng_start, 
            rng_start.get_End(Excel.XlDirection.xlDown)))
    {
        Console.WriteLine(""{0} - {1} - {2}"",
            rng_cell.Value,
            rng_cell.get_Offset(0, 1).Value,
            rng_cell.get_Offset(0, 2).Value);
    }

}
</code></pre>

<p><strong>Picture of the resulting <code>Workbook</code></strong> has the Pivot Table over the on the side:</p>

<p><img src=""https://i.stack.imgur.com/OZ1S6.png"" alt=""enter image description here""></p>

<p><strong>Console output</strong> includes rows that have the results.  Shown are the last couple lines:</p>

<pre><code>...
NAME4 - PROD0 - 7
NAME4 - PROD1 - 11
NAME4 - PROD2 - 10
NAME4 - PROD3 - 17
NAME4 - PROD4 - 23
</code></pre>
"
"<p>Please excuse me if I am expecting too much here but I was thinking there must be a quicker way than the way I've been doing it.</p>

<p>So I have spreadsheets that I have to sort and match rows based on criteria in certain columns (in this example, columns <code>F</code>, <code>G</code>, <code>H</code>, <code>I</code>, <code>J</code>, and <code>K</code> are compared) and highlight matching rows a color so its different from the other rows and continue this until every row is colored. Below is an image of the start data and the ideal end of what I need.</p>

<p>My problem comes from not knowing how to tell it to look and compare the appropriate columns. I can get it to work if I tell it to only look at one column. For example I can get it to work if all I look at were column <code>J</code> but as you can see in the pictures, Column <code>J</code> can have different variables in the other columns that would cause it to be colored differently. I was hoping someone here might know an easier way of doing this as I've been struggling with this for a couple days and seem to be getting no where fast.</p>

<p>Here is the code I have found online that can change a row based on one variable. With this code, it sees the RRR in column <code>J</code> and highlights all rows that have RRR even though they match in the other columns.</p>

<pre><code>Sub ChangeColor()
lRow = Range(""F"" &amp; Rows.Count).End(xlUp).Row
Set MR = Range(""F2:K"" &amp; lRow)
For Each cell In MR
If cell.Value Like ""*RRR*"" Then cell.EntireRow.Interior.ColorIndex = 20


    Next
End Sub
</code></pre>

<p>(<a href=""https://i.imgur.com/Nte31Bn.jpg"" rel=""nofollow noreferrer"">http://i.imgur.com/Nte31Bn.jpg</a>)
<img src=""https://i.imgur.com/Nte31Bn.jpg"" alt=""Screentshot""></p>

<p>EDIT!
So I have been able to piece together a working code based on some feed back and ideas here. This isn't the prettiest but user Byron has an amazingly shorter and quicker code that I might tinker with to get what I need.</p>

<pre><code>Sub Highlight_Duplicate_Entry()

Range(""AA2"").Select
ActiveCell.FormulaR1C1 = _
    ""=CONCATENATE(RC[-13],RC[-12],RC[-11],RC[-10],RC[-9],RC[-8])""
Range(""AA2"").Select
Selection.AutoFill Destination:=Range(""AA2:AA279""), Type:=xlFillDefault
Range(""AA2:AA400"").Select


Dim cel As Variant
Dim myrng As Range
Dim clr As Long
Set myrng = Range(""AA2:AA"" &amp; Range(""AA65536"").End(xlUp).Row)
myrng.Interior.ColorIndex = xlNone
clr = 36
For Each cel In myrng
    If Application.WorksheetFunction.CountIf(myrng, cel) &gt; 1 Then
        If WorksheetFunction.CountIf(Range(""AA2:AA"" &amp; cel.Row), cel) = 1 Then
            cel.EntireRow.Interior.ColorIndex = clr
            clr = clr + 1
        Else
            cel.EntireRow.Interior.ColorIndex =      myrng.Cells(WorksheetFunction.Match(cel.Value, myrng, False),        1).Interior.ColorIndex
        End If
    End If
Next

lRow = Range(""AA"" &amp; Rows.Count).End(xlUp).Row
 Set MR = Range(""AA2:AA"" &amp; lRow)
 For Each cell In MR
 If cell.Value Like ""*SMLS*"" Then cell.EntireRow.Interior.ColorIndex = 20


Next
    Columns(""AA:AA"").Select
Selection.ClearContents
Range(""K2"").Select

 End Sub
</code></pre>
","<p>Detecting ranges of data that are the same is fairly easy to do.  The standard way is to use the method of @xQbert which is to concatenate values together.  In VBA this is easy because there is a <code>Join</code> Function which will take an array and turn it into a string.  This is harder (or really more tedious) in Excel formulas because <code>CONCATENATE</code> requires every item separately.</p>

<p>Using <code>Join</code> you can create an ""ID"" for the row which is just all of the cells joined together.  If you combine this with a <code>Dictionary</code>, you can store the desired row colors in there and then apply that color to the row.</p>

<p>The only hard part here is deciding which colors you want to use.  I am currently just making random numbers which generally makes something that is usable.  You could extend this to use a list of colors if you know how many total colors that are needed.</p>

<p><strong>Code</strong> requires that you add a reference (<code>Tools-&gt;References</code>) to the <code>Microsoft Scripting Runtime</code> in order for the <code>Dictionary</code> to work.</p>

<pre><code>Sub ColorForUnique()

    'must add a reference to Microsoft Scripting Runtime
    Dim dict As New Scripting.Dictionary

    'build range from block of data
    'only check columns F:K for matches
    Dim rng_match As Range
    Set rng_match = Intersect( _
        Range(""B2:M8""), _
        Range(""F:K""))

    Dim rng_row As Range
    For Each rng_row In rng_match.Rows

        Dim id As String
        id = Join(Application.Transpose(Application.Transpose(rng_row.Value)), """")

        If Not dict.Exists(id) Then
            dict.Add id, RGB(Application.RandBetween(0, 255), Application.RandBetween(0, 255), Application.RandBetween(0, 255))
        End If

        rng_row.EntireRow.Interior.Color = dict(id)
    Next rng_row
End Sub
</code></pre>

<p><strong>Limits/notes on code</strong></p>

<ul>
<li>I am using the double <code>Transpose</code> to force the <code>.Value</code> to be a 1D array of values.  This and the use of <code>.Rows</code> for the loop means this only works for a contiguous block of data.  You could build a different loop if all your columns are not together.</li>
</ul>

<p><strong>Picture of results</strong> for some arbitrary data shows the desired coloring.  I use your columns so that you should be able to just run this code.</p>

<p><em>Before</em></p>

<p><img src=""https://i.stack.imgur.com/YpdBL.png"" alt=""before""></p>

<p><em>After</em></p>

<p><img src=""https://i.stack.imgur.com/RDlnG.png"" alt=""after""></p>

<p><strong>Edit to allow color selection</strong>: this code can be easily extended to allow for color selection instead of random coloring.  The <code>Dictionary</code> provides a nice built in counter for how many IDs are in play using <code>Dictionary.Count</code>.  You can use that as an index for choosing a color.  You could also just use the integer as the color to use although those colors are not that ideal.</p>

<p>Modify the color adding step to use a function instead of just random numbers:</p>

<pre><code>If Not dict.Exists(id) Then
    dict.Add id, GetColor(dict.Count + 1)
End If
</code></pre>

<p>And then define the <code>GetColor</code> Function to provide whatever colors are desired.  You could also fill this with <code>ColorIndex</code> values if you prefer those.  Change color using <code>Interior.ColorIndex</code> later if you do that.  Here are two options for that Function.  One does random colors, the other returns colors from the ColorBrewer pallette.</p>

<pre><code>'random colors always
Function GetColor(index As Integer) As Long

    GetColor = RGB(Application.RandBetween(0, 255), _
        Application.RandBetween(0, 255), Application.RandBetween(0, 255))

End Function

'first 10 colors from the ColorBrewer palette
Function GetColor(index As Integer) As Long

    Dim colors(1 To 10) As Long

    colors(6) = RGB(166, 206, 227)
    colors(1) = RGB(31, 120, 180)
    colors(7) = RGB(178, 223, 138)
    colors(3) = RGB(51, 160, 44)
    colors(8) = RGB(251, 154, 153)
    colors(2) = RGB(227, 26, 28)
    colors(9) = RGB(253, 191, 111)
    colors(4) = RGB(255, 127, 0)
    colors(10) = RGB(202, 178, 214)
    colors(5) = RGB(106, 61, 154)

    'protect against bad index
    If index &gt; UBound(colors) Or index &lt; LBound(colors) Then
        GetColor = RGB(255, 255, 255)
    Else
        GetColor = colors(index)
    End If

End Function
</code></pre>
"
"<p>I'm trying to compare files between multiple server's on our ERP program.  Each server seems to have different files on some and not the others.  I've got all my information in an excel sheet as to what server has what on it (including date, file name/type, and size of file), but I'd like to have the rows organized by their file name.</p>

<p>The way I have this setup is I have a header field for each server and each server has 3 columns.  I want each row to have that same file name for each server group.  So say cell A3, D3, and J3 = 12345.txt and cell G3 is 123.txt.  I want cell's A3, D3, G3, and J3 to all have the same name for that row, if one of them doesn't, insert a row and push that section down.  The original space can stay blank to show me that that server is missing said file.</p>

<p>A3 is my master column, but some server's have files that it doesn't, so even A3 doesn't have the same file as D, G, and J, I want A1-3 pushed down a row then.</p>

<p>I want everything in alphanumeric order, which is why even though columns A-C are the ""master"", I want a good visual representation of what it has and doesn't have in comparison to the other server's.</p>

<p>Is this possible with Excel?  (I'm running office 365)</p>

<p>Picture from comments:</p>

<p><img src=""https://i.stack.imgur.com/wYGmF.png"" alt=""data set""></p>
","<p>Here is a quick summary of the Pivot Table idea.  I think it works well for viewing which files are/are not present on given servers.  It also makes it possible to filter/sort/count and do all variety of things which are not possible when you start adding a bunch of blank rows.</p>

<p>Steps to do this:</p>

<ul>
<li>Create a set of random file names (with half shared between each list).  This step is not needed since you have the data.</li>
<li>Join the two lists and add the server name to each list.  There is now one large table.  I am just doing filename, you can do this with all your fields.</li>
<li>Create a Pivot Table out of the data.  On the rows you add the filename, server name on the column, and a <code>COUNT</code> in the values.</li>
<li>(Optional) If you really need the filename repeated under the servers, you can add some formulas to the side to display them.</li>
</ul>

<p><strong>Picture of data and results</strong></p>

<p><img src=""https://i.stack.imgur.com/0YA97.png"" alt=""data and results""></p>

<p><strong>Formulas for the last table</strong></p>

<p>Header (copied to the right) in <code>M4</code></p>

<pre><code>=I4
</code></pre>

<p>Data (copied down for both columns) in <code>M5</code></p>

<pre><code>=IF(I5&lt;&gt;"""", $H5,"""")
</code></pre>
"
"<p>I'm just about finished writing this Sub for Excel. I'm basically asking my end user for a total (for example, <code>$3000</code>) find the total amount spent by each customer on the list and report those whose total is more than <code>$3000</code> (the amount provided by the user) on a new worksheet that I created called <code>Report</code>.</p>

<p>I have this code written so far, which also validates the value entered by the user:                                                    </p>

<pre><code>Sub Userinput()

    Dim myValue As Variant
    myValue = InputBox(""Give me some input"")
    Range(""E1"").Value = myValue
    If (Len(myValue) &lt; 0 Or Not IsNumeric(myValue)) Then
    MsgBox ""Input not valid, code aborted."", vbCritical
    Exit Sub
    End If
End Sub
</code></pre>

<p>Any suggestions on how I can use the inputted value to search through the customer data base and find more than what was inputted and place that in a new worksheet?</p>

<p>EDIT:
Data sample:</p>

<pre><code>Customer orders         

Order Date  Customer ID Amount purchased    
02-Jan-12   190         $580    
02-Jan-12   144         $570    
03-Jan-12   120         $1,911  
03-Jan-12   192         $593    
03-Jan-12   145         $332    
</code></pre>
","<p>Here is another approach which takes advantage of straight forward Excel features to <code>Copy</code> the customer IDs column, <code>RemoveDuplicates</code>, <code>SUMIF</code> based on customer, and <code>Delete</code> those rows over the minimum.</p>

<pre><code>Sub CopyFilterAndCountIf()

    Dim dbl_min As Double
    dbl_min = InputBox(""enter minimum search"")

    Dim sht_data As Worksheet
    Dim sht_out As Worksheet

    Set sht_data = ActiveSheet
    Set sht_out = Worksheets.Add()

    sht_data.Range(""B:B"").Copy sht_out.Range(""A:A"")
    sht_out.Range(""A:A"").RemoveDuplicates 1, xlYes

    Dim i As Integer
    For i = sht_out.UsedRange.Rows.Count To 2 Step -1
        If WorksheetFunction.SumIf( _
            sht_data.Range(""B:B""), sht_out.Cells(i, 1), sht_data.Range(""C:C"")) &lt; dbl_min Then
            sht_out.Cells(i, 1).EntireRow.Delete
        End If
    Next
End Sub
</code></pre>

<p>I don't do error checking on the input, but you can add that in.  I am also taking advantage of Excel's willingness to process entire columns instead of dealing with finding ranges. Definitely makes it easier to understand the code.</p>

<p>It should also be mentioned that you can accomplish all of these same features by using a Pivot Table with a filter on the <code>Sum</code> and no VBA.</p>
"
"<p>I'm using Excel 2013 VBA.  I have the following data</p>

<pre><code>       A                    B
1   John  Doe       John  Doe
2   Mary  Smith     Mary  Smith
3   Alice  Jones    Alice  Jones
4   Bob C Carter    Bob  Carter
5   David L Macy    David L Macy
6   June  Weaver    June  Weaver
</code></pre>

<p>I'm searching for exact matches of the entries in Column B with the range of entries in Column A using the partial code:</p>

<pre><code>Dim lastAllScriptsRow As Integer                            
Dim compareOutlookRow As Integer                            
lastAllScriptsRow = 6                           
compareOutlookRow = 1                           
Range(Cells(1, 1), Cells(lastAllScriptsRow, 1)).Select                          
… code …                            
If IsError(Application.WorksheetFunction.Match(Cells(compareOutlookRow, 2), Selection, 0)) Then                         
</code></pre>

<p>The search for the first three entries in Column B are successful.  When the search for the fourth entry, Bob  Carter, is conducted (note the entry of ""Bob C Carter"" in Column A preventing an exact match), I get a ""Run-time error '1004':  Unable to get the Match property of the WorksheetFunction class.""  I get the same error when I use Application.WorksheetFunction.IsNA instead of IsError and when I use the positive approach using IsNumeric instead of IsError.  Any help is greatly appreciated.</p>
","<p>Use <code>Application.Match</code> instead of <code>Application.WorksheetFunction.Match</code>.  The former will <em>return</em> an error that you can trap with <code>IsError</code> while the latter throws a run time error which is messier to deal with.</p>

<p>Note that Intellisense does not know that <code>Application.Match</code> exists.  It does though.</p>

<p><a href=""http://dailydoseofexcel.com/archives/2004/09/24/the-worksheetfunction-method/"" rel=""nofollow"">This is a nice reference on the difference between the two.</a></p>
"
"<p>I have reviewed many of the various examples of how to separate out tabs in workbooks into separate workbooks and have found one which works really well for what I need it:</p>

<ul>
<li><p>creates a date/time stamped folder off the current folder from which the main file is stored;</p></li>
<li><p>it copies all visible sheets into separate worksheets naming each file the same as the tab name;</p></li>
</ul>

<p>The issue for me is the size of the each new file is running at circa 8-10Mb as I suspect the underlying pivots and data files are carried over.  What I need is to have separate files with just the values and formatting (plus column widths ideally).</p>

<p>I have looked at the code and it seems to use sh.copy but I cannot see where it decided to paste - hence cannot see how to close this down with paste value etc .  It might be the syntax of sh.copy is just to follow this with the new destwb and this implies paste - but my knowledge of VBA is not up to altering this.  The current code which I am looking to amend is:</p>

<pre><code>Sub Copy_Every_Sheet_To_New_Workbook()
'Working in 97-2013
    Dim FileExtStr As String
    Dim FileFormatNum As Long
    Dim Sourcewb As Workbook
    Dim Destwb As Workbook
    Dim sh As Worksheet
    Dim DateString As String
    Dim FolderName As String

    With Application
        .ScreenUpdating = False
        .EnableEvents = False
        .Calculation = xlCalculationManual
    End With

    'Copy every sheet from the workbook with this macro
    Set Sourcewb = ThisWorkbook

    'Create new folder to save the new files in
    DateString = Format(Now, ""yyyy-mm-dd hh-mm-ss"")
    FolderName = Sourcewb.Path &amp; ""\"" &amp; Sourcewb.Name &amp; "" "" &amp; DateString
    MkDir FolderName

    'Copy every visible sheet to a new workbook
    For Each sh In Sourcewb.Worksheets

        'If the sheet is visible then copy it to a new workbook
        If sh.Visible = -1 Then
            sh.Copy

            'Set Destwb to the new workbook
            Set Destwb = ActiveWorkbook

            'Determine the Excel version and file extension/format
            With Destwb
                If Val(Application.Version) &lt; 12 Then
                    'You use Excel 97-2003
                    FileExtStr = "".xls"": FileFormatNum = -4143
                Else
                    'You use Excel 2007-2013
                    If Sourcewb.Name = .Name Then
                        MsgBox ""Your answer is NO in the security dialog""
                        GoTo GoToNextSheet
                    Else
                        Select Case Sourcewb.FileFormat
                        Case 51: FileExtStr = "".xlsx"": FileFormatNum = 51
                        Case 52:
                            If .HasVBProject Then
                                FileExtStr = "".xlsm"": FileFormatNum = 52
                            Else
                                FileExtStr = "".xlsx"": FileFormatNum = 51
                            End If
                        Case 56: FileExtStr = "".xls"": FileFormatNum = 56
                        Case Else: FileExtStr = "".xlsb"": FileFormatNum = 50
                        End Select
                    End If
                End If
            End With


            'Save the new workbook and close it
            With Destwb
                .SaveAs FolderName _
                      &amp; ""\"" &amp; Destwb.Sheets(1).Name &amp; FileExtStr, _
                        FileFormat:=FileFormatNum
                .Close False
            End With

        End If
GoToNextSheet:
    Next sh

    MsgBox ""You can find the files in "" &amp; FolderName

    With Application
        .ScreenUpdating = True
        .EnableEvents = True
        .Calculation = xlCalculationAutomatic
    End With
End Sub
</code></pre>

<p>Any help really gratefully received as I have been at this now for three days...</p>
","<p><code>sh.Copy</code> will create a new <code>Workbook</code> out of the <code>ActiveSheet</code> by default.  <a href=""https://msdn.microsoft.com/en-us/library/office/ff837784.aspx"" rel=""nofollow"">Take a look at the docs to see that</a>.  This is the same as right clicking on the worksheet tab and selecting <code>Move or Copy...</code> and then copying to a new workbook.  </p>

<p>If you want to only keep values and source formatting, you can do this by manually creating a new <code>Workbook</code>, copying the cells, and using <code>PasteSpecial</code> to only get the values and formats in the new workbook.</p>

<p>This is a quick drop in change for your code.  Replace the lines:</p>

<pre><code>sh.Copy

'Set Destwb to the new workbook
Set Destwb = ActiveWorkbook
</code></pre>

<p>With something like this:</p>

<pre><code>Dim Destwb As Workbook
Set Destwb = Workbooks.Add

Dim sh_copy As Worksheet
Set sh_copy = Destwb.Worksheets(1)

sh.Cells.Copy

sh_copy.Cells.PasteSpecial xlPasteValuesAndNumberFormats
sh_copy.Cells.PasteSpecial xlPasteFormats

sh_copy.Name = sh.Name

Application.CutCopyMode = False
</code></pre>

<p>The idea is that you:</p>

<ul>
<li>manually create the new <code>Workbook</code></li>
<li>grab a reference to the first <code>Worksheet</code> in the new book.  Note that this workbook may have multiple sheets depending on your default settings.  If so, either change the default number of sheets, or add some code to delete the extra ones.</li>
<li>copy the cells from the original sheet and use <code>PasteSpecial</code> to get the values and numbers formats and then another call to get the column width info</li>
<li>set the name to the original name since you will get a default name at first</li>
<li>remove the copy/paste info</li>
</ul>
"
"<p>I am struggling to try writing an excel 2013 vba code statement to Convert a table cell type (2,4) into a cell type ""D2"", I tried the following statement:</p>

<pre><code>dim celdactiva as range

with mcard  **(this is an excel objectlist that contains cell(2,4))**

set celdactiva=.Cells(2, 4).Address(RowAbsolute:=False, ColumnAbsolute:=False)
to returns ""D2"". **But the part (RowAbsolute:=False , Pups up as error)**

end with
</code></pre>
","<p>The error is really on the <code>Set</code> part.  <code>Address</code> returns a <code>String</code>.  If you want to store this <code>String</code> in <code>celdactiva</code> then you need to change the declaration type from <code>Range</code> to <code>String</code> and remove the <code>Set</code> down below.</p>

<pre><code>Dim celdactiva as String

With mcard
   celdactiva=.Cells(2, 4).Address(RowAbsolute:=False, ColumnAbsolute:=False)
End With
</code></pre>
"
"<p>I'm Using Microsoft Excel 2013.</p>

<p>I have a lot of data that I need to separate in Excel that is in a single cell. The ""Text to Columns"" feature works great except for one snag.</p>

<p>In a single cell, I have <code>First Name</code>, <code>Last Name</code> &amp; <code>Email address</code>. The last name and email addresses do not have a space between them, but the color of the names are different than the email.</p>

<p>Example (all caps represent colored names RGB (1, 91, 167), lowercase is the email which is just standard black text):</p>

<pre><code>JOHN DOEjohndoe@acmerockets.com
</code></pre>

<p>So I need to put a space after DOE so that it reads:</p>

<pre><code>JOHN DOE johndoe@acmerockets.com
</code></pre>

<p>I have about 20k rows to go through so any tips would be appreciated. I just need to get a space or something in between that last name and email so I can use the ""Text to Columns"" feature and split those up.</p>
","<p>You can knock this out pretty quickly taking advantage of a how <code>Font</code> returns the <code>Color</code> for a set of characters that do not have the same color: it returns <code>Null</code>!  Knowing this, you can iterate through the characters 2 at a time and find the first spot where it throws <code>Null</code>.  You now know that the color shift is there and can spit out the pieces using <code>Mid</code>.</p>

<p><strong>Code</strong> makes use of this behavior and <code>IsNull</code> to iterate through a fixed <code>Range</code>.  Define the <code>Range</code> however you want to get the cells.  By default it spits them out in the neighboring two columns with <code>Offset</code>.</p>

<pre><code>Sub FindChangeInColor()

    Dim rng_cell As Range
    Dim i As Integer

    For Each rng_cell In Range(""B2:B4"")
        For i = 1 To Len(rng_cell.Text) - 1
            If IsNull(rng_cell.Characters(i, 2).Font.Color) Then
                rng_cell.Offset(0, 1) = Mid(rng_cell, 1, i)
                rng_cell.Offset(0, 2) = Mid(rng_cell, i + 1)
            End If
        Next
    Next
End Sub
</code></pre>

<p><strong>Picture of ranges and results</strong></p>

<p><img src=""https://i.stack.imgur.com/UAygx.png"" alt=""ranges and results""></p>

<p>The nice thing about this approach is that the actual colors involved don't matter.  You also don't have to manually search for a switch, although that would have been the next step.</p>

<p>Also your neighboring cells will be blank if no color change was found, so it's decently robust against bad inputs.</p>

<p><strong>Edit</strong> adds ability to change original string if you want that instead:</p>

<pre><code>Sub FindChangeInColorAndAddChar()

    Dim rng_cell As Range
    Dim i As Integer

    For Each rng_cell In Range(""B2:B4"")
        For i = 1 To Len(rng_cell.Text) - 1
            If IsNull(rng_cell.Characters(i, 2).Font.Color) Then
                rng_cell = Mid(rng_cell, 1, i) &amp; ""|"" &amp; Mid(rng_cell, i + 1)
            End If
        Next
    Next
End Sub
</code></pre>

<p><strong>Picture of results again</strong> use same input as above.</p>

<p><img src=""https://i.stack.imgur.com/Ku9Uu.png"" alt=""edit results""></p>
"
"<p>I use filters a lot.</p>

<p>Filter > contains option</p>

<p>But it is slow because everytime i need to do several clicks.</p>

<p>So, my question is, is there a shortcut to open filter, drop down, contains window?</p>
","<p>Assuming you start with filtered data already, you need to have the header cell selected.  From there: <kbd>ALT</kbd>+<kbd>DOWN</kbd>, <kbd>F</kbd>, <kbd>A</kbd>.  </p>

<p>If the filter is not already created then throw in a <kbd>CTRL</kbd>+<kbd>SHIFT</kbd>+<kbd>L</kbd> at at the start.  </p>

<p>If you are not in the header row, some combination of <kbd>CTRL</kbd>+<kbd>ARROW</kbd> keys can get you there.  Ideally you have a block of data and can use <kbd>CTRL</kbd>+<kbd>UP</kbd> if you start in the correct column.</p>
"
"<p>I have an Excel AddIn (<code>.xlam</code> file) and within it is a few macros and my attemt at a custom ribbon tab. The Macros work as expected but now I am trying to make a ribbon to call them to be more user friendly. I have the ribbon and a button which works, and a dropdown menu which I cannot figure out. I am unsure of what the Macro Parameters need to be. Below is what I have thus far.</p>

<p>The XML for the ribbon (Works!):</p>

<pre><code>&lt;customUI xmlns=""http://schemas.microsoft.com/office/2006/01/customui""&gt;
  &lt;ribbon&gt;
    &lt;tabs&gt;
      &lt;tab id=""My_Tab"" label=""My Tab""&gt;
        &lt;group id=""NC_Material"" label=""Button1""&gt;
          &lt;button id=""Button1"" label=""1st button"" size=""large"" onAction=""Module1.Button1Click"" imageMso=""ResultsPaneStartFindAndReplace"" /&gt;
          &lt;dropDown id=""DropDown"" onAction=""Module1.DropDownAction""&gt;
            &lt;item id=""ddmItem1"" label=""Item1"" /&gt;
            &lt;item id=""ddmItem2"" label=""Item2"" /&gt;
          &lt;/dropDown&gt;
        &lt;/group &gt;
      &lt;/tab&gt;
    &lt;/tabs&gt;
  &lt;/ribbon&gt;
&lt;/customUI&gt;
</code></pre>

<p>The VBA in Module1 of the <code>.xlam</code> files VBA Project:</p>

<pre><code>'this one works
Public Sub Button1Click(ByVal control As IRibbonControl)
    call Button1Macro
End Sub

'this one does not work
Public Sub DropDownAction(ByVal control As IRibbonControl)
    call DropDownMacro
End Sub
</code></pre>

<p>I am getting errors when I change the value of the drop down menu in my ribbon. I do not know what parameters I need for the onAction macro of the drop down menu. I have been unable to find a good reference or example.</p>

<p>I am unable to do this using Visual Studio and cannot download any utilities or other programs.</p>

<p>Thanks in advance.</p>
","<p>If you want to save your sanity, you can use <a href=""http://www.andypope.info/vba/ribboneditor.htm"" rel=""nofollow"">Andy Pope's Ribbon Editor</a> which will generate the callbacks automatically (at least the text for them).  Then you just copy them into the VBA module.  (I am not affiliated with that add-in, I just use it and recommend it highly)</p>

<p>Using that tool, I get the following for <code>onAction</code> within a <code>Dropdown</code></p>

<pre><code>Public Sub DropDownAction(control as IRibbonControl, id as String, index as Integer)
'
' Code for onAction callback. Ribbon control dropDown
'

End Sub
</code></pre>

<p>Working code is also shown <a href=""http://stackoverflow.com/questions/4562550/getting-the-selected-item-from-the-dropdown-in-a-ribbon-in-word-2007-using-macro"">in this answer</a> which was near the top of my search.</p>
"
"<p>I am attempting to sum multiple tables' subtotals together to create a grand total. I've found a method to do so by naming the table and and then using =sum(tableName[columnName]). Therefore I could just add several of them together to achieve my result.</p>

<p>However, when I look at the pre-loaded templates, there is one called Family Monthly Budget where they have a total table that sums multiple tables showing only a single entry =totalExpenseProjected. When I click that cell, it highlights as a formula, but gives no indication as to how its calculated and I cannot recreate it using my own spreadsheet.</p>

<p><img src=""https://i.stack.imgur.com/yN8mU.png"" alt=""enter image description here""></p>

<p>Can anyone offer insight on how to use the microsoft method?</p>
","<p>If you go into the <code>Formulas-&gt;Name Manager</code> you will see this named range is really a mess of a <code>SUM</code> formula:</p>

<pre><code>=SUM(Actual1,Actual2,Actual3,Actual4,Actual5,Actual6,Actual7,Actual8,Actual9,Actual10,Actual11,Actual12,Actual13)
</code></pre>

<p>That <code>SUM</code> is using other named ranges.  A sample of the formula in <code>Actual1</code> is:</p>

<pre><code>=Housing[[#Totals],[Actual]]
</code></pre>

<p>It then repeats that for the other 12 <code>Actual</code> references.</p>

<p><img src=""https://i.stack.imgur.com/DOmBM.png"" alt=""enter image description here""></p>
"
"<p>I have a two sets of data that I wish to plot on the same chart in Excel 2013.</p>

<p>The first data set is time series data and has about 100 daily observations. I would like to plot this as a line chart.</p>

<p>The second data set only has 6 data points &amp; I wish to plot these as a column. Is this possible when the number of observation in each data set are different?</p>

<p>I know it can be done if you have the same number of observations in both data sets.</p>
","<p>You will make things easier if you give them the same categories and use blanks to skip missing entries.  Excel is not very smart about matching categories between different sets of data unless you are using scatter plots.</p>

<p><img src=""https://i.stack.imgur.com/9vISW.png"" alt=""enter image description here""></p>
"
"<p>I'm trying to use STRCONV vbPropercase to correct input in a macro that I use to copy data from one ""input"" worksheet to another.  I have been able to assign specific variables to cells and then apply the STRCONV Propercase to the variable, but no change is made to the text in the cell when I do this.  The code saves the file as a combination of the variable names, so I know that it makes the corrections there.  How do I make the change appear in the cell and not just to the variable in the code? </p>

<p>Here is an excerpt from the code I'm using:</p>

<pre><code>Dim Property As String    
Dim Accnt As String

Property = Worksheets(""Audit"").Range(""L6"").Value
Property = StrConv(Property, vbProperCase)

Accnt = Worksheets(""Audit"").Range(""L7"").Value

ActiveWorkbook.saveas ""D:\(username)\Documents\"" &amp; Accnt &amp; "" - "" &amp; Property &amp; "".xlsx"", FileFormat:= _
    xlOpenXMLWorkbook, CreateBackup:=False
</code></pre>
","<p>Just flip the assignment around:</p>

<pre><code>Worksheets(""Audit"").Range(""L6"").Value = Property
</code></pre>
"
"<p>If I say that:</p>

<p>A4 = A3, A3 = A2, and A2=A1</p>

<p>All their values will be the same.  Great... however, what if I'm at A4 and want the cell that is one cell right of A1?  I can use OFFSET, normally, but in this case the offset would be relative to A3 and not A1.</p>

<p>Example image: <a href=""https://imgur.com/uPIQPpj"" rel=""nofollow noreferrer"">http://imgur.com/uPIQPpj</a></p>

<p>Thank you!</p>
","<p>There is no good way to do this.  One approach with your simple formulas though is to use <code>FORMULATEXT</code> <code>INDIRECT</code> and <code>OFFSET</code>.  If you know something about the formula, you can pull out the cell reference and use <code>INDIRECT</code> to make it a real reference.  From there, <code>OFFSET</code> will work as intended.</p>

<p><em>I would not recommend actually using this technique for any serious purpose.  If you are doing this, you probably need to consider the design of the underlying spreadsheet.  Consider using a named ranged somewhere.</em></p>

<p><strong>Formula</strong> is in cell <code>E5</code> and is trying to pull a reference from the formula in cell <code>D4</code>.  <code>D4</code> is just looking at <code>C3</code>.  So ultimately, <code>OFFSET</code> will pull the value from <code>C4</code> since it is one row below <code>C3</code>.  I am using <code>RIGHT</code> to get the non-equal sign part of the formula; this is where knowledge of the formula is required.</p>

<pre><code>E5=OFFSET(INDIRECT(RIGHT(FORMULATEXT(D4),2)), 1,0)
D4=C3
</code></pre>

<p>You could keep building these if you want to get your ""deep reference"" but it would require you to know how far to go.  It would also be a mess and use <code>INDIRECT</code> which is a volatile function.</p>

<p><strong>Picture of ranges and results</strong></p>

<p><img src=""https://i.stack.imgur.com/jLEXp.png"" alt=""ranges and results""></p>
"
"<p>Excel 2013. I am using 3 combo boxes to change filters on the pivot table. 
My first combo box has ""Project1"", ""Project2"" &amp; All. 
My second combo box has ""Customer1"", ""Customer2"" &amp; All. 
My third combo box has ""Country1"", ""Country2"" &amp; All.</p>

<p>I am using 9 pivot tables, all of them have filters as [Project], [Customer], [Country]. </p>

<p>My intention is to change first combo box to Project1 &amp; all the pivot tables filter should change as Project1.I am successfully able to do that. </p>

<p>However when I select the first combo box as ""All"". First Combo box cell link to Y1. I get VBA Run time error 1004: Application-defined or object-defined error.</p>

<pre><code>Sub ProjectName()

ActiveSheet.PivotTables(""PVT1"").PivotFields(""Project Name"").ClearAllFilters
ActiveSheet.PivotTables(""PVT2"").PivotFields(""Project Name"").ClearAllFilters
ActiveSheet.PivotTables(""PVT3"").PivotFields(""Project Name"").ClearAllFilters

    ActiveSheet.PivotTables(""PVT1"").PivotFields(""Project Name"").CurrentPage = Range(""Y1"").Text
    ActiveSheet.PivotTables(""PVT2"").PivotFields(""Project Name"").CurrentPage = Range(""Y1"").Text
    ActiveSheet.PivotTables(""PVT3"").PivotFields(""Project Name"").CurrentPage = Range(""Y1"").Text 
</code></pre>
","<p>Since the first three lines of code go without issue, I will assume that the Pivot Table <code>PVT1</code> and the Field <code>Project Name</code> all exist.  This places the error somewhere after that.</p>

<p>For the call to <code>.CurrentPage</code> you will get a 1004 error for the following reasons:</p>

<ul>
<li>Using this to try and filter any field that is not set as a <code>Report Filter</code>.  You cannot use the <code>CurrentPage</code> to filter any rows or columns</li>
<li>Setting a value which does not exist in the list of possible values</li>
</ul>

<p>On the second point, this is where the call to <code>Range</code> might be relevant.</p>

<ul>
<li>Verify that the value there exists in the list of possible ones.</li>
<li>Also be aware you are using <code>.Text</code> which will use the <em>display</em> value of the cell and not its underlying <code>.Value</code></li>
</ul>

<p>To resolve these issues, there are a couple of options:</p>

<ul>
<li>For the case where you want to filter data that is on the row or column (and not in the filters section) you can go through <code>PivotItems</code> and set <code>Visible = True/False</code></li>
<li>You can also set a label filter from VBA if you want that instead of the manual filter</li>
<li>If you want to check for a value existing in the <code>CurrentPage</code>, you can iterate the <code>PivotItems</code> for that <code>PivotField</code> and check that one matches.  The code for that is very similar to the <code>For Each</code> loop with the check on value, just don't set <code>Visible</code>.</li>
</ul>

<p><strong>Code</strong> for setting a filter on a row or column</p>

<pre><code>Sub FilterPivotField()

    Dim pt As PivotTable
    Set pt = ActiveSheet.PivotTables(""PVT1"")

    Dim pf As PivotField
    Set pf = pt.PivotFields(""C"")

    pf.ClearAllFilters

    'slow iterates all items and sets Visible (manual filter)
    Dim pi As PivotItem
    For Each pi In pf.PivotItems
        pi.Visible = (pi.Name = Range(""J2""))
    Next

    'fast way sets a label filter
    pf.PivotFilters.Add2 Type:=xlCaptionEquals, Value1:=Range(""J2"")

End Sub
</code></pre>

<p><strong>Picture of ranges</strong></p>

<p><img src=""https://i.stack.imgur.com/U2iYX.png"" alt=""enter image description here""></p>
"
"<p>This is the first time I have ever really worked with VBA stuff (the code I found is VBA right? :P ) so please forgive my inability to just...understand it by looking at it. :) I have experience with macros and know /some/ of that code is compatible, but I don't know how to write it...only know how to record it then use the bits I know work.</p>

<p>The Puzzle: I have a column which will adjust the weighted values of the row it is in (either makes the values slightly more or less, or leaves them alone), but the weights are entirely subjective so only need to be changed manually usually.</p>

<p>The issue is when needing to change a lot of them at once because it is tons of clicking each cell and changing the value one at a time by ""guessing"" which weights we need by entering numbers until it ""looks good"" (like I said subjective), so I found this:</p>

<p><a href=""http://www.mrexcel.com/forum/excel-questions/51933-changing-cell-value-clicking-cell.html"" rel=""nofollow"">http://www.mrexcel.com/forum/excel-questions/51933-changing-cell-value-clicking-cell.html</a></p>

<p>Made some tiny changes to the version at the bottom of the page and have this right now:</p>

<pre><code>Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)
  Application.EnableEvents = False
  If Target.Cells.Count = 1 Then
    If Not Intersect(Target, Range(""Q3:Q500"")) Is Nothing Then
      Select Case Target.Value
      Case """"
        Target.Value = ""+""
      Case ""+""
        Target.Value = ""-""
      Case ""-""
        Target.Value = """"
      Case Else
        Target.Value = ""+""
      End Select
        ActiveCell.Offset(0, 2).Range(""A1"").Select
    End If
  End If
  Application.EnableEvents = True
End Sub
</code></pre>

<p>Almost perfect, except the range of numbers will be slightly larger than """", +, or -. In fact the range will likely be 0.5 to 1.5 (50% to 150%).</p>

<p>It would be best if they could go up or down. I guess I could just create a huge list of replacements so instead of """", +, or - it would just be the numbers (Case 0.5 > Case 0.6 > Case 0.7 >>> Case 1 > Case 1.1 >>> Etc.) but obviously that would probably be a huge nightmare and /less/ efficient when having to click the cell 10 times to cycle through the numbers.</p>

<p>So there are two things I need to make it work perfectly:</p>

<ol>
<li>For it to change the NEXT cell over, either to the left or right by one. </li>
<li>Instead of simple replacements, is it possible for it to do some math?</li>
</ol>

<p>The idea is that clicking in column P to the left of Q will decrease the weight (by say 0.1), and by clicking in column R to the right of Q it will increase the weight slightly. And if they reach the bottom/top it will go to the other end (0.5 decreased will take the value up to 1.5, vice versa).</p>

<p>I tried tinkering a little with what I know about macros and tried adding the ""ActiveCell.Offset(0, 1).Range(""A1"").Select"" bit here and there, which will be nice for the end of the code so I can choose where the cursor is left afterwards...but putting it anywhere earlier...I see the active cell move to P or R before changes are made, but it still changes the original column Q.</p>

<p>I recognize I will need two copies of the code, one for Column R (decreasing) and one for Column P (increasing) but so long as I have at least one side I should be able to make the changes to mirror it. Also I know Data Validation might seem like a simple solution, but having an obscene amount of drop down arrows covering most of the sheet will make it illegible...</p>

<p>Thank you so much to anyone spending any time on helping to solve this puzzle,
Corinne :)</p>
","<p>I think I understand your question, if this doesn't do it, please add a picture and we'll get there.</p>

<p>Changing the <code>Value</code> based on <code>Value</code> is straightforward.</p>

<p><strong>Code</strong> shows how to handle clicks (or arrow movements) into columns <code>P</code> or <code>R</code>.  Going into <code>P</code> will decrease the value (with the wraparound like you mention).  Going into <code>R</code> will go up.</p>

<pre><code>Private Sub Worksheet_SelectionChange(ByVal Target As Excel.Range)
  Application.EnableEvents = False
  If Target.Cells.Count = 1 Then
    If Not Intersect(Target, Range(""P3:P500"")) Is Nothing Then

        If Target.Offset(0, 1).Value &gt; 0.5 Then
            Target.Offset(0, 1).Value = Target.Offset(0, 1).Value - 0.1
        Else
            Target.Offset(0, 1).Value = 1.5
        End If

        Target.Offset(0, 1).Select
    End If

    If Not Intersect(Target, Range(""R3:R500"")) Is Nothing Then

        If Target.Offset(0, -1).Value &lt; 1.5 Then
            Target.Offset(0, -1).Value = Target.Offset(0, -1).Value + 0.1
        Else
            Target.Offset(0, -1).Value = 0.5
        End If

        Target.Offset(0, -1).Select
    End If


  End If
  Application.EnableEvents = True
End Sub
</code></pre>

<p>The main idea is to check the value in column <code>Q</code> and add or subtract or wrap around depending on column and value.  This code can be simplified and cleaned up, but it works which may be all you need.</p>

<p><em>I am assuming that you have a number in column <code>Q</code> and are trying to increase or decrease that?  If not, please add more detail.</em></p>

<p><strong>The nice part of this code is that it puts the selection back into column <code>Q</code>. This means that you can repeatedly hit the right or left arrow to increase or decrease, respectively</strong>.  This works because the selection changes but then is immediately put back in the center.  You can type fast and increment or decrement as needed.</p>

<p><strong>Picture</strong> shows the assumption of data in column <code>Q</code>.  I used the code a couple times to change values to what is shown.</p>

<p><img src=""https://i.stack.imgur.com/9T6BT.png"" alt=""results""></p>
"
"<p>We are developing a macro to be used by customer organizations. Is it possible to get rid of the macro security warning messages by signing the macro file with a Digital signature?</p>

<p>We already have a code signing certificate from Comodo but when I opened the signed macro file in another computer (an old mac) it still gave the warnings. Was it because we didn't do something right or because it is not possible to get rid of the warning at all.</p>
","<p>It still hinges on the security settings on the computer which is opening the code.  There is an option in there <code>Disable all macros except digitally signed macros</code> which must be selected for the signature to matter.</p>

<p><img src=""https://i.stack.imgur.com/iGWeh.png"" alt=""settings""></p>

<p>My current settings would still prompt for your add-in.</p>
"
"<p>I am trying to find a way to add status to my project automatically. For example, when cell 1 in Column A is at 50% then i would want to change cell 2 in the B column to ""In Progress"". Is this possible in Excel?</p>

<p>please let me know.
thanks</p>
","<p>Yes. A simple formula will do </p>

<pre><code>=IF(A1=0.5, ""In Progress"", """")
</code></pre>

<p>This assumes that 50% is stored as 0.5.  You can also do <code>&gt;=</code> if that makes more sense.</p>
"
"<p>I have code that adds and that if an answer is provided based on a certain criteria it adds itself to a list. As I have been troubleshooting the rest of the program I have accrued a lot of answers that have been added. If I select the cells it blinks in and out and if I try to delete manually it gets stuck in a 'loop' and in order to do anything I have to crash excel. </p>

<pre><code>Private Sub Worksheet_SelectionChange(ByVal Target As Range)
'sorts supervisor add list
Const myCol As String = ""H""
Const N As Long = 2
Dim r As Long
If Not Intersect(Target, Range(myCol &amp; "":"" &amp; myCol)) Is Nothing Then
r = Cells(Rows.Count, myCol).End(xlUp).Row
If r &lt; N Then r = N
With Sheet2.Sort
.SortFields.Clear
.SortFields.add Key:=Range(myCol &amp; N), SortOn:=xlSortOnValues, _ Order:=xlAscending, DataOption:=xlSortNormal
.SetRange Range(myCol &amp; N &amp; "":"" &amp; myCol &amp; r)
.Header = xlNo
.MatchCase = False
.Orientation = xlTopToBottom
.SortMethod = xlPinYin
.Apply
End With
For x = r To N + 1 Step -1
If Cells(x, myCol).Value = Cells(x - 1, myCol).Value Then Cells(x, _ myCol).Delete shift:=xlUp
Next 
End If
</code></pre>

<p>The error appears to occur on </p>

<pre><code>If Cells(x, myCol).Value = Cells(x - 1, myCol).Value Then Cells(x, _ myCol).Delete shift:=xlUp
</code></pre>

<p>also it has had problems deleting the duplicates.</p>
","<p>It is generally recommended to disable events inside event processing code if you are likely to trigger the event you are processing. </p>

<p><code>Delete</code> will cause the Selection to change which will cause this event to fire again. <a href=""http://stackoverflow.com/questions/13860894/ms-excel-crashes-when-vba-code-runs/13861640#13861640"">See this excellent post on the topic</a>. </p>

<p>To resolve, add <code>Application.EnableEvents = False</code> at the start and then <code>True</code> at the end.</p>

<pre><code>Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    Application.EnableEvents = False
    '...your code here
    Application.EnableEvents = True

End Sub
</code></pre>
"
"<p>I'm trying to create a PivotTable in which a double click on a value leads the user to the filtered source sheet with the rows that this value represents, rather than a new sheet with the underlying data. </p>

<p>This is how far I've gotten, but I'm having issues extracting the relevant row and column names / values, as well as the filters currently active in the pivottable.</p>

<pre><code>Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    Dim rng As Range
    Dim wks As Worksheet
    Dim pt As PivotTable

    ' Based on http://stackoverflow.com/questions/12526638/how-can-you-control-what-happens-when-you-double-click-a-pivot-table-entry-in-ex
    Set wks = Target.Worksheet
    For Each pt In wks.PivotTables()
        Set rng = Range(pt.TableRange1.Address)
        If Not Intersect(Target, rng) Is Nothing Then
            Cancel = True
        End If
    Next  

     ' Source: http://www.mrexcel.com/forum/excel-questions/778468-modify-pivottable-double-click-behavior.html
     On Error GoTo ExitNow
     With Target.PivotCell
         If .PivotCellType = xlPivotCellValue And _
             .PivotTable.PivotCache.SourceType = xlDatabase Then
                 SourceTable = .PivotTable.SourceData
                 MsgBox SourceTable
                 ' I found the sourcetable, how would I collect the row/column
                 ' names and values in order to filter this table?
         End If
     End With

ExitNow: Exit Sub
End Sub
</code></pre>

<p>In order to filter the source sheet, I need to extract the following characteristics upon a double click:</p>

<ul>
<li>The filters active in the current PivotTable (the original** 'Fieldname' and the relevant filters)</li>
<li>The original** headers and row names and values relevant to the aggregate being selected (e.g. FieldX = 2013, FieldY=""X""), that will enable me to filter the source sheet and present the underlying rows.</li>
</ul>

<p>** Note that I'm not sure if this is relevant, but I extensively stumble upon PivotTables in which the row names shown are not the same as those in the source datasheet (by manually renaming them in the PivotTable). Also, is it possible to extract the 'groupings' created in the PivotTables?</p>

<p>Using these characteristics, the VBA for locating the source data and applying the relevant filters should be relatively straightforward. In most cases, the source table is an 'Excel Table', if this is relevant.</p>

<p>Any help is greatly appreciated.</p>
","<p>The solution to this depends greatly on the filters you have in place.  The way that <code>PivotFilters</code> are defined is different from the way that AutoFilters are defined.  This means that you will need to do a translation for each type of filter that is in place.</p>

<p>AutoFilters do all of their magic in the <code>Criteria1</code> whereas the <code>PivotFilters</code> have a <code>FilterType</code> and <code>Value1</code> to make it work.  This is the translation step.</p>

<p>For simple equality, it is fairly easy and that is the code included below.  It address the issue of how to find the column header and set the filter.</p>

<pre><code>Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)

    Dim pt As PivotTable

    Dim wks As Worksheet
    Set wks = Target.Worksheet
    For Each pt In wks.PivotTables()
        If Not Intersect(Target, pt.TableRange1) Is Nothing Then
            Cancel = True
        End If
    Next

    If Cancel &lt;&gt; True Then
        Exit Sub
    End If

    Set pt = Target.PivotCell.PivotTable

    Dim rng As Range
    Set rng = Application.Range(Application.ConvertFormula(pt.SourceData, xlR1C1, xlA1))

    Dim sht_rng As Worksheet
    Set sht_rng = rng.Parent
    sht_rng.AutoFilterMode = False

    Dim pf As PivotField
    For Each pf In pt.PivotFields
        Dim pfil As PivotFilter
        For Each pfil In pf.PivotFilters
            If pfil.FilterType = xlCaptionEquals Then
                rng.AutoFilter Field:=Application.Match(pf.SourceName, rng.Rows(1), 0), Criteria1:=pfil.Value1
            End If
        Next pfil
    Next pf

    sht_rng.Activate
    rng.Cells(1, 1).Select
End Sub
</code></pre>

<p>Couple of notes:</p>

<ul>
<li>I am using <code>PivotTable.SourceData</code> to get the range of cells that are involved.  This returns a value in R1C1 notation, so I convert it to A1 notation using <code>Application.ConvertFormula</code>.  I then need to use <code>Application.Range</code> to look up this string.  (Since this code is executing within the scope of a specific <code>Worksheet</code> you need to add <code>Application</code> here so it expands the scope of the search)</li>
<li>After that it is a simple matter of iterating through all the PivotFields and their PivotFilters.</li>
<li>Inside that loop, then you need to find the column header (using <code>Application.Match</code> in the header row: <code>.Rows(1)</code>) and add the filter.  This is where the conversion steps are required.  You could do a <code>Select... Case</code> for each supported type of filter.</li>
<li>You might also want to check out <code>CurrentPage</code> if any of the fields is a filter instead of a row/column.</li>
<li>Finally, it is possible for there to be manual filters instead of the label filters which I am iterating through.  You can loop through <code>PivotItems</code> and check for <code>Visible</code> if you want those.</li>
</ul>

<p>Hopefully this code gets you started but also hints at the complexity of the task involved.  You will likely want to limit yourself to supporting specific types of filters.</p>

<p><strong>Pictures of Pivot and data</strong></p>

<p><em>pivot table with filters</em></p>

<p><img src=""https://i.stack.imgur.com/dFOjH.png"" alt=""pivot table with filters""></p>

<p><em>all data</em></p>

<p><img src=""https://i.stack.imgur.com/co2KP.png"" alt=""all data""></p>

<p><em>filtered data</em></p>

<p><img src=""https://i.stack.imgur.com/O9FFE.png"" alt=""filtered data""></p>
"
"<p>I have a vba function which calls Application.Index. 
My problem is that some times it returns a value of an item which doesn't exist in the lookup range! I have an isError check, but it returns false.
Out of about 150 rows, 30 of them are returning incorrect - the other 120 are returning correct.</p>

<p>If anyone can help, it would be greatly appreciated!
Here is my code:</p>

<pre><code>Function getQtyOnHand(skuRng As Range, tc As Range, skuCol As Range) As Long
     Dim index, retVal As Long, sku As String
     sku = skuRng.Value
     index = Application.Match(sku, skuCol)
     If IsError(index) Then
       retVal = 0
     Else
       retVal = Application.index(tc, index, 0)
     End If
     getQtyOnHand = retVal
End Function
</code></pre>

<p>For clarity, here is the information being sent to this function:</p>

<pre><code>    Dim totalCol As Range, stockSkuCol As Range
    Set totalCol = wbStock.Worksheets(""MAIN"").Range(""F:F"")
    Set stockSkuCol = wbStock.Worksheets(""MAIN"").Range(""A:A"")

    getQtyOnHand(ws.Range(""F2""), totalCol, stockSkuCol)
</code></pre>

<p>Some further testing.... here's a totally separate function showing the incorrect output:</p>

<pre><code> Sub testIndex()
     Dim wb1 As Workbook, wb2 As Workbook, ws1 As Worksheet, ws2 As Worksheet
     Set wb1 = Workbooks(""Output.xlsm"")
     Set wb2 = Workbooks(""STOCK.xlsx"")
     Set ws1 = wb1.Worksheets(""StockList"")
     Set ws2 = wb2.Worksheets(""MAIN"")

     Dim c1 As Range
     Set c1 = ws1.Range(""D131"")

     Dim ind
     ind = Application.WorksheetFunction.Match(c1.Value, ws2.Range(""A:A""))

     Debug.Print (c1.Value &amp; "" was found in row "" &amp; ind &amp; "" whose value is "" &amp; ws2.Range(""A"" &amp; ind))

 End Sub
</code></pre>

<p>The debug.print output is:</p>

<pre><code>ZM-101 was found in row 100 whose value is YK21222L
</code></pre>

<p>!!???? (by the way, 100 is the last row in this document)</p>

<p>Thanks, Davey</p>
","<p>Your call to <code>Match</code> does not specify a search type.  You call it with only 2 parameters which defaults to a <code>1</code>.  You want to explicitly call it with a <code>0</code> for exact matches.  This is better understood by using the formula version in a normal spreadsheet to see the effect of that final parameter.</p>

<p>Fix:</p>

<pre><code>index = Application.Match(sku, skuCol, 0)
</code></pre>

<p>Same story on your later call to <code>Application.WorksheetFunction.Match(..,..)</code></p>
"
"<p>Thanks for any input on this. I'm trying to make a simple pivot table that is taking data from sheet ""5 Month Trending May 15"" and putting it onto my Pivot Table sheet called ""Errors By Criticality - Pivot"". </p>

<p>When I try to set the pivot cache range with the create method it's returning a runtime error of type mismatch. I've checked the parameters and it looks like I'm setting it up correctly. I did try to specify the PivotTable version and was still getting the same error. My code is below. </p>

<p>I'm assuming it's something to do with the pvtCache variable or the way I'm setting it to the range but I can't figure any solutions out. </p>

<pre><code>Sub PivotTableCode()

Dim pvtCache As PivotCache 
Dim pvt As PivotTable
Dim pf As PivotField
Dim pi As PivotItem 
'Set the cache of the pivot table
Sheets(""5 Month Trending May 15"").Select
Set pvtCache = ActiveWorkbook.PivotCaches.Create(xlDatabase, Range(""A2:H38""))

'create the Pivot Table
Sheets(""Errors by Criticality - Pivot"").Select
Set pvt = ActiveSheet.PivotTables.Add(pvtCache, Range(""AP2""), ""MyPivotTable"") 
End Sub
</code></pre>
","<p>The <a href=""https://msdn.microsoft.com/en-us/library/office/ff839430.aspx"" rel=""nofollow"">documentation for PivotCaches.Create</a> indicates</p>

<blockquote>
  <p>The <code>SourceData</code> argument is required if <code>SourceType</code> isn't <code>xlExternal</code>. It can be a <code>Range</code> object (when <code>SourceType</code> is either <code>xlConsolidation</code> or <code>xlDatabase</code>) or an Excel Workbook Connection object (when <code>SourceType</code> is <code>xlExternal</code>).</p>
</blockquote>

<p>Despite this, the macro recorder will always create a <code>String</code> here for the <code>SourceData</code>.  <a href=""http://stackoverflow.com/questions/30538131/run-time-error-5-invalid-procedure-call-or-argument/30540014#30540014"">(It will even create a bad string if the <code>Sheet</code> has a space in the name).</a></p>

<p>Given the preference for the macro recorder, I often supply this as a <code>String</code> with the addresses.</p>

<p>I have been able before to supply a <code>Range</code> here so I am not certain what is specifically going on that prevents the <code>Range</code> usage in this case.</p>

<p>To use a <code>String</code>, your code would look like:</p>

<pre><code>Set pvtCache = ActiveWorkbook.PivotCaches.Create(xlDatabase, ""'5 Month Trending May 15'!A2:H38"")
</code></pre>
"
"<p>I am building a dashboard in Excel 2013 by connecting to cells in a large number of pivot tables.  Normally all I have to do is put <code>=</code> in a cell and then click on a cell in the pivot table and it will automatically create the formula: </p>

<p><code>=GETPIVOTDATA(""Max Baseline"",'Template Pivots'!$K$4,""Category"",""Apples"",""Measure"",""Combined"").</code></p>

<p>But today I when I started working Excel now treats the pivot tables like they are range values.  Instead of <code>GETPIVOTDATA</code> it produces <code>='Template Pivots'!P5</code>.</p>

<p>Has anyone had this happen to them before?  Did I accidentally disable the automatic <code>GETPIVOTDATA</code> function?  I started building the table in Excel 2010 but upgraded to Excel 2013, could that have thrown things off?</p>
","<p>There are two places to change the setting (which is global).</p>

<ol>
<li>In the Pivot Ribbon, the option is in the <code>Options</code> menu.</li>
<li>It is also in the general settings for Excel, <code>Options-&gt;Formulas</code></li>
</ol>

<p><img src=""https://i.stack.imgur.com/mmzF3.png"" alt=""options""></p>

<p><img src=""https://i.stack.imgur.com/bcOef.png"" alt=""general options""></p>
"
"<p>I am trying to combine a countif in excel with the criteria retrieved from a vlookup table. This sounds simple enough, but I am having trouble making it work.</p>

<p>=countif(a1:z1,"">=4"")
I want the column values from a to z counted every time the value is greater than or equal to 4 which is my criteria.</p>

<p>But I don't want to type the four in the above formula.
I want it to come from a vlookup.</p>

<p>VLOOKUP(""myValue"",AA1:DD4,2,FALSE)   &lt;--formula would retrieve the 4</p>

<p>Any suggestions how I can do this?</p>
","<p>To make the <code>""&gt;=4""</code> a parameter, you just need to do some string building: </p>

<pre><code>""&gt;="" &amp; VLOOKUP(""myValue"",AA1:DD4,2,FALSE)
</code></pre>

<p>The full formula would be:</p>

<pre><code>=COUNTIF(a1:z1,""&gt;="" &amp; VLOOKUP(""myValue"",AA1:DD4,2,FALSE))
</code></pre>

<p>The <code>&amp;</code> operator is a shorthand for <code>=CONCATENATE(,)</code> which is a long word for ""join strings together"".</p>
"
"<p>I need to do a lookup and return the value based on if the text contains it.</p>

<p>Please see my excel sheet below, What I need is a formula, which will help my 'Category' column to be filled 'Category' column of the look up table.</p>

<p>Note: Kindly see my excel sheet in below link.</p>

<p><img src=""https://i.stack.imgur.com/xLR1R.png"" alt=""data provided by user""></p>

<p>I tried the formula '<code>=VLOOKUP(B2,A13:B16,2,TRUE)</code>' but it is not giving the expected result.</p>
","<p>This is a slight twist on the normal ""find this string inside a list of others"".  It requires an array formula that searches for matches using <code>FIND</code>.</p>

<p><strong>Picture of ranges</strong></p>

<p><img src=""https://i.stack.imgur.com/giGNp.png"" alt=""ranges and results""></p>

<p><strong>Formula</strong> in cell <code>A2</code> is an array formula (entered with <kbd>CTRL + SHIFT + ENTER</kbd>) and is copied down for each item.  It searches in the list of <code>lookup</code> for an item that is included in <code>item</code> and returns the result from <code>category</code> associated with <code>lookup</code>.</p>

<pre><code>=INDEX($E$2:$E$4,MIN(IF(IFERROR(FIND($D$2:$D$4,B2)&gt;0,FALSE),ROW($D$2:$D$4)))-ROW($E$1))
</code></pre>

<p><strong>How it works</strong></p>

<ul>
<li><code>INDEX</code> is returning from <code>category</code> and needs a row number to return</li>
<li>The row number is determined by using <code>FIND</code> which will check if a string is included in part of another string.  In this case, the string to search for is the <code>lookup</code> table and we are matching within the <code>item</code>.</li>
<li><code>FIND</code> will return <code>#VALUE!</code> if no match is found, this is converted to <code>FALSE</code> with <code>IFERROR</code> because <code>#VALUE!</code> will no work with <code>MIN</code> later.</li>
<li>The <code>IF</code> will then return the <code>ROW</code> number or <code>FALSE</code> for the match that was found.</li>
<li><code>MIN</code> is used to convert the list of <code>ROW</code> numbers to the smallest number.  This means that multiple matches are not handled.</li>
<li>This <code>ROW</code> number is then used as the return for the <code>INDEX</code>.  There is an offset applied here <code>-ROW(E1)</code> which allows for the data tables to start in a row other <code>1:1</code>.</li>
</ul>
"
"<p>I have made a userform so a person can input a start date and an end date so a line graph will display the desired information. Currently I have everything working except the range update syntax. </p>

<p>I am saving the address of the start date's data as Ad and the address of the end date's address as Add (Both are strings). </p>

<p>I then try to set the range using these but I am doing something wrong. here is the code.</p>

<pre><code>Dim CellX1 As Integer
Dim CellY1 As Integer
Dim CellX2 As Integer
Dim CellY2 As Integer
Dim Ad As String
Dim Add As String

Sheets(""Data"").Activate
Cells(CellY1, CellX1).Activate
Ad = ActiveCell.Address 'set start address

Cells(CellY2, CellX2).Activate
Add = ActiveCell.Address 'set end address

Sheets(""Graph"").Activate                                   

ActiveSheet.ChartObjects(""Chart 1"").Activate
ActiveChart.SeriesCollection.NewSeries
ActiveChart.SeriesCollection(1).Name = ""=""""A3""""""
</code></pre>

<p>This is the lines of code that i cant get to work:</p>

<pre><code>ActiveChart.SeriesCollection(1).Values = ""=Data!$Ad:Add""
ActiveChart.SeriesCollection(1).XValues = ""=Time!$E:$F""
</code></pre>
","<p>Should be able to <code>Set</code> those as the <code>Range</code> version.  You also will do better to assign the series variables to actual <code>Ranges</code> instead of addresses as strings.  Really, you should just <code>Set</code> directly which is what I have below.</p>

<p>Full code should be something like:</p>

<pre><code>Dim CellX1 As Integer
Dim CellY1 As Integer
Dim CellX2 As Integer
Dim CellY2 As Integer
Dim Ad As Range
Dim Add As Range

Set Ad = Sheets(""Data"").Cells(CellY1, CellX1) 'set start address    
Set Add = Sheets(""Data"").Cells(CellY2, CellX2) 'set end address

Sheets(""Graph"").Activate

ActiveSheet.ChartObjects(""Chart 1"").Activate
ActiveChart.SeriesCollection.NewSeries
ActiveChart.SeriesCollection(1).Name = Range(""A3"")
ActiveChart.SeriesCollection(1).Values = Range(Ad, Add)
ActiveChart.SeriesCollection(1).XValues = Worksheets(""Time"").Range(""$E:$F"")
</code></pre>

<p>Note that I changed the type of variable for <code>Ad</code> and <code>Add</code> to <code>Range</code>.  This makes it easier to create a start/end <code>Range</code> for the chart.</p>
"
"<p>I am trying to create a dynamic table - I have tried a Pivot Table, but cannot get it to work. So I thought that maybe it could be done with an IF-statement, but that did not work for me neither.  </p>

<p>Basically, I have 2 tables, 1 table containing the information (data source table) and 1 table that should be dynamic according to the data in the first table.  </p>

<p><img src=""https://i.stack.imgur.com/atIAv.gif"" alt=""Table 1""></p>

<p>So if I change the data in the E-column, the Fruit table (image below) must be updated accordingly.</p>

<p><img src=""https://i.stack.imgur.com/grVqB.gif"" alt=""Table 2""></p>

<p>So if I write 2 instead of 1 in the count of Apples, then it should create 2 apples under the ""Fruit""-column"". Data in the remaining columns will be calculated with a formula/fixed data - so that is not important.<br>
I am open to any solutions; formulas, pivot tables, VBA, etc.</p>

<p>Have a nice weekend.
I have both Excel 2010 and 2013.</p>
","<p>If you want to repeat some text a number of times you can use a somewhat complicated formula to do it.  It relies on there not being duplicate entries in the <code>Fruits</code> table and no entries with 0 count.</p>

<p><strong>Picture of ranges and results</strong></p>

<p><img src=""https://i.stack.imgur.com/syPpQ.png"" alt=""ranges and results""></p>

<p><strong>Formulas</strong> involved include a starter cell <code>E2</code> and a repeating entry <code>E3</code> and copied down.  These are actually <em>normal</em> formulas, no array required.  Note that I have created a <code>Table</code> for the data which allows me to use named fields to get the whole column.</p>

<pre><code>E2 = INDEX(Table1[Fruits],1)
E3 = IF(
      INDEX(Table1[Count],MATCH(E2,Table1[Fruits],0))&gt;COUNTIF($E$2:E2,E2),
      E2,
      INDEX(Table1[Fruits],MATCH(E2,Table1[Fruits],0)+1))
</code></pre>

<p><strong>How it works</strong>
This formula relies on checking the number of entries above the current one and comparing to the desired count.  Some notes:</p>

<ul>
<li>The starter cell is needed to get the first result.  </li>
<li>After the first cell, it counts how often the value above appears in the total list.  This is compared to the desired count.  If less than desired, it will repeat the value from above.  If greater, it will go to the next item in the list.  There is a dual relative/absolute reference in here to count cells above.</li>
<li>Since it goes to the next item in the list, don't put a 0 for a count or it will get included once.</li>
</ul>

<p>You can copy this down for as many cells as you want.  It will <code>#REF!</code> when it runs out of data.  You can wrap in an <code>IFERROR(..., """")</code> to make these display pretty.</p>

<p>If the non-0 rule is too much, it can probably be removed with a little effort.  If there are duplicates, that will be much harder to deal with.</p>
"
"<p>I have a workbook where I need to be able to click on a single cell of a worksheet and hit my command button. That copies and pastes the cell value to the first blank cell in column E on a different worksheet within the same workbook. When I just run the macro by itself, it works fine. But when I paste the code into a command button, it gives me a couple of runtime error 1004's. The most common error is ""Select method of range class failed"" and refers to the code line that tells it to select Range (E4). Here is the code:</p>

<pre><code>Private Sub CommandButton1_Click()

' Choose player from Player list and  paste to Draft list.

    Sheets(""Players"").Select
    Selection.Select
    Selection.Copy

    Sheets(""Draft"").Select
    Range(""E4"").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1).Select
    Selection.PasteSpecial _ 
        Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False

End Sub
</code></pre>
","<p><strong>TL;DR</strong>, couple options to resolve this, in order of preference:</p>

<ol>
<li><a href=""http://stackoverflow.com/q/10714251/4288101"">Stop using <code>Select</code></a> to access cells</li>
<li>Qualify your call to <code>Range(""E4"")</code> when executing code in a <code>Worksheet</code> object by using <code>Application.Range(""E4"")</code> or <code>Sheets(""Draft"").Range(""E4"")</code> or <code>ActiveSheet.Range(""E4"")</code></li>
<li>Move the code to <code>ThisWorkbook</code> or a code module and call that <code>Sub</code> from the event.</li>
</ol>

<hr>

<p>Here is the lengthy part that attempts to explain <em>why</em> your code does not work.</p>

<p>This all comes down to: where is the code executing?  Different execution contexts will behave differently when you use unqualified references to <code>Cells</code> <code>Range</code> and a number of other functions.</p>

<p>Your original code likely ran inside <code>ThisWorkbook</code>, a code module, or possibly in the code file for sheet <code>Draft</code>.  Why do I guess this?  Because in all of those places a call to <code>Range(""E4"")</code> would be acceptable to get the cell <code>E4</code> on sheet <code>Draft</code>.  Cases:</p>

<ul>
<li><code>ThisWorkbook</code>and a code module will execute <code>Range</code> on the <code>ActiveSheet</code> which is <code>Draft</code> since you just called <code>Select</code> on it.</li>
<li>Inside <code>Draft</code> will execute <code>Range</code> in the context of <code>Draft</code> which is acceptable since that is the <code>ActiveSheet</code> and the place where you are trying to get cell <code>E4</code>.</li>
</ul>

<p>Now what happens when we add an ActiveX <code>CommandButton</code> to the mix?  Well that code is added to the <code>Worksheet</code> where it lives. This means that the code for the button can possibly execute in a different context than it did before.  The only exception to this is if the button and code are both on sheet <code>Drafts</code>, which I assume not since you <code>Select</code> that sheet.  For demonstrations, let's say the button is located on sheet <code>WHERE_THE_BUTTON_IS</code>.</p>

<p>Given that sheet, what is going on now?  Your call to <code>Range</code> is now executed in the context of sheet <code>WHERE_THE_BUTTON_IS</code> <strong>regardless</strong> of the <code>ActiveSheet</code> or anything else you do outside of the call to <code>Range</code>.  This is because the call to <code>Range</code> is <em>unqualified</em>.  That is, there is no object to provide scope to the call so it runs in the current scope which is the <code>Worksheet</code>.</p>

<p>So now we have a call to <code>Range(""E4"")</code> in sheet <code>WHERE_THE_BUTTON_IS</code> which is trying to <code>Select</code> the cell.  This is forbidden because sheet <code>Draft</code> is the <code>ActiveSheet</code> and </p>

<blockquote>
  <p><strong>Thou shalt not <code>Select</code> a cell on a <code>Worksheet</code> that is not the <code>ActiveSheet</code></strong></p>
</blockquote>

<p>So with all of this, how do we resolve this issue?  There are a couple of ways out:</p>

<ol>
<li><strong><a href=""http://stackoverflow.com/q/10714251/4288101"">Stop using <code>Select</code> to manipulate cells</a></strong>.  This gets away from the main problem here, quoted above.  This assumes your button lives on the same sheet as the <code>Selection</code> to copy/paste.</li>
</ol>

<hr>

<pre><code>Private Sub CommandButton1_Click()

    Sheets(""Draft"").Range(""E4"").End(xlDown).Offset(1).Value = Selection.Value

End Sub
</code></pre>

<hr>

<ol start=""2"">
<li><strong>Qualify the call to <code>Range</code></strong> so that it executes in the proper context and chooses the right cell.  You can use the <code>Sheets(""Draft"").Range</code> object to qualify this or <code>Application.Range</code> instead of the bare <code>Range</code>.  I highly recommend option 1 instead of trying to figure out how to make <code>Select</code> work.</li>
</ol>

<hr>

<pre><code>Private Sub CommandButton1_Click()
    Sheets(""Players"").Select
    Selection.Copy

    Sheets(""Draft"").Select

    'could also use Application.Range here
    Sheets(""Draft"").Range(""E4"").Select
    Selection.End(xlDown).Select
    ActiveCell.Offset(1).Select

    Selection.PasteSpecial _
        Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
End Sub
</code></pre>

<hr>

<ol start=""3"">
<li>Move the code back to a <code>Sub</code> that is outside of the <code>Worksheet</code> object and call it from the <code>CommandButton1_Click</code> event.</li>
</ol>
"
"<p>So I needed to make a sheet for uploading some products, some of those products are grouped products. To make my importer work I need to take these grouped products and create a new row for them. All the grouped ids are in a column mixed with non grouped ids. I also have a column with the individual ids. </p>

<p>Sample data ids and grouped ids columns:</p>

<pre><code>AR1249-16   AR1249
AR1253-16   AR1253
AR1359-04   AR1359
AR1373-18   AR1373
AR1424-03   AR1424
AR1424-07   AR1424
AR1454-16   AR1454
AR1470-01   AR1470
AR1507-03   AR1507
AR1511-16   AR1511
AR1531-03   AR1531
AR1576-03   AR1576
AR1578-03   AR1578
AR1589-03   AR1589
AR1618-03   AR1618
AR1618-14   AR1618
AR1630-06   AR1630
AR1682-06   AR1682
AR1696-03   AR1696
AR1732-03   AR1732
AR1800-03   AR1800
AR1800-04   AR1800
AR1800-05   AR1800
AR1800-10   AR1800
AR1800-48   AR1800
AR1803-16   AR1803
AR1804-03   AR1804
AR1804-04   AR1804
AR1804-05   AR1804
AR1804-10   AR1804
AR1804-48   AR1804
AR1804-06   AR1804
</code></pre>

<p>The Question: 
What I'd like to do is use some sort or filter function with Excel that reads this column, finds the duplicates in the grouped ids, and make a new row with the individual ids of those grouped products. </p>

<p>I've searched far and wide for possible solutions but since Excel is so widely used I couldn't find the gem between all the rubbish.  </p>

<p>The output at the end of the sheet could look like this per example: </p>

<pre><code>""AR1424"", ""AR1424-03, AR1424-07""
""AR1618"", ""AR1618-03, AR1618-14""
""AR1800"", ""AR1800-03, AR1800-04, AR1800-05, AR1800-10, AR1800-48"" 
</code></pre>
","<p>If you want to do this with VBA instead of formulas, here is one route that makes use of <code>AutoFilter</code> on each unique entry and then processing the visible cells onto another sheet.  The ranges and names are specific to the application above but could be changed to suit.</p>

<p><strong>Code</strong></p>

<pre><code>Sub GroupByCommonValue()

    Dim rng_all As Range
    Set rng_all = Intersect(Range(""B:B""), ActiveSheet.UsedRange)

    Dim rng_data As Range
    Set rng_data = Intersect(rng_all, rng_all.Offset(1))

    'create output sheet
    Dim sht_out As Worksheet
    Set sht_out = Worksheets.Add()
    sht_out.Range(""A1"") = ""GROUP""
    sht_out.Range(""B1"") = ""IDs""

    Dim rng_out As Range
    Set rng_out = sht_out.Range(""A2"")

    Dim rng As Range
    For Each rng In rng_data
        'skip duplicates
        If Application.WorksheetFunction.CountIf(rng_out.EntireColumn, rng.Value) = 0 Then

            rng_all.AutoFilter Field:=1, Criteria1:=rng.Value

            Dim arr As Variant
            arr = rng_data.Offset(, -1).SpecialCells(xlCellTypeVisible).Value

            rng_out = rng.Value

            If TypeName(arr) &lt;&gt; ""Variant()"" Then
                rng_out.Offset(, 1) = arr
            Else
                arr = Application.Transpose(arr)

                'top line will concatenate / lower will create column for each
                rng_out.Offset(, 1) = Join(arr, "", "")
                'rng_out.Offset(, 1).Resize(1, UBound(arr)).Value = arr
            End If

            Set rng_out = rng_out.Offset(1)
        End If
    Next

    rng_all.Parent.AutoFilterMode = False
End Sub
</code></pre>

<p><strong>Couple notes on the code</strong></p>

<ul>
<li>Using <code>WorksheetFunction.CountIf</code> to check if the value appears on the output sheet before doing the filter.  Avoids extra work.</li>
<li><code>SpecialCells</code> returns the visible cells only.  If there are multiple values, then <code>Value</code> will return a <code>Variant()</code> array.  If it is not that type, then there is only a single cell to move over.</li>
<li>For the array, you can either use <code>Join</code> to concatenate it all together or output it to different columns (currently commented out).</li>
</ul>

<p><strong>Pictures of before and after (on a new sheet)</strong></p>

<p><img src=""https://i.stack.imgur.com/oB8bx.png"" alt=""enter image description here"">
<img src=""https://i.stack.imgur.com/mdW1N.png"" alt=""enter image description here""></p>
"
"<p>I created a Userform in Word  which imports 3 columns of data from an excel sheet, inserts it into bookmarks and in the name of the word document and saves it as a pdf.</p>

<p>Now I wanted to add a Listbox into the form to be able to add, modify and delete the inputs manually which are usually imported from the excel sheet .</p>

<p>I already figured out how to add data from 3 textboxes into a 3 Column Listbox but even after googling for hours I can't find a good way to modify selected data.</p>

<p>VB.net has the .selectedItem property, VBA does not. Can anybody give me an example how to modify a multi column listbox with the values of 3 textboxes?  </p>

<p>Thanks in advance</p>
","<p>You need to iterate through <code>ListBox.Selected</code> and check if it is <code>True</code>.  Once you get a <code>True</code> one, you can process that item.</p>

<p><strong>Sample code</strong> adds some items with columns and sets up a click event to run through the <code>Selected</code> items.</p>

<pre><code>Private Sub ListBox1_Click()
    Dim i As Integer
    For i = 0 To ListBox1.ListCount - 1
        If ListBox1.Selected(i) Then
            Debug.Print ListBox1.List(i, 0)
        End If
    Next i
End Sub

Private Sub UserForm_Initialize()
    ListBox1.AddItem ""test""
    ListBox1.AddItem ""test1""
    ListBox1.AddItem ""test2""

    ListBox1.ColumnCount = 3
    ListBox1.ColumnHeads = True

    ListBox1.List(1, 0) = ""change to 1,0""
    ListBox1.List(1, 1) = ""change to 1,1""
    ListBox1.List(1, 2) = ""change to 1,2""
End Sub
</code></pre>

<p><strong>Picture of form with Immediate window</strong> after clicking each item in turn.</p>

<p><img src=""https://i.stack.imgur.com/1hLwe.png"" alt=""UserForm""></p>
"
"<p>I have automated a proper record input into the table that I use as a database, and when the table is filtered the input don't work.</p>

<p>So I have code this to unfilter DataBase before every record input.</p>

<pre><code>Public Sub UnFilter_DB()
Dim ActiveS As String, CurrScreenUpdate As Boolean

CurrScreenUpdate = Application.ScreenUpdating
Application.ScreenUpdating = False
ActiveS = ActiveSheet.Name

    Sheets(""DB"").Activate
    Sheets(""DB"").Range(""A1"").Activate
    Sheets(""DB"").ShowAllData
    DoEvents
    Sheets(ActiveS).Activate

Application.ScreenUpdating = CurrScreenUpdate
End Sub
</code></pre>

<p>But now, it stays stuck on <code>Sheets(""DB"").ShowAllData</code> saying :</p>

<blockquote>
  <p>ShowAllData method of Worksheet Class failed</p>
</blockquote>

<p>because the table is already unfiltered... </p>

<p>And I don't know if it is better to <strong>use an error handler</strong> like <code>On Error Resume Next</code> or how to <strong>detect if there is a filter or none</strong>.</p>

<p>Any pointers would be welcome!</p>
","<p>If you use <code>Worksheet.AutoFilter.ShowAllData</code> instead of <code>Worksheet.ShowAllData</code> it will not throw the error when nothing is filtered.</p>

<p>This assumes that <code>Worksheet.AutoFilterMode = True</code> because otherwise you will get an error about <code>AutoFilter</code> not being an object.</p>

<pre><code>Public Sub UnFilter_DB()
Dim ActiveS As String, CurrScreenUpdate As Boolean

CurrScreenUpdate = Application.ScreenUpdating
Application.ScreenUpdating = False
ActiveS = ActiveSheet.Name

    Sheets(""DB"").Activate
    Sheets(""DB"").Range(""A1"").Activate
    Sheets(""DB"").AutoFilter.ShowAllData
    DoEvents
    Sheets(ActiveS).Activate

Application.ScreenUpdating = CurrScreenUpdate
End Sub
</code></pre>
"
"<p>My apologies if this question is posted elsewhere, but I believe part of my problem is that I'm not familiar with the terminology. Searching becomes rather difficult when you don't know the keywords to use...</p>

<p>I've inherited a PivotTable that pulls data from an SQL database. Three of the columns in this table are ""grouped."" By this I mean that all duplicate items in these columns are always next to each other. I want to removing these groupings so that sorting the table is easier. Does anybody know how to do this?</p>

<p>EDIT:My work computer has both snipping tool and paint disabled...So here is a picture of something similar. In my table, all of the data is pulled from the database. The left two columns (in this example) have repeated data, so it groups them like so. These sections are collapsible and expandable. </p>

<p><a href=""http://datapigtechnologies.com/blog/wp-content/uploads/2012/04/040212_1021_FilltheEmpt1.png"" rel=""nofollow noreferrer"">http://datapigtechnologies.com/blog/wp-content/uploads/2012/04/040212_1021_FilltheEmpt1.png</a></p>
","<p>There is an option on the Pivot Table menu <code>Design-&gt;Report Layout-&gt;Repeat All Item Labels</code>.  This will repeat all the labels when combined with a <code>Tabular</code> or <code>Outline</code> style layout.  You will also do better (more than likely) to remove the subtotals as well.</p>

<p><strong>Menu and before</strong></p>

<p><img src=""https://i.stack.imgur.com/MhLMu.png"" alt=""before""></p>

<p><strong>After</strong></p>

<p><img src=""https://i.stack.imgur.com/rormf.png"" alt=""after""></p>
"
"<p>This should capitalize every character but I get <code>type mismatch</code> error.
It works fine for other worksheets that have similar data but for no reason it gives me mismatch error. Please help </p>

<pre><code>Private Sub allUpper(ByRef sh As Worksheet)
        Dim arr As Variant, i As Long, j As Long

        If WorksheetFunction.CountA(sh.UsedRange) &gt; 0 Then
            arr = sh.UsedRange  'one interaction with the sheet
            For i = 2 To UBound(arr, 1)         'each ""row""
                For j = 1 To UBound(arr, 2)     'each ""col""
                    arr(i, j) = UCase(RTrim(Replace(arr(i, j), Chr(10), vbNullString)))
                Next
            Next
            sh.UsedRange = arr  'second interaction with the sheet
        End If
    End Sub
</code></pre>
","<p>You probably have an error (<code>#N/A</code>, etc.) somewhere in your data.</p>

<p>You can add a check for that to prevent the run time error:</p>

<pre><code>If Not IsError(arr(i, j)) Then
    arr(i, j) = UCase(RTrim(Replace(arr(i, j), Chr(10), vbNullString)))
End If
</code></pre>
"
"<p>Good afternoon, </p>

<p>I was wondering if there is a way to count the number of blank spaces in a cell and return that value using a combination of vlookups, if else statements, and possible the len function? For example, the reports that are generated Generate values like this: </p>

<p>""TopLocation""
""     SubLocation"" 
""          SubSubLocation""</p>

<p>My goal is to be able to automate some of these reports, but I feel like I'm missing one or more pieces to the puzzle. </p>

<p>Thank you. </p>
","<p>Assuming a blank only refers to a simple space, <code></code>, you can get this with a quick formula that takes the difference of the original length and the length after removing spaces.</p>

<p><strong>Formula</strong> in B1 with data in A1, copied down to end of data</p>

<pre><code>=LEN(A1)-LEN(SUBSTITUTE(A1,"" "", """"))
</code></pre>

<p><strong>Picture</strong></p>

<p><img src=""https://i.stack.imgur.com/yhRFY.png"" alt=""picture of results""></p>

<p><strong>Data</strong> in case you don't believe the image, where space is now period</p>

<pre><code>a.b
a...c
..a..c
</code></pre>
"
"<p>I have 2 different files which have different headers, for example: </p>

<pre><code>OldfileHeaders | NewFileheaders
ID             | Test ID
Date           | New date
</code></pre>

<p>and so on. I am trying to compare the data in both sheets and see if they match.  The rows of data may be in different order and the headers may also be in different order.</p>

<p>So what I am trying to do is:
1) define which headers match which headers between the 2 files
2) find the ID from the oldfile and see if it is in the new file, if it is then see if the data under each header matches. If it doesn't then export that row of data to a new sheet add a column and label it ""Missing"".</p>

<p>The Code So far:</p>

<pre><code>Set testIdData = testIdData.Resize(testIdData.CurrentRegion.Rows.Count)

Do Until sourceId.Value = """"
    datacopy = False
    ' Look for ID in test data
    Set cellFound = testIdData.Find(What:=sourceId.Value, LookIn:=xlValues, LookAt:=xlWhole, MatchCase:=False)
    If cellFound Is Nothing Then
    ' This entry not found, so copy to output
        datacopy = True
        outputRange.Resize(ColumnSize:=NUMCOLUMNS).Interior.Color = vbRed
    Else
        ' This assumes that columns are in same order
        For columnNum = 2 To NUM_COLUMNS_DATA
        ' No need to test the ID column
            If sourceId.Cells(ColumnIndex:=columnNum).Value &lt;&gt; cellFound.Cells(ColumnIndex:=columnNum).Value Then
                outputRange.Cells(ColumnIndex:=columnNum).Interior.Color = vbYellow
                datacopy = True
            End If
        Next columnNum
    End If
    If datacopy Then
        sourceId.Resize(ColumnSize:=NUMCOLUMNS).Copy
        outputRange.PasteSpecial xlPasteValuesAndNumberFormats
        Application.CutCopyMode = False
        Set outputRange = outputRange.Offset(RowOffset:=1)
        difference = difference + 1
    End If
    Set sourceId = sourceId.Offset(RowOffset:=1)
Loop
</code></pre>

<p>This code works depending on me formatting the sheets in the correct order and changing the header names.</p>

<p>I need help in defining which field names match which field names within the 2 sheets, and then searching the new sheet for each ID and seeing if the data in the corresponding cells match. If the ID is not in the sheet then output that row too a different sheet. If the id is present and there are differences in the cells then out put these to the shame sheet. I want to produce a tally of differences in each column.</p>
","<p>Matching up data between data sets requires that you give the program some help.  In this case, the help needed is which columns are related to each other.  You have identified a small table of how headers are related.  With this, you can do the various translations from data source 1 to data source 2.  It requires heavy usage of <code>Application.Match</code> and <code>Application.VLookup</code>.</p>

<p>I will provide a base example which does the core of what you are trying to do.  It is much easier to see it all on one sheet which is what I have done.</p>

<p><strong>Picture of data</strong> shows three tables: rng_headers, rng_source, and rng_dest.  One is the lookup for the headers, the second is the ""source"" data, and the third is the data source to compare against which I will call destination = ""dest"".</p>

<p><img src=""https://i.stack.imgur.com/Z9xld.png"" alt=""starting data""></p>

<p><strong>Code</strong> include steps to: iterate through all the IDs in the source data, check if they exist in the dest data, and, if so, check all the individual values for equality.  This code checks the headers on every step (which is slow) but allows for the data to be out of order.</p>

<pre><code>Sub ConfirmHeadersAndMatch()

    Dim rng_headers As Range
    Set rng_headers = Range(""B3"").CurrentRegion

    Dim rng_dest As Range
    Set rng_dest = Range(""I2"").CurrentRegion

    Dim rng_source As Range
    Set rng_source = Range(""E2"").CurrentRegion

    Dim rng_id As Range 'first column, below header row
    For Each rng_id In Intersect(rng_source.Columns(1).Offset(1), rng_source)

        Dim str_header As Variant
        str_header = Application.VLookup( _
            Intersect(rng_id.EntireColumn, rng_source.Rows(1)), _
            rng_headers, 2, False)

        'get col number
        Dim int_col_id As Integer
        int_col_id = Application.Match(str_header, rng_dest.Rows(1), 0)

        'find ID in the new column
        Dim int_row_id As Variant
        int_row_id = Application.Match(rng_id, rng_dest.Columns(int_col_id), 0)

        If IsError(int_row_id) Then
            'ID missing... do something
            rng_id.Interior.Color = 255
        Else
            Dim rng_check As Range 'all values, same row
            For Each rng_check In Intersect(rng_source, rng_id.EntireRow)

                'get col number
                str_header = Application.VLookup( _
                    Intersect(rng_check.EntireColumn, rng_source.Rows(1)), _
                    rng_headers, 2, False)
                int_col_id = Application.Match(str_header, rng_dest.Rows(1), 0)

                'check value
                If rng_check.Value &lt;&gt; rng_dest.Cells(int_row_id, int_col_id).Value Then
                    'values did not match... do something
                    rng_dest.Cells(int_row_id, int_col_id).Interior.Color = 255
                End If

            Next rng_check
        End If
    Next
End Sub
</code></pre>

<p><strong>Notes on the code</strong></p>

<ul>
<li>Ranges are built on <code>CurrentRegion</code> which picks out the blocks of data.  You can swap these out for different ranges on different sheets.</li>
<li>Column header translation is done with <code>Application.VLookup</code> to check the source header and return the destination header.  This <code>String</code> is then found in the destination header row using <code>Application.Match</code>.  You could abstract this code into a <code>Function</code> to avoid repeating it twice.</li>
<li>Once the column is found, the ID is searched for in the destination table using <code>Application.Match</code>.  This will return an error if the ID is not found.</li>
<li>If the ID is found, it then checks all of the other values in the same row, comparing them against the correct columns in the destination table.  Non-matching results are colored red.</li>
<li>If all of the columns do not have pairs, you can add additional checks on the <code>VLookup</code> or the column <code>Match</code> to check this.</li>
<li>The vast majority of this code just handles getting to the correct spots in the data using <code>Intersect</code>, <code>Rows</code>, and <code>Columns</code>.</li>
</ul>

<p><strong>Results</strong> show some red values for the ID not found and the values that don't match.</p>

<p><img src=""https://i.stack.imgur.com/9xSWf.png"" alt=""results""></p>
"
"<p>I am using <em>excel 2010</em> - I have 11 worksheets in a Testing plan template. The 1st Worksheet is an Overview with an Index that has <em>Hyperlinks to the Cell A1 in each worksheet.</em> </p>

<p>In each of the Worksheets in cell A1 is the formula ""=MID(CELL(""filename"",A1),FIND(""]"",CELL(""filename"",A1))+1,255)&amp; "" Test Plan"" this will update anytime the Test Plan worksheet name changes and will also add the text of "" Test Plan"". </p>

<p>On the Overview worksheet in the Index section captures whatever is in that <em>worksheet's cell A1</em> - When click the <em>Index</em> hyperlink it'll open to that Test Plan's worksheet. </p>

<p>However, when the Test Plan's worksheet name changes, of course the hyperlink is no longer functional and error is displayed. </p>

<p>What is the best way to retain the Index Hyperlink to a Test Plan worksheet's cell 1A no matter what the worksheet name is changed to and/or how often it's changed?</p>

<p>Note: Each default worksheet name is Module plus the worksheet# i.e.: Module (1), Module (2), Module (3) etc...</p>
","<p>You can use the <code>HYPERLINK</code> function along with a reference to a cell on the relevant worksheet.  The reference will track the correct spot regardless of the sheet name.  From there, you use <code>CELL</code> to get the address of that cell and feed it to <code>HYPERLINK</code>.</p>

<p><strong>Formula</strong> in cell <code>A1</code> on sheet <code>Index</code>.  If you want better looking text for the cell, you can add a second parameter: <code>=HYPERLINK(..., ""prettier text to display"")</code></p>

<pre><code>=HYPERLINK(CELL(""address"",Data2!A1))
</code></pre>

<p><strong>Picture of sheet names and result</strong></p>

<p><img src=""https://i.stack.imgur.com/9YqN6.png"" alt=""picture of result""></p>

<p>To do this multiple times, you just need to copy the formula and change the cell reference to the next sheet.  For 11 of these, that's not too bad.  If you had more, you could automate the formula creation with VBA.</p>
"
"<p>I am writing a VBA application in Excel. I have a Userform that dynamically builds itself based upon the data contained in one of the worksheets.
All of the code that creates the various comboboxes, textboxes and labels is working.
I created a class module to trap OnChange events for the Comboboxes, and again this works as expected.
Now I have a need to trap OnChange events for some of the textboxes, so I created a new class module modelled on that for the comboboxes to trap the events.</p>

<pre><code>Public WithEvents tbx As MSForms.TextBox

Sub SetTextBox(ctl As MSForms.TextBox)
Set tbx = ctl
End Sub

Public Sub tbx_Change()
Dim LblName As String

MsgBox ""You clicked on "" &amp; tbx.Name, vbOKOnly

End Sub
</code></pre>

<p>The message box is just so that I can confirm it works before I go further.
The problem I'm getting is in the UserForm code module:</p>

<pre><code>Dim TBox As TextBox
Dim tbx As c_TextBoxes

'[...]

Set TBox = lbl
Set tbx = New c_TextBoxes
tbx.SetTextBox lbl
pTextBoxes.Add tbx
</code></pre>

<p>This throws up a type mismatch error at <code>Set TBox=lbl</code>. It's the <strong>exact</strong> same code that works fine for the ComboBox, just with the variables given approriate names. I've stared at this for 2 hours.
Anyone got any ideas? Thanks for any pointers.</p>

<p>Edit - Here's the full userform module that I'm having trouble with:</p>

<pre><code>Private Sub AddLines(FrameName As String, PageName As String)
Dim Counter As Integer, Column As Integer
Dim obj As Object
Dim CBox As ComboBox
Dim cbx As c_ComboBox
Dim TBox As TextBox
Dim tbx As c_TextBoxes
Dim lbl As Control

Set obj = Me.MultiPage1.Pages(PageName).Controls(FrameName)
If pComboBoxes Is Nothing Then Set pComboBoxes = New Collection
If pTextBoxes Is Nothing Then Set pTextBoxes = New Collection

For Counter = LBound(Vehicles) To UBound(Vehicles)
     For Column = 1 To 8
     Select Case Column
     Case 1
         Set lbl = obj.Add(""Forms.Label.1"", ""LblMachine"" &amp; FrameName &amp; Counter, True)
    Case 2
        Set lbl = obj.Add(""Forms.Label.1"", ""LblFleetNo"" &amp; FrameName &amp; Counter, True)
    Case 3
        Set lbl = obj.Add(""Forms.Label.1"", ""LblRate"" &amp; FrameName &amp; Counter, True)
    Case 4
        Set lbl = obj.Add(""Forms.Label.1"", ""LblUnit"" &amp; FrameName &amp; Counter, True)
    Case 5
        Set lbl = obj.Add(""Forms.ComboBox.1"", ""CBDriver"" &amp; FrameName &amp; Counter, True)
    Case 6
        Set lbl = obj.Add(""Forms.Label.1"", ""LblDriverRate"" &amp; FrameName &amp; Counter, True)
    Case 7
        Set lbltbx = obj.Add(""Forms.TextBox.1"", ""TBBookHours"" &amp; FrameName &amp; Counter, True)
    Case 8
        Set lbl = obj.Add(""Forms.Label.1"", ""LblCost"" &amp; FrameName &amp; Counter, True)
    End Select
    With lbl
        Select Case Column
        Case 1
            .Left = 1
            .Width = 60
            .Top = 10 + (Counter) * 20
            .Caption = Vehicles(Counter).VType
        Case 2
            .Left = 65
            .Width = 40
            .Top = 10 + (Counter) * 20
            .Caption = Vehicles(Counter).VFleetNo
        Case 3
            .Left = 119
            .Width = 50
            .Top = 10 + (Counter) * 20
            .Caption = Vehicles(Counter).VRate
        Case 4
            .Left = 163
            .Width = 30
            .Top = 10 + (Counter) * 20
            .Caption = Vehicles(Counter).VUnit
        Case 5
            .Left = 197
            .Width = 130
            .Top = 10 + (Counter) * 20
            Set CBox = lbl 'WORKS OK
            Call CBDriver_Fill(Counter, CBox)
            Set cbx = New c_ComboBox
            cbx.SetCombobox CBox
            pComboBoxes.Add cbx
        Case 6
            .Left = 331
            .Width = 30
            .Top = 10 + (Counter) * 20
        Case 7
            .Left = 365
            .Width = 30
            .Top = 10 + (Counter) * 20
            Set TBox = lbl 'Results in Type Mismatch
            Set tbx = New c_TextBoxes
            tbx.SetTextBox TBox
            pTextBoxes.Add tbx
        Case 8
            .Left = 400
            .Width = 30
            .Top = 10 + (Counter) * 20
        End Select
    End With
    Next
Next
obj.ScrollHeight = (Counter * 20) + 20
obj.ScrollBars = 2

End Sub
</code></pre>

<p>And here's the c_Combobox class module:</p>

<pre><code>Public WithEvents cbx As MSForms.ComboBox

Sub SetCombobox(ctl As MSForms.ComboBox)
    Set cbx = ctl
End Sub

Public Sub cbx_Change()
Dim LblName As String
Dim LblDriverRate As Control
Dim i As Integer


    'MsgBox ""You clicked on "" &amp; cbx.Name, vbOKOnly
    LblName = ""LblDriverRate"" &amp; Right(cbx.Name, Len(cbx.Name) - 8)
    'MsgBox ""This is "" &amp; LblName, vbOKOnly

    'Set obj = Me.MultiPage1.Pages(PageName).Controls(FrameName)
    Set LblDriverRate = UFBookMachines.Controls(LblName)
    For i = LBound(Drivers) To UBound(Drivers)
        If Drivers(i).Name = cbx.Value Then LblDriverRate.Caption = Drivers(i).Rate
    Next
End Sub
</code></pre>

<p>And finally, here's the c_TextBoxes class module:</p>

<pre><code>Public WithEvents tbx As MSForms.TextBox

Sub SetTextBox(ctl As MSForms.TextBox)
    Set tbx = ctl
End Sub

Public Sub tbx_Change()
Dim LblName As String
    'Does nothing useful yet, message box for testing
    MsgBox ""You clicked on "" &amp; tbx.Name, vbOKOnly

End Sub
</code></pre>
","<p>After some quick testing, I am able to reproduce your error if I declare <code>TBox as TextBox</code>.  I do not get an error if I declare <code>TBox as MSForms.TextBox</code>.  I would recommend declaring all your <code>TextBox</code> variables with the <code>MSForms</code> qualifier.</p>

<p><strong>Test code</strong> is situated similar to yours.  I have a <code>MultiPage</code> with a <code>Frame</code> where I am adding a <code>Control</code>.</p>

<pre><code>Private Sub CommandButton1_Click()

    Dim obj As Object
    Set obj = Me.MultiPage1.Pages(0).Controls(""Frame1"")

    Dim lbl As Control
    Set lbl = obj.Add(""Forms.TextBox.1"", ""txt"", True)

    If TypeOf lbl Is TextBox Then
        Debug.Print ""textbox found1"" 'does not execute
    End If

    If TypeOf lbl Is MSForms.TextBox Then
        Debug.Print ""textbox found2""

        Dim txt1 As MSForms.TextBox
        Set txt1 = lbl 'no error
    End If

    If TypeOf lbl Is MSForms.TextBox Then
        Debug.Print ""textbox found3""

        Dim txt As TextBox
        Set txt = lbl 'throws an error
    End If

End Sub
</code></pre>

<p>I am not sure why the qualifier is needed for <code>TextBox</code> and not <code>ComboBox</code>.  As you can see above, a good test for this is the <code>If TypeOf ... Is ... Then</code> to test which objects are which types.  I included the first block to show that <code>lbl</code> is not a ""bare"" <code>TextBox</code>, but, again, I have no idea why that is.  Maybe there is another type of <code>TextBox</code> out there that overrides the default declaration?</p>
"
"<p>Here is what I am trying to do, I have a sheet that has a list of names with no duplicates that varies in length. I would like to have either with a formula or vba sub, to have the next row copy the original list of names and offset it my one, so that the top name on the original is now the last name of the second list. I need to have at the end 10 list where none of the same names are in the same row.  </p>

<p>Here is a sample of what I'd like it to look like.</p>

<pre><code>ColumnB   ColumnC   ColumnD   ColumnE
Name1     Name2     Name3     Name4
Name2     Name3     Name4     Name1
Name3     Name4     Name1     Name2
Name4     Name1     Name2     Name3
</code></pre>

<p>Like a game of Sudoku, none of the names in each row or column can have a duplicate.</p>

<p>I am not sure how to best achieve this since as mentioned above the length of the list is a variable. Ideally I'd like to create the first list, then have the other 9 list to auto populate. Any suggestions?</p>

<p>EDIT___________________
@Paul Drye, I get the following results with your formula</p>

<pre><code>ColumnB   ColumnC   ColumnD   ColumnE
Name1     Name2     Name3     Name4
Name2     Name3     Name4     Name1
Name3     Name4     Name1     Name1
Name4     Name1     Name1     Name1
</code></pre>

<p>As you can see, the last two columns start showing an issue.</p>
","<p>If a formula works, you can get this result simply with </p>

<pre><code>=IF(ISBLANK(B3),B$2,B3)
</code></pre>

<p>in cell <code>C2</code>, assuming your data starts in <code>B2</code>.  This can then be copied down and over or filled using <KBD>CTRL+R, CTRL+D</kbd> after selecting the whole range of cells to occupy.</p>

<p>If the copy is correct, the formula of cell <code>K11</code> is:</p>

<pre><code>=IF(ISBLANK(J12),J$2,J12)
</code></pre>

<p><strong>Picture</strong> shows the inputs in column B, the rest are this formula</p>

<p><img src=""https://i.stack.imgur.com/xCZ3m.png"" alt=""results of formula""></p>

<p>This formula works more or less because of the absolute row reference which ensures that the value from row 2 is used if we are at the end of the list.</p>
"
"<p>Here is what I am trying to do, I have a sheet that has a list of names with no duplicates that varies in length. I would like to have either with a formula or vba sub, to have the next row copy the original list of names and offset it my one, so that the top name on the original is now the last name of the second list. I need to have at the end 10 list where none of the same names are in the same row.  </p>

<p>Here is a sample of what I'd like it to look like.</p>

<pre><code>ColumnB   ColumnC   ColumnD   ColumnE
Name1     Name2     Name3     Name4
Name2     Name3     Name4     Name1
Name3     Name4     Name1     Name2
Name4     Name1     Name2     Name3
</code></pre>

<p>Like a game of Sudoku, none of the names in each row or column can have a duplicate.</p>

<p>I am not sure how to best achieve this since as mentioned above the length of the list is a variable. Ideally I'd like to create the first list, then have the other 9 list to auto populate. Any suggestions?</p>

<p>EDIT___________________
@Paul Drye, I get the following results with your formula</p>

<pre><code>ColumnB   ColumnC   ColumnD   ColumnE
Name1     Name2     Name3     Name4
Name2     Name3     Name4     Name1
Name3     Name4     Name1     Name1
Name4     Name1     Name1     Name1
</code></pre>

<p>As you can see, the last two columns start showing an issue.</p>
","<p>If you want a formula that works regardless of what surrounds your data, you can get the same result using <code>ROWS</code>, <code>COLUMNS</code>, and <code>MOD</code> along with some absolute/relative ranges.</p>

<p>Formula in cell <code>C2</code> copied down and over.  Probably looks a little better with a named range.  If you want to see how it generates the numbers, remove <code>INDEX</code> and get the counter.</p>

<pre><code>=INDEX($B$2:$B$11,MOD(ROWS($C$2:C2)+COLUMNS($C$2:C2)-1,COUNTA($B$2:$B$11))+1)
</code></pre>

<p><strong>Picture</strong> shows the same result as the other answer</p>

<p><img src=""https://i.stack.imgur.com/J0JPN.png"" alt=""results and formula""></p>
"
"<p>Code finds values from sheets and copies them over to one sheet. If a column is completely empty, it prints ""NO ITEMS"".</p>

<p>I need to make it so, once it is done copying the items over, it <strong>finds any blank cells in column ""B""</strong> <em>(StartSht, ""B"")</em> and from the range of the last occupied cell of ""C"" up, <strong>fills it with the string ""EMPTY""</strong></p>

<p>Any ideas how I would go about doing that?</p>

<p>It does (1) and I need it to do (2)</p>

<p>(1)</p>

<p><img src=""https://i.stack.imgur.com/k4Lw4.png"" alt=""enter image description here""></p>

<p>(2)</p>

<p><img src=""https://i.stack.imgur.com/Cbj0z.png"" alt=""enter image description here""></p>

<pre><code>Set dict = GetValues(hc3.Offset(1, 0))
If dict.count &gt; 0 Then                  
    'add the values to the master list, column 2
    Set d = StartSht.Cells(Rows.count, hc1.Column).End(xlUp).Offset(1, 0)
    d.Resize(dict.count, 1).Value = Application.Transpose(dict.items)
Else
    'if no items are under the HOLDER header
    StartSht.Range(StartSht.Cells(i, 2), StartSht.Cells(GetLastRowInColumn(StartSht, ""C""), 1)) = "" NO ITEMS ""
End If
</code></pre>
","<p>Blank cells are easy to find with the <code>SpecialCells</code> function.  It is the same as using GoTo (or hitting <kbd>F5</kbd>) and choosing <code>Blanks</code>.</p>

<pre><code>StartSheet.Range(""B:B"").SpecialCells(xlCellTypeBlanks).Value = ""EMPTY""
</code></pre>

<p>You can do the same for column C after building the appropriate range.</p>
"
"<p>I'm trying to use the value in cell F2 as the maximum value of a range selection within a larger range of numbers.</p>

<p>I've gotten as far as the below, but am getting a compile error: variable not defined. </p>

<pre><code>Option Explicit

Sub SelectByValue(Rng1 As Range, MinimunValue As Double, MaximumValue As Double)

    Dim MyRange As Range
    Dim Cell As Object

     'Check every cell in the range for matching criteria.
    For Each Cell In Rng1
        If Cell.Value &gt;= MinimunValue And Cell.Value &lt;= MaximumValue Then
            If MyRange Is Nothing Then
                Set MyRange = Range(Cell.Address)
            Else
                Set MyRange = Union(MyRange, Range(Cell.Address))
            End If
        End If
    Next
     'Select the new range of only matching criteria
    MyRange.Select

End Sub


Sub CallSelectByValue()

     'Call the macro and pass all the required variables to it.
     'In the line below, change the Range, Minimum Value, and Maximum Value as needed
    Call SelectByValue(Range(""A2:A41""), 1, Range(F2).Value)

End Sub
</code></pre>
","<p><a href=""http://stackoverflow.com/a/30928154/4288101"">TessellatingHeckler has the better answer</a>, but it's worth noting that you can get away with not using the quotes if you use brackets instead of <code>Range</code>.</p>

<pre><code>Call SelectByValue( [A2:A41], 1, [F2].Value)
</code></pre>

<p>This syntax is generally discouraged because the brackets lead to ambiguous results which can make a mess at run time.</p>
"
"<p>I have found the following code that simulates the MS Word Mail Merge functionality, but exclusively in Excel cells.                        </p>

<p>It was intended to work for a single cell value for each row in a range to be sent to another cell before printing, so that several copies can be printed, each with a different name on it for rationalization, such as with printing time cards to distribute to each employee.  </p>

<p>However, I have not been able to figure out how to apply this to sending a range of three cells (in columns <strong><code>A:C</code></strong> from Employees table) for each row to another range of three cells (<strong><code>X50:X52</code></strong> in <strong><code>Sheet1</code></strong>, instead of just the one cell.  Any ideas?  </p>

<pre><code>Sub Macro1()
   Dim lastRow As Integer '
   Dim r As Integer
   lastRow = Sheets(""Employees"").Cells(Rows.Count, ""A"").End(xlUp).Row

   For r = 1 To lastRow
   Sheets(""Sheet1"").Range(""D1"").Value = Sheets(""Employees"").Range(""A"" &amp; r).Value
   ActiveWindow.SelectedSheets.PrintOutNext r
End Sub
</code></pre>
","<p>You can use <code>Application.Transpose</code> to flip the row of data into a column of data.  Below I also use <code>Resize</code> to get the 3 cells from columns <code>A:C</code>.  <code>Resize</code> is much easier than try to build a range with <code>&amp;</code> and column letters.  It returns a new <code>Range</code> that is 3 columns large instead of the 1 column from before.</p>

<pre><code>Sub Macro1()
   Dim lastRow As Integer '
   Dim r As Integer
   lastRow = Sheets(""Employees"").Cells(Rows.Count, ""A"").End(xlUp).Row

   For r = 1 To lastRow
       Sheets(""Sheet1"").Range(""X50:X52"").Value = _
            Application.Transpose(Sheets(""Employees"").Range(""A"" &amp; r).Resize(, 3).Value)

       ActiveWindow.SelectedSheets.PrintOutNext r
   Next r
End Sub
</code></pre>

<p>Note that when selecting multiple cells with <code>Range</code> and calling <code>.Value</code>, you will get an array of values.  In this case, the array is 1 row by 3 columns.  <code>Application.Transpose</code> converts this data to be 3 rows by 1 column.</p>
"
"<p>I am working on my research and I have to generate more than 91 charts for each sheet and I would like to use macro to do that. </p>

<p>I am still new with macros but I tried to write this one, but it is not working. I would greatly appreciate your help on this issue!</p>

<p>The set of data that I have looks like this</p>

<pre><code>&gt; A1         B1     C1    D1    E1     F1    G1       H1    I1
&gt; 
&gt; 
&gt; Period    Ratio       Period  Ratio       Period  ratio   
&gt; 2000Q1    1.23        2000Q1  0.78        2000Q1  1.07    
&gt; 2000Q2    1.43        2000Q2  1.12        2000Q2  0.76     2000Q3 1.8        
&gt; 2000Q3    1.09        2000Q3  1.21
</code></pre>

<p>(under Columns A &amp; B I have Period and Ratio) - then Column C is empty - then (under column D &amp; E I have Period and Ratio) and so on. </p>

<p>I separated the data set with an empty column.</p>

<p>Please note that the are other rows (I have an update button that I every time I click a new row with (period- ratio) will be added for all the columns)- also the first row with values starts at row 3</p>

<p>I want to create a chart for each set of data (here 3 charts)</p>

<p>The macro I wrote is a follows:</p>

<pre><code>Sub loopChart()
Dim mychart As Chart
Dim c As Integer
Sheets(""analysis"").Select

c = 1
While c &lt;&gt; 0 #I put this condition so that the code will know that I have no more data set

    Set mychart = Charts.Add
    mychart.SetSourceData Source:=Range(cells(3, c)).CurrentRegion, PlotBy:=xlColumns
    c = c + 3
Wend

For Each mychart In Sheets(""class"").ChartObjects
    mychart.ChartType = xlLineMarkers
Next mychart

End Sub
</code></pre>

<p>I am not too sure of what I am doing is correct, but I am facing a trouble with the range. Also I know that this macro will create a new chart-sheet. </p>

<p>how can I create all the charts on the ""analysis"" sheet next to the values?</p>

<p>I would greatly appreciate anyone's help!!</p>
","<p>If you want all of the charts on the <code>analysis</code> <code>Worksheet</code>, you can change the <code>Location</code> when the chart is created.  I also changed the sheet name in the second loop to match the sheet name.  You can add this line of code to the first loop though; the second loop is not necessary.  If you do that, be sure to set a new reference to <code>mychart</code> on the location line.</p>

<pre><code>Sub loopChart()
Dim mychart As Chart
Dim c As Integer
Sheets(""analysis"").Select

c = 1
While c &lt;&gt; 0 #I put this condition so that the code will know that I have no more data set

    Set mychart = Charts.Add
    mychart.SetSourceData Source:=Range(cells(3, c)).CurrentRegion, PlotBy:=xlColumns
    'change location to sheet
    mychart.Location xlLocationAsObject, ""analysis""
    c = c + 3
Wend

For Each mychart In Sheets(""analysis"").ChartObjects
    mychart.ChartType = xlLineMarkers
Next mychart

End Sub
</code></pre>
"
"<p>I'm working on my first VBA function. The goal is to have a function that accepts two integers as inputs, and outputs an array containing all the integers in between the two inputs (end-points included). </p>

<p>Example: If I input 5 and 9, the output should be an array of 5, 6, 7, 8, 9.  </p>

<p>VBA doesn't seem to have any of the objects or functions I'm used to in other languages.  Python has a range() function, but most other languages I know about have list-like types which can be appended to.  How does this work in VBA?</p>

<p>I'm not looking to create an Excel range, but rather an array which contains a range between two values.</p>
","<p><strong>Applies only in the context of Excel</strong> (not sure based on question and tags)</p>

<p>If you want a one-liner that doesn't deal with arrays, you can take advantage of the <code>ROW</code> function and <code>Application.Evaluate</code> within Excel.</p>

<p><strong>Code</strong></p>

<pre><code>Function RangeArr(int_start As Integer, int_end As Integer) As Variant

    RangeArr = Application.Transpose( _
                    Application.Evaluate(""=ROW("" &amp; int_start &amp; "":"" &amp; int_end &amp; "")""))

End Function
</code></pre>

<p><strong>Results</strong></p>

<p><img src=""https://i.stack.imgur.com/F5jPB.png"" alt=""array results""></p>
"
"<p>I'm trying to assign a cell a formula using VBA, but every time I run the code it assign to the cell the result not the formula itself, like when I enter the formula using the excel spreadsheet.</p>

<p>Does anyone know how to display the formula using a macro within a cell and not the formula result.</p>

<p>I'm asking this because I need to insert this line within an existing sheet among other data and then run another macro to keep it updated, and the macro depends on this formula.</p>

<p>The code I'm using</p>

<pre><code>Cells(C, 9).Formula = Application.Index(Plan2.Range(""B2:D10000""), _
Application.Match(Plan1.Range(""B"" &amp; C) &amp; Range(""F"" &amp; C), Plan2.Range(""A2:A10000""), 0), 3)
</code></pre>

<p>As you can see this formula depends on the row that its inserted.</p>
","<p>Your <code>Formula</code> is ultimately being reduced to whatever is returned by <code>Application.Index</code>.  Unless the value being returned there is an actual formula string then you will just get a number as the result and this is set to the  <code>.Formula</code>.</p>

<p>If you want to actually set the formula, you need to create a string in VBA that represents the formula to use.  In this case, that string would look something like:</p>

<pre><code>Cells(C, 9).Formula = ""=INDEX(Plan2!B2:D10000, MATCH(Plan1!B"" &amp; C &amp; ""...""
</code></pre>

<p>where you concatenate in the dynamic parts.  The end result needs to look like a normal formula.  The <code>Application.XXX</code> and <code>Application.WorksheetFunction.XXX</code> functions return actual results, not pieces that can be combined to create a formula.</p>
"
"<p>In response to <a href=""http://stackoverflow.com/q/30985795/4996248"">this</a> question I thought it would be fun to write a VBE macro that would automatically replace lines which look like</p>

<pre><code>DimAll a, b, c, d As Integer
</code></pre>

<p>by</p>

<pre><code>Dim a As Integer, b As Integer, c As Integer, d As Integer
</code></pre>

<p>In my first draft I just want to modify a single selected line. After establishing the appropriate references to get to the VBE object model (see <a href=""http://www.cpearson.com/excel/vbe.aspx"" rel=""nofollow"">http://www.cpearson.com/excel/vbe.aspx</a> ) and playing around a bit I came up with: </p>

<pre><code>Function ExpandDim(codeLine As String) As String
    Dim fragments As Variant
    Dim i As Long, n As Long, myType As String
    Dim last As Variant
    Dim expanded As String

    If UCase(codeLine) Like ""*DIMALL*AS*"" Then
        codeLine = Replace(codeLine, ""dimall"", ""Dim"", , , vbTextCompare)
        fragments = Split(codeLine, "","")
        n = UBound(fragments)
        last = Split(Trim(fragments(n)))
        myType = last(UBound(last))
        For i = 0 To n - 1 'excludes last fragment
            expanded = expanded &amp; IIf(i = 0, """", "","") &amp; fragments(i) &amp; "" As "" &amp; myType
        Next i
        expanded = expanded &amp; IIf(n &gt; 0, "","", """") &amp; fragments(n)
        ExpandDim = expanded
    Else
        ExpandDim = codeLine
    End If
End Function

Sub DimAll()
    Dim myVBE As VBE
    Dim startLine As Long, startCol As Long
    Dim endLine As Long, endCol As Long
    Dim myLine As String
    Set myVBE = Application.VBE
    myVBE.ActiveCodePane.GetSelection startLine, startCol, endLine, endCol
    myLine = myVBE.ActiveCodePane.CodeModule.Lines(startLine, 1)
    Debug.Print ExpandDim(myLine)
    myVBE.ActiveCodePane.CodeModule.ReplaceLine startLine, ExpandDim(myLine)
End Sub
</code></pre>

<p>In another code module I had:</p>

<pre><code>Sub test()
    DimAll a, b, c, d As Integer
    Debug.Print TypeName(a)
    Debug.Print TypeName(b)
    Debug.Print TypeName(c)
    Debug.Print TypeName(d)
End Sub
</code></pre>

<p>This is the weird part. When I highlight the line which begins DimAll a, and invoke my awkwardly named sub DimAll, in the immediate window I see </p>

<pre><code>Dim a As Integer, b As Integer, c As Integer, d As Integer
</code></pre>

<p>which is as expected, but in the code module itself the line is changed to</p>

<pre><code>Dim a, b, c, d As Integer
</code></pre>

<p>DimAll has been replaced by Dim -- but the rest of the line is unmodified. I suspect that the commas are confusing the ReplaceLine method. Any ideas of how to fix this?</p>
","<p>When I run with the debugger, <code>myLine</code> changes value between the two calls.  The <code>DimAll</code> becomes <code>Dim</code> on the second time through.</p>

<p>This is because you are replacing the value of <code>codeLine</code> once you enter the main <code>If</code> conditional inside the <code>ExpandDim Function</code>.</p>

<p>Create a new variable in that function and you should be fine... or pass it <code>ByVal</code> and you're good:</p>

<pre><code>Function ExpandDim(ByVal codeLine As String) As String
</code></pre>
"
"<p><strong>Having difficulty comparing my activecell against a predefined array.</strong></p>

<p>After importing data from another source I want to trim out the columns I don't need</p>

<p>I've trued the array as both undefined, string and variant
And tried <code>activecell / activecell.value &lt;&gt; NeededColumns</code>
No joy :(</p>

<pre><code> Sub Trim()        
    Dim NeededColumns As Variant
        NeededColumns = Array(""APPLICATION NUMBER"", ""DATE"", ""BRAND"", ""CHANNEL"", ""SCHEME"")


    Range(""A1"").Select
    Do Until ActiveCell = """"
        If Application.WorksheetFunction.Match(ActiveCell.Value, NeededColumns, 0) = 0 Then
            ActiveCell.EntireColumn.Delete
        Else
            ActiveCell.Offset(0, 1).Select
        End If
    Loop
End Sub
</code></pre>
","<p>You have fallen victim to the odd behavior of <code>WorksheetFunction.Match</code> when it cannot find a match.  Instead of returning the error, it throws a run time error which gums up the works.</p>

<p>Since the premise of this question is searching for whether or not something is in a list, you are nearly guaranteed to see this issue since you expect to have some items that will not show up.  In the formula version of <code>MATCH</code> you would get <code>#N/A</code> when it does not find a match.  Here, you get a runtime error.  There are two solutions to this:</p>

<ol>
<li>Use the <code>Application.Match</code> version of the function instead of <code>Application.WorksheetFunction.Match</code>.  Unfortunately, Intellisense will not help you here, but it is a valid function.  It has the key difference that it will <strong>return</strong> an error instead of throwing a runtime error.  You can then check this error using <code>IsError</code> like your original idea.</li>
<li>Use an <code>On Error Goto XXX</code> to route the error to somewhere instead of the <code>If</code>.  You can generally assume that an error here means you did not find an entry, and then work around it that way.</li>
</ol>

<p>Given these two choices, I strongly recommend you go with option 1.  That code would look something like:</p>

<pre><code>Sub Trim()
    Dim NeededColumns As Variant
    NeededColumns = Array(""APPLICATION NUMBER"", ""DATE"", ""BRAND"", ""CHANNEL"", ""SCHEME"")


    Range(""A1"").Select
    Do Until ActiveCell = """"
        If IsError(Application.Match(ActiveCell.Value, NeededColumns, 0)) Then
            ActiveCell.EntireColumn.Delete
        Else
            ActiveCell.Offset(0, 1).Select
        End If
    Loop
End Sub
</code></pre>

<p>I have traded your <code>=0</code> condition for a check on <code>IsError(Application.Match(...))</code> this will return <code>True</code> if the column is not found.</p>

<p>Additional reading: <a href=""http://dailydoseofexcel.com/archives/2004/09/24/the-worksheetfunction-method/"" rel=""nofollow"">http://dailydoseofexcel.com/archives/2004/09/24/the-worksheetfunction-method/</a></p>
"
"<p>I have a spreadsheet with many numbers, and I want the cells with the same numbers to be moved to the same row.  Currently, my spreadsheet looks something like this:</p>

<pre><code>*  May     Jun     Jul     Aug     Sep     Oct
* 10584   10589   10584   10584   10589   10589
* 10589   11202   10589   10589   11202   11202
* 11202   9799    11202   11202   11677   11677
*                         11677     
</code></pre>

<p>I would like to have some vba code to organize the data so that cells with the same value are on the same row, so it should look like this:</p>

<pre><code>*  May     Jun     Jul     Aug     Sep     Oct
*         9799
* 10584           10584   10584  
* 10589   10589   10589   10589   10589   10589
* 11202   11202   11202   11202   11202   11202
*                         11677   11677   11677
</code></pre>

<p>With empty cells in the places with no numbers. I tried searching through the forum but I wasn't able to find anything similiar enough.
I would really apreciate any help on this.  Thanks for your time.</p>
","<p>Here is an approach that works on a block of data of arbitrary size.  It works by sorting the columns and then shifting the cells down if they are not equal to the smallest value in the row.</p>

<p>The only real parameter here to adjust is the starting cell: <code>rng_start</code> which is initially set to the <code>ActiveCell</code>.  This code also uses <code>CurrentRegion</code> so the data needs to be a block... or you can redefine those couple of lines.</p>

<p><strong>Code</strong></p>

<pre><code>Sub SortAndPutSameValuesInSameRow()

    'get data ranges
    Dim rng_start As Range
    Set rng_start = ActiveCell

    Dim rng_data As Range
    Set rng_data = rng_start.CurrentRegion
    Set rng_data = Intersect(rng_data, rng_data.Offset(1))

    'sort by column
    Dim rng_col As Range
    For Each rng_col In rng_data.Columns
        rng_col.Sort Key1:=rng_col
    Next

    'iterate through rows and arrange
    Dim rng_row As Range
    For Each rng_row In rng_data.Rows
        Dim rng_cell As Range
        For Each rng_cell In rng_row.Cells
            If rng_cell.Value &lt;&gt; Application.WorksheetFunction.min(rng_row) Then
                rng_cell.Insert xlShiftDown
            End If
        Next

        'break out if cell goes past data
        If Intersect(rng_row, rng_start.CurrentRegion) Is Nothing Then
            Exit For
        End If
    Next
End Sub
</code></pre>

<p><strong>How it works</strong></p>

<p>The main idea here is that once the columns are sorted, you just need to move values down so that only the smallest value is kept in each row. This logic also ensures that all of the same values are in the same row.  Note that if there are duplicate values, you will get a row of matching values and then duplicate values (which would also match if repeated in multiple columns).  Specific comments:</p>

<ul>
<li>The top half of the code is setting things up for the iteration section below.  It grabs the block of data and builds a range that excludes the headers.</li>
<li>With the block of data, it first goes through each column and sorts them in turn.</li>
<li>Once sorted, it goes through each row of the data and checks if the current value is equal to the minimum value in the row.</li>
<li>If so, then that cell can stay put.  If not, the values need to shift down to make a blank cell.</li>
<li>Finally, there is a check to bust out of the loop when needed.  This is a little odd in a <code>For Each</code> loop but is required because the size of the range is changing as it iterates (because of <code>Insert</code>).</li>
</ul>

<p>Since I am using <code>Rows</code> and <code>Columns</code>, this code will work for data anywhere on the sheet and for as many columns as you want.</p>

<p><strong>Pictures of before/after</strong> show results with your data</p>

<p><em>before</em></p>

<p><img src=""https://i.stack.imgur.com/AxJ6j.png"" alt=""before""></p>

<p><em>after</em></p>

<p><img src=""https://i.stack.imgur.com/LSM0W.png"" alt=""enter image description here""></p>
"
"<p>I receive excel workbooks from various customers containing lists of employees with gender and date of birth columns.  They arrive in varying formats. I am creating an excel worksheet that I will add to each of these workbooks which will allow me to apply a series of formulas to the customer data. The problem is that I do not know the location of the date of birth data in advance.</p>

<p>I want a macro to prompt me to select the range for the date of birth values and then place that data range into a cell (F31) on my worksheet so that I can pull it into my other formulas.</p>

<p>The code I created below works, but it does not pull the worksheet tab name along with the range. How can I get the worksheet name along with the cell range?</p>

<pre><code>Sub ChooseDOBRange()
    Dim rng As Range

    Set rng = Application.InputBox(""Select a range"", ""Obtain Range Object"", Type:=8)
    rng.Copy

    Worksheets(""COVER SHEET"").Range(""F31"") = rng.Address    
End Sub 
</code></pre>
","<p>There are two ways to get this depending on whether or not you want the <code>Workbook</code> name to be in the formula also.  I am testing these in the Immediate Window.</p>

<p><strong>Method 1</strong> uses <code>.Address</code> with the <code>External</code> parameter set to <code>True</code></p>

<pre><code>?ActiveCell.Address(,,,True)
</code></pre>

<blockquote>
  <p>[Book2]Sheet1!$A$1</p>
</blockquote>

<p><strong>Method 2</strong> uses the <code>.Address</code> along with the sheet name from <code>Range.Parent.Name</code> where <code>Parent</code> refers to the <code>Worksheet</code> for a <code>Range</code></p>

<pre><code>?""'"" &amp; ActiveCell.Parent.Name &amp; ""'!"" &amp; ActiveCell.Address
</code></pre>

<blockquote>
  <p>'Sheet1'!$A$1</p>
</blockquote>
"
"<p>I want to partially mask names on excel after concatenating:</p>

<p>A1: David Goliath
B1 (output): Dav*******ath</p>

<p>Please help. I need the 1st three and and last 3 characters shown and the rest to be replaced by a special character. Since this formula will be applied on a long list, the length of names would vary.</p>
","<p><strong>Formula</strong></p>

<pre><code>=LEFT(A1,3)&amp;REPT(""*"", LEN(A1)-6)&amp;RIGHT(A1,3)
</code></pre>

<p><strong>Picture</strong></p>

<p><img src=""https://i.stack.imgur.com/5kGrW.png"" alt=""results""></p>

<p><strong>How it works</strong></p>

<p>This formula relies on string manipulation to grab the first 3 characters, last 3 characters, and a string of <code>*</code> in the middle.  This assumes that the entries are at least 6 characters long.  If you want it to work for less than 6, you would need to decide how to hide the middle.</p>

<p>The only real trick is knowing that the number of <code>*</code> you need is 6 less than the length of the string since you are taking 3 characters from the front and back.</p>
"
"<p>I have a chart with two types of graphs. One shows number of items ordered and the second one - damaged items rate for each order. For the first graph I use bar chart, for the second dot chart. The question is how to remove empty/zero values in dot chart? ""Hide empty values"" doesn't work because date column is filled and used for bar chart.</p>

<p>Here is the data:</p>

<p><img src=""https://i.stack.imgur.com/1KI7Q.png"" alt=""enter image description here""></p>

<p>Here is the chart:</p>

<p><img src=""https://i.stack.imgur.com/KtEiX.png"" alt=""enter image description here""></p>
","<p><strong><em>TL;DR</strong> (most likely) you are returning a <code>=""""</code> for a blank cell, you need to return <code>#N/A</code>.</em></p>

<p>There are a couple of ways to resolve this issue depending on how you chart is setup.</p>

<p><strong>Defaults</strong></p>

<p>First, by default, Excel will not plot a cell that is truly empty. If I just create a chart (bar, scatter, line, etc.) and delete a data point, it will be removed from the chart, not set to 0.  This depends on the <code>Hidden and Empty</code> setting which defaults to <code>Gaps</code>.</p>

<p><img src=""https://i.stack.imgur.com/idgc1.png"" alt=""enter image description here""></p>

<p><img src=""https://i.stack.imgur.com/uQSIG.png"" alt=""hidden and empty settings""></p>

<p><strong>What goes wrong</strong></p>

<p>So if you are seeing a data point for a blank cell, it means one of a couple things:</p>

<ul>
<li>The setting was changed for the chart on how to handle <code>Hidden and empty cells</code></li>
<li><strong>The cell is not truly empty</strong>.  This is possible if you have a formula that returns <code>""""</code>.  This will show as a 0 regardless of the <code>Hidden and empty</code> setting because it is not an empty cell.</li>
</ul>

<p><img src=""https://i.stack.imgur.com/iPnF6.png"" alt=""enter image description here""></p>

<p><strong>How to fix</strong></p>

<p>To resolve this issue then requires one of the following changes:</p>

<ul>
<li>Completely delete the cell contents so that it is truly an empty cell.  This assumes that the <code>Hidden and empty cells</code> option is at the default of <code>Gaps</code>.</li>
<li>Have your formula return an <code>#N/A</code> and the chart will hide the data point regardless of any other settings.</li>
</ul>

<p><img src=""https://i.stack.imgur.com/kRleY.png"" alt=""enter image description here""></p>

<ul>
<li>Change the <code>Hidden and empty cells</code> setting to <code>Gaps</code> (instead of <code>Zero</code>).  This will not affect the bar chart.  It will only serve to hide the missing entries on the dot plot.  This only works if the cell is truly empty.</li>
</ul>
"
"<p>I'm Trying to create a Custom Table(Just like click the 'Format as Table' in the excel bar) with PowerShell and Excel ComObject from a CSV </p>

<p>Here's my code...</p>

<pre class=""lang-psh prettyprint-override""><code>$Excel = New-Object -ComObject excel.application 
$Excel.visible = $true
$Excel.sheetsInNewWorkbook = $csvFiles.Count
$workbooks = $excel.Workbooks.Add()
$worksheets = $workbooks.worksheets
$CSVFullPath = C:\temp.csv
$worksheet = $worksheets.Item(1)
$worksheet.Name = ""Temp""

$TxtConnector = (""TEXT;"" + $CSVFullPath)
$CellRef = $worksheet.Range(""A1"")

$Connector = $worksheet.QueryTables.add($TxtConnector,$CellRef)
$worksheet.QueryTables.item($Connector.name).TextFileCommaDelimiter = $True
$worksheet.QueryTables.item($Connector.name).TextFileParseType  = 1
$worksheet.QueryTables.item($Connector.name).Refresh()
$worksheet.UsedRange.EntireColumn.AutoFit()

## So Far So good - CSV Imported ##
## My Problem Starts here... ##

$listObject = $worksheet.ListObjects.Add([Microsoft.Office.Interop.Excel.XlListObjectSourceType]::xlSrcRange, $worksheet.UsedRange, $null),[Microsoft.Office.Interop.Excel.XlYesNoGuess]::xlYes,$null) 

## Then I Received the following error: ##

Exception calling ""Add"" with ""5"" argument(s): ""A table cannot overlap a range that contains a PivotTable report, query
results, protected cells or another table.""
At line:1 char:41
+ $ListObject = $WorkSheet.ListObjects.Add &lt;&lt;&lt;&lt; ([Microsoft.Office.Interop.Excel.XlListObjectSourceType]::xlSrcRange,$R
ange,$null,[Microsoft.Office.Interop.Excel.XlYesNoGuess]::xlYes,$null)
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ComMethodTargetInvocation    
</code></pre>

<p>I'm have been on it for some time and not found a solution.</p>
","<p>Based on your code, you cannot add a <code>ListObject</code> to the <code>Worksheet</code> with an underlying <code>QueryTable</code> still in place.  If you try to do this in normal Excel (non-COM), you will get an error like:</p>

<p><img src=""https://i.stack.imgur.com/Q7vG3.png"" alt=""enter image description here""></p>

<p>If you hit <code>Yes</code> there and record a macro while it does its work, Excel just deletes the <code>QueryTable</code> and adds the <code>ListObject</code>.  Deleting the <code>QueryTable</code> does not affect the underlying data.</p>

<p>In the VBA world, your code would look like this:</p>

<pre class=""lang-vb prettyprint-override""><code>Sub DeleteQueryTableAndAddListObject()

    Dim sht As Worksheet
    Set sht = ActiveSheet

    ''code up here to create a QueryTable

    Dim i As Integer
    For i = sht.QueryTables.Count To 1 Step -1
        sht.QueryTables(i).Delete
    Next i

    sht.ListObjects.Add xlSrcRange, sht.UsedRange, , xlYes

End Sub
</code></pre>

<p>Taking a stab at PowerShell (not my native tongue) you should be able to do:</p>

<pre><code>$worksheet.QueryTables.item($Connector.name).Delete()
</code></pre>

<p>or possibly:</p>

<pre><code>$Connector.Delete()
</code></pre>

<p>since <code>$Connector</code> appears to be a valid reference to the <code>QueryTable</code> object.</p>
"
"<p>I would like to create a bar-chart (or a histogram?) with vertical bars and a numerical x-axis , but I do not know how/where to start. I have MS-Excel and Origin-plot available with me. My intended chart would look like this:</p>

<p><img src=""https://i.imgur.com/7oBkczM.png"" alt=""link for the chart""></p>
","<p>You can more or less get what you want by adding and styling error bars appropriately to a scatter plot.  The error bar is a simple way to force Excel to draw a line under/over the point.</p>

<p><strong>Chart with data and error bars</strong></p>

<p><img src=""https://i.stack.imgur.com/3dpZ1.png"" alt=""chart with error bars""></p>

<p><strong>Couple steps</strong></p>

<ol>
<li>Make an XY scatter chart</li>
<li>Add the error bars and delete the horizontal ones that come up</li>
<li>Set the negative error bar for the points to be equal to the same value that is being plotted</li>
<li>Set the positive error bar to 0 so it does not show</li>
<li>Change the formatting on the error bar to be thicker</li>
<li>Possible hide the initial dot shown so that it is bar only</li>
</ol>

<p>You could take these steps and codify them with some VBA to prevent the tedious nature of doing this multiple times.  Setting error bars is one of the worst activities to have to do continually.</p>

<p>I believe you should also be able to get your desired colors by adding multiple series.  Possibly all the more reason to do this with VBA.</p>
"
"<p>I am creating a spreadsheet that collects data from a site and inserts the data into excel.  For no reason other than a way for me to follow the data as it fills the sheet with information, is there a way to keep focus on the current cell to force the sheet to scroll (as if clicking the down arrow on the scroll bar) along with the data entry? My current code is as follows:</p>

<pre><code> else if (driver.FindElements(By.XPath(""//table[7]/tbody  /tr/td[11]"")).Count &gt; 0)
            {
                 activesheet.Range[""D"" + n].Value = driver.FindElement(By.XPath(""//table[7]/tbody/tr/td[11]"")).Text;                        
                 activesheet.Range[""A"" + n].Interior.Color = System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.LightGreen);
                 activesheet.Range[""B"" + n].Interior.Color = System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.LightGreen);
                 activesheet.Range[""C"" + n].Interior.Color = System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.LightGreen);
                 activesheet.Range[""D"" + n].Interior.Color = System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.LightGreen);
                 activesheet.Range[""E"" + n].Interior.Color = System.Drawing.ColorTranslator.ToOle(System.Drawing.Color.LightGreen);
            }
</code></pre>

<p>I am sure it's very simple, I just have not been able to find this information/command, nor am I sure I am wording my searches correctly or if one even exists.</p>
","<p>Use the <code>ScrollRow</code> property of the <code>ActiveWindow</code>.  If you just want to ""hit the down arrow"" you can increment.</p>

<pre><code>//app is a valid reference to a Microsoft.Office.Interop.Excel.Application instance
app.ActiveWindow.ScrollRow++;
</code></pre>

<p>Reference: <a href=""https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.window.scrollrow.aspx"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.window.scrollrow.aspx</a></p>
"
"<p>I have 6 columns of dates, and I need to make sure that the dates ascend in value as you move from left to right. </p>

<p>This is what I have so far, but it returns TRUE when it shouldn't.</p>

<p><code>=IF(K22&gt;=J22&gt;=I22&gt;=H22&gt;=G22&gt;=F22,TRUE,FALSE)</code></p>
","<p>If you can live with a formula that is under each cell, you can get this by comparing the current value to the <code>MAX</code> of the previous values.  You can then add a final cell at the end to summarize and give the single answer.</p>

<p><strong>Picture of ranges and result</strong></p>

<p><img src=""https://i.stack.imgur.com/KUL6l.png"" alt=""picture of ranges""></p>

<p><strong>Formulas</strong> in cell <code>C3</code> is a normal formula copied to the right under the numbers.  This formula uses a mixed absolute/relative reference to get the <code>cells to the left of the current one</code>.  <code>I3</code> is the summary cell which is just an <code>AND</code> on the rest of the cells.</p>

<pre><code>[C3] = IF(ISBLANK(C2),TRUE,C2&gt;MAX($B$2:B2))
[I3] = AND(C3:G3)
</code></pre>

<p>As it sits, this one allows for a blank to not affect the result.  <code>MAX</code> ignores the blank and the formula returns a <code>TRUE</code> for it so as to not affect the summary cell.</p>

<p>Here is the same result in the failing case:</p>

<p><img src=""https://i.stack.imgur.com/a7arn.png"" alt=""picture with FALSE""></p>

<p>The one upside to the per-cell formula is that it could easily be used for conditional formatting so that it is apparent which cells are out of order.</p>
"
"<p>I am trying to compare data from one sheet to another. Address and its ID.
Both sheets have Address and ID. ID can be repetitive.</p>

<pre><code>Sheet 1                       Sheet 2
Address           ID           Address       ID
23                 1              22          1 
45                 1              45          1 
23                 2              23          2
45                 2              45          3
</code></pre>

<p>I want to check whether the data address &amp; ID on sheet 1 appear on Sheet 2 thus making a new row with return Yes or No on sheet 1 for every column. </p>
","<p>This can be done very quickly with an array formula.</p>

<p><strong>Picture of ranges and result</strong> shows the data on the same sheet so that it is easier to see what is going on.  Pretend <code>Sheet1</code> is on the left and <code>Sheet2</code> is on the right.</p>

<p><img src=""https://i.stack.imgur.com/O3GRN.png"" alt=""ranges""></p>

<p><strong>Formula</strong> in cell <code>D3</code> is an array formula (enter with <kbd>CTRL+SHIFT+ENTER</kbd>) and then copied down to fill.</p>

<pre><code>=(B3=$F$3:$F$6)*(C3=$G$3:$G$6)
</code></pre>

<p>This formula will simple return a <code>0  or 1</code> for <code>no match/match</code>.  You can wrap it in an <code>IF</code> if you want text instead.  It is simply checking that the relevant values match for both columns in both ""sheets"".</p>
"
"<p>I'm trying to add the date and time of the last time a row was modified to a specific column of that row with the following VBA Script:</p>

<pre><code>Private Sub Worksheet_Change(ByVal Target As Excel.Range)
    ThisRow = Target.Row
    If Target.Row &gt; 1 Then Range(""K"" &amp; ThisRow).Value = Now()
End Sub
</code></pre>

<p>But it keeps throwing the following error:</p>

<blockquote>
  <p>Run-time error '-2147417848 (80010108)':  </p>
  
  <p>Method 'Value' of object 'Range' failed  </p>
</blockquote>

<p>Can anyone explain why this is happening?</p>
","<p>You are creating an infinite loop by changing a value inside a <code>Worksheet_Change</code> event without disabling events first.  When I do something similar, I get a range of errors from <code>Out of stack space</code> first to <code>Method Range failed...</code>.</p>

<p>Do this instead:</p>

<pre><code>Private Sub Worksheet_Change(ByVal Target As Range)
    Application.EnableEvents = False

    ThisRow = Target.Row
    If Target.Row &gt; 1 Then Range(""K"" &amp; ThisRow).Value = Now()

    Application.EnableEvents = True
End Sub
</code></pre>

<p>Related post: <a href=""http://stackoverflow.com/questions/13860894/ms-excel-crashes-when-vba-code-runs/13861640#13861640"">MS Excel crashes when vba code runs</a></p>
"
"<p>I am using the below code to enable a user to drag and drop a label.</p>

<p>The code works fine - but I am looking for a way of 
1)simplifying the code when dealing with several labels and 
2)give the user the option to create a new label which has the same properties i.e drag/drop.</p>

<p>As it stands, the code specifically refers to specific labels i.e Label1 etc, I have to copy the code again and again to refer to all the labels I want (50+)</p>

<p>So essentially is there a way of having my code to automatically work for all labels, both existing and newly created?</p>

<pre><code>Private x_offset%, y_offset%
Private Sub Label1_MouseDown(ByVal Button As Integer, ByVal Shift As    Integer, _
ByVal X As Single, ByVal Y As Single)

If Button = XlMouseButton.xlPrimaryButton Then
 x_offset = X
 y_offset = Y 
End If

End Sub

Private Sub Label1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, _
ByVal X As Single, ByVal Y As Single)

If Button = XlMouseButton.xlPrimaryButton Then
Label1.Left = Label1.Left + X - x_offset
Label1.Top = Label1.Top + Y - y_offset
End If

End Sub
</code></pre>

<p>Thank you</p>
","<p>A little late on the response, but here is how this is done.  The idea is that you need to create a class module which can handle the events for the <code>Label</code>.  Once you have the class in place to handle the event, you need to wire up the new/existing <code>Labels</code> to go through the class.  This is commonly done by creating a <code>Collection</code> which holds all your class objects.  Other than that, you just need to create a class object for each label (new or existing).  The following pieces are needed:</p>

<ul>
<li>UserForm1 with its code behind</li>
<li>LabelHolder class module</li>
</ul>

<p><strong>LabelHolder</strong> class module contains the code for an ideal ""Label Holder"".  This is a simple class which holds a reference to a <code>MSForms.Label</code> and handles each one's events.  Note that I have called the object <code>Label1</code> so that I could lazily copy your code.  This <code>Label1</code> has <strong>nothing to do</strong> with the <code>Label1</code> on the <code>UserForm</code>; they have different scopes and are independent.</p>

<pre><code>'class module code
Public WithEvents Label1 As MSForms.Label
Private x_offset%, y_offset%

Private Sub Label1_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, _
    ByVal X As Single, ByVal Y As Single)

    If Button = XlMouseButton.xlPrimaryButton Then
        x_offset = X
        y_offset = Y
    End If

End Sub

Private Sub Label1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, _
    ByVal X As Single, ByVal Y As Single)

    If Button = XlMouseButton.xlPrimaryButton Then
        Label1.Left = Label1.Left + X - x_offset
        Label1.Top = Label1.Top + Y - y_offset
    End If

End Sub
</code></pre>

<p><strong>UserForm1 code behind</strong> shows the event for the button which creates a new <code>Label</code> and adds it to the <code>Collection</code>.  It also stores the <code>Collection</code> which ensures that the class objects have a global scope and are not garbage collected early.  There is also an <code>Initialize</code> event which shows how to add an existing <code>Label</code> to the fold.</p>

<pre><code>'UserForm1 code behind
Dim labels As Collection

Private Sub CommandButton1_Click()

    If labels Is Nothing Then
        Set labels = New Collection
    End If

    Dim lbl As MSForms.Label
    Set lbl = Frame1.Controls.Add(""Forms.Label.1"")

    lbl.Caption = ""testing""

    Dim holder As New LabelHolder
    Set holder.Label1 = lbl

    labels.Add holder

End Sub

Private Sub UserForm_Initialize()

    If labels Is Nothing Then
        Set labels = New Collection
    End If

    Dim holder As New LabelHolder
    Set holder.Label1 = Label1

    labels.Add holder

End Sub
</code></pre>

<p>Finally here is an image of the <code>UserForm1</code> which has default names for all the controls.</p>

<p><img src=""https://i.stack.imgur.com/50IWt.png"" alt=""image of user form""></p>

<p>Same form after clicking the button and dragging things around:</p>

<p><img src=""https://i.stack.imgur.com/a3rqM.png"" alt=""picture after some work""></p>

<p>All of this code shows how to connect a class module to dynamically created and original components on the User Form.  It does not address how to create a new <code>Label</code> with the drag/drop, but it is possible.  You would put that code in the class module and ensure that you have enough references back to the User Form in order to access the properties you need there.</p>
"
"<p>The following code won't build.</p>

<pre><code>            var Date = (Excel.PivotField)pivotTable.PivotFields(""Date"");
            Date.Orientation = Excel.XlPivotFieldOrientation.xlColumnField;
            Date.Position = 1;
            Date.DataRange.Cells[1].Group(true, true, Type.Missing, GroupParam);
</code></pre>

<p><code>Group</code> is marked as causing an error. The error message is <code>'object' does not contain a definition for 'Group' and no extension method 'Group' accepting a first argument of type 'object' could be found (are you missing a using directive or an assembly reference?)</code></p>

<p>How can I fix this error?</p>

<p>I am using VS 2012 together with VSTO and add-in express</p>
","<p>You should probably declare intermediate variables if you are experiencing compile issues.  It fairly apparent from testing that the <code>Group</code> method exists and should be accessible by your code.  Give the compiler some help and declare the variable:</p>

<p>The extreme version of this philosophy worked fine for me using <code>Group</code>:</p>

<pre><code>private void button2_Click(object sender, EventArgs e)
{

    Excel.Worksheet sht = app.ActiveSheet;
    Excel.PivotTable pt = sht.PivotTables(1);
    Excel.PivotField pf = pt.PivotFields(""DATE"");

    Excel.Range rng = pf.DataRange;

    Excel.Range cell = rng.Cells[1];
    cell.Group(true, true, Type.Missing, new bool[] { false, false, false, false, true, true, false });
}
</code></pre>
"
"<p>so I have been trying to add a chart object to an Excel file using IronPython and I keep getting an error whenever I call ws.ChartObjects. For some reason it tells me that its a DispCallable and that it has no Add property. </p>

<pre><code>clr.AddReferenceByName('Microsoft.Office.Interop.Excel, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c')
from Microsoft.Office.Interop import Excel

System.Threading.Thread.CurrentThread.CurrentCulture = System.Globalization.CultureInfo(""en-US"")
from System.Runtime.InteropServices import Marshal


def SetUp(xlApp):
    # supress updates and warning pop ups
    xlApp.Visible = False
    xlApp.DisplayAlerts = False
    xlApp.ScreenUpdating = False
    return xlApp

def ExitExcel(filePath, xlApp, wb, ws):
    # clean up before exiting excel, if any COM object remains
    # unreleased then excel crashes on open following time
    def CleanUp(_list):
        if isinstance(_list, list):
            for i in _list:
                Marshal.ReleaseComObject(i)
        else:
            Marshal.ReleaseComObject(_list)
        return None

    wb.SaveAs(str(filePath))
    xlApp.ActiveWorkbook.Close(False)
    xlApp.ScreenUpdating = True
    CleanUp([ws,wb,xlApp])
    return None

def GetWidthHeight(origin, extent, ws):
    left = ws.Cells(bb.xlRange(cellRange)[1], bb.xlRange(cellRange)[0]).Left
    top = ws.Cells(bb.xlRange(cellRange)[1], bb.xlRange(cellRange)[0]).Top
    width = ws.Range[origin, extent].Width
    height = ws.Range[origin, extent].Height
    return [left, top, width, height]

if runMe:
    message = None
    try:
        xlApp = SetUp(Excel.ApplicationClass())
        errorReport = None
        xlApp.Workbooks.open(str(filePath))
        wb = xlApp.ActiveWorkbook
        ws = xlApp.Sheets(sheetName)
        # i have no clue why ws.ChartObjects.Count throws an error all the time
        origin = ws.Cells(bb.xlRange(cellRange)[1], bb.xlRange(cellRange)[0])
        extent = ws.Cells(bb.xlRange(cellRange)[3], bb.xlRange(cellRange)[2])
        left = GetWidthHeight(origin, extent, ws)[0]
        top = GetWidthHeight(origin, extent, ws)[1]
        width = GetWidthHeight(origin, extent, ws)[2]
        height = GetWidthHeight(origin, extent, ws)[3]
        xlChartObject = ws.ChartObjects.Add(int(left), int(top), int(width), int(height))
        Marshal.ReleaseComObject(extent)
        Marshal.ReleaseComObject(origin)
        ExitExcel(filePath, xlApp, wb, ws)
    except:
        # if error accurs anywhere in the process catch it
        import traceback
        errorReport = traceback.format_exc()
</code></pre>

<p>My problem is with calling ws.ChartObjects.Add() which throws an exception 'DispCallable' object has no attribute 'Add'. How do i go around this? What is wrong? </p>
","<p>Based on a <a href=""http://stackoverflow.com/questions/14621224/cant-get-excel-chartobjects-count"">similar issue</a> indicating that <code>ChartObjects</code> is a function you should use </p>

<pre><code>ChartObjects().Add(...)
</code></pre>
"
"<p>I have a workbook that has stock data pulled in using the webservice function and I refresh it using Alt-Ctrl-F9. I am trying to create a macro that will do the same function as Alt-Ctrl-F9 but I haven't had any luck. I have tried recording myself pressing those buttons, I've tried </p>

<pre><code>Activeworkbook.RefreshAll  
DoEvents
</code></pre>

<p>and I have also tried</p>

<pre><code>ActiveSheet.Calculate
</code></pre>

<p>So far, I am having no luck...</p>
","<p>Use </p>

<pre><code>Application.CalculateFull
</code></pre>

<p>or</p>

<pre><code>Application.CalculateFullRebuild
</code></pre>

<p>The former is the one that is used if you record a macro while hitting <kbd>CTRL+ALT+F9</kbd>.  The latter is a more thorough version which rebuilds the calculation tree.  See <a href=""https://msdn.microsoft.com/en-us/library/office/ff822609.aspx"" rel=""nofollow"">CalculateFullRebuild </a> and <a href=""https://msdn.microsoft.com/EN-US/library/office/ff194064.aspx"" rel=""nofollow"">CalculateFull</a> at MS support for the full story.</p>
"
"<p>Title, basically. I have charts that are moving (even when ""Don't move or size with cells"" is checked) whenever I filter my data. I want to lock those charts to specific rows so that when those rows are filtered out, so are the charts. Thanks!</p>
","<p><code>Don't move or size with cells</code> generally works as advertised.  It locks the chart to a fixed <code>Top/Left</code> position and does not allow the chart to be affected by what's going on in the underlying Worksheet.  </p>

<p>If you want it to be hidden when you filter (this is <code>size with cells</code> part), then you need to use <code>Move and size with cells</code>.  That is the only option that will hide the chart when the rows are filtered.</p>

<p>Unfortunately you cannot have this one both ways.</p>
"
"<p>I am extracting text between parens in the active window title bar. That part is working great (thanks to some help I received here previously!). Now I want to create two separate macros - one that returns only the first name, and the other that returns only the last name. </p>

<p>My active window title bar looks something like this:</p>

<p>some text to the left (HENDERSON,TOM) some text to the right
(there is no space after the comma)</p>

<p>The last name macro works perfectly. It looks like this:</p>

<pre><code>Sub a1LastName()
    'Extract last name of patient from title bar (between parens)
    Dim strPatientName As String
    Dim OpenPosition As Integer '(open paren marker)
    Dim closeposition As Integer '(close paren marker)
    OpenPosition = InStr(ActiveDocument.ActiveWindow.Caption, ""("")
    closeposition = InStr(ActiveDocument.ActiveWindow.Caption, "")"")
    strPatientName = Mid(ActiveDocument.ActiveWindow.Caption, _
        OpenPosition + 1, closeposition - OpenPosition - 1)
    Dim c As Long
    c = InStr(strPatientName, "","")
    strPatientName = Left(strPatientName, c - 1)
    Selection.TypeText strPatientName
End Sub
</code></pre>

<p>The second macro is identical to the first, except that the second-to-last line of code has a ""Right"" instead of a ""Left"" instruction:</p>

<pre><code>Sub a1FirstName()
    'Extract first name of patient from title bar (between parens)
    Dim strPatientName As String
    Dim OpenPosition As Integer '(open paren marker)
    Dim closeposition As Integer '(close paren marker)
    OpenPosition = InStr(ActiveDocument.ActiveWindow.Caption, ""("")
    closeposition = InStr(ActiveDocument.ActiveWindow.Caption, "")"")
    strPatientName = Mid(ActiveDocument.ActiveWindow.Caption, _
        OpenPosition + 1, closeposition - OpenPosition - 1)
    Dim c As Long
    c = InStr(strPatientName, "","")
    strPatientName = Right(strPatientName, c - 1)
    Selection.TypeText strPatientName
End Sub
</code></pre>

<p>Here's my problem: The ""first name"" macro always returns the last name minus the first four characters, followed by the first name, instead of simply the first name.</p>

<p>The only examples I'm able to find anywhere in Google land are specifically for Excel. I have combined through my VBA manuals, and they all give similar examples as I have used for extracting the text to the right of a character.</p>

<p>What am I doing wrong?</p>
","<p>Seems like everyone has keyed in on <code>Split</code> to get the first/second part of the name.  You can also use <code>Split</code> to get rid of the parentheses.  This works if you know that you will only (and always) have a single <code>(</code> and <code>)</code>.</p>

<p><strong>Code</strong> gives the main idea.  You can use <code>Split</code> to get the part of the <code>String</code> which does not include the <code>(</code> or <code>)</code> and then do it again to get either side of the <code>,</code>.</p>

<pre><code>Sub t()

    Dim str As String
    str = ""(Wall,Byron)""

    Dim name_first As String
    Dim name_last As String

    'two splits total
    name_last = Split(Split(str, ""("")(1), "","")(0)
    name_first = Split(Split(str, "")"")(0), "","")(1)

    'three split option, same code to remove parentheses
    name_last = Split(Split(Split(str, ""("")(1), "")"")(0), "","")(0)
    name_first = Split(Split(Split(str, ""("")(1), "")"")(0), "","")(1)


End Sub
</code></pre>

<p>The code above presents a <code>two Split</code> and a <code>three Split</code> option.  The main difference is that the three Split variety uses the same code to strip off the parentheses, and the only change is which side of the <code>,</code> to grab.  The two Split options take advantage of the fact that splitting on a comma removes one the parentheses for free.  The indices there are a little more complicated.</p>
"
"<p>This is the code which I used to copy data from multiple sheets to single sheet.
I want to know if there is any way by which I can copy the data into ""Report"" sheet starting from 3rd Column, i.e, the data should be pasted into sheet from 3rd column onwards.</p>

<pre><code>Sub AppendDataAfterLastColumn()
Dim sh As Worksheet
Dim DestSh As Worksheet
Dim Last As Variant
Dim CopyRng As Range



With Application
    .ScreenUpdating = False
    .EnableEvents = False
End With

' Delete the summary worksheet if it exists.
Application.DisplayAlerts = False
On Error Resume Next
ActiveWorkbook.Worksheets(""Report"").Delete
On Error GoTo 0
Application.DisplayAlerts = True

' Add a worksheet with the name ""Report""
Set DestSh = ActiveWorkbook.Worksheets.Add
DestSh.Name = ""Report""

' Loop through all worksheets and copy the data to the
' summary worksheet.
For Each sh In ActiveWorkbook.Worksheets
    If sh.Name &lt;&gt; DestSh.Name Then
  lastcol = DestSh.Cells(1, DestSh.Columns.Count).End(xlToLeft).Column
        ' Find the last column with data on the summary
        ' worksheet.
        Last = lastcol
  lastCol3 = sh.Cells(1, sh.Columns.Count).End(xlToLeft).Column
        ' Fill in the columns that you want to copy.
        Set CopyRng = sh.Range(sh.Cells(1, 2), sh.Cells(15, lastCol3))

        ' Test to see whether there enough rows in the summary
        ' worksheet to copy all the data.
        If Last + CopyRng.Columns.Count &gt; DestSh.Columns.Count Then
            MsgBox ""There are not enough columns in "" &amp; _
               ""the summary worksheet.""
            GoTo ExitTheSub
        End If

        ' This statement copies values, formats, and the column width.
        CopyRng.Copy
        With DestSh.Cells(1, Last + 1)
            .PasteSpecial 8    ' Column width
            .PasteSpecial xlPasteValues

           '.PasteSpecial xlPasteFormats
            Application.CutCopyMode = False
        End With

    End If
Next

ExitTheSub:

Application.Goto DestSh.Cells(1)

With Application
    .ScreenUpdating = True
    .EnableEvents = True
End With
End Sub
</code></pre>

<p>Data sheet 1 from comments:</p>

<p><img src=""https://i.stack.imgur.com/Szskq.png"" alt=""enter image description here""></p>

<p>Data sheet 2 from comments:</p>

<p><img src=""https://i.stack.imgur.com/RYlaf.png"" alt=""enter image description here""></p>

<p>Expected output from comments:</p>

<p><img src=""https://i.stack.imgur.com/3zp3c.png"" alt=""enter image description here""></p>
","<p>This sort of copy can be done easily with <code>Copy</code>.  In order to pick the output <code>Range</code> for the paste part, you can use an <code>Application.InputBox</code> with a <code>Type:=8</code> parameter.  This prompts Excel to open the <code>Range</code> selection dialog which works well.</p>

<p>Once you know those two pieces, the only difficulty is building the <code>Ranges</code>.  This is not difficult, but <em>is</em> specific to the context, existing data on the sheets, and degree of robustness.  For the example below, I am using <code>CurrentRegion</code> to get the block of data (same as hitting <kbd>CTRL+A</kbd>) and then <code>Intersect</code> to only get the desired columns.  You can also make use of <code>UsedRange</code> and <code>End</code> to build ranges.</p>

<p><strong>Picture of ranges</strong> shows the different sheets for input and the final sheet for output.  The sheet to paste into <code>c</code> is empty for now.</p>

<p><img src=""https://i.stack.imgur.com/o5MbZ.png"" alt=""data and empty sheet""></p>

<p><strong>Code</strong> does the work to get the two ranges to copy and then prompts for an output location.  From there, it pastes the resulting <code>Ranges</code> into the desired location.  There is an <code>Offset</code> to ensure that the 2nd range does not overlap the first.</p>

<pre><code>Sub CopyFromTwoRanges()

    Dim rng_set1 As Range
    Dim rng_set2 As Range

    Dim rng_output As Range

    'build the ranges
    Set rng_set1 = Intersect(Sheets(""a"").Range(""C:F""), _
        Sheets(""a"").Range(""C1"").CurrentRegion)

    Set rng_set2 = Intersect(Sheets(""b"").Range(""C:F""), _
        Sheets(""b"").Range(""C1"").CurrentRegion)

    'prompt for cell
    Set rng_output = Application.InputBox(""Pick the range"", Type:=8)

    'ensure a single cell only
    Set rng_output = rng_output.Cells(1, 1)

    'paste the ranges
    rng_set1.Copy rng_output
    rng_set2.Copy rng_output.Offset(, rng_set1.Columns.Count)

End Sub
</code></pre>

<p><strong>Result</strong> shows the prompt with cell selected and then the output.</p>

<p><img src=""https://i.stack.imgur.com/3JFJx.png"" alt=""enter image description here""></p>

<p><img src=""https://i.stack.imgur.com/UKkEh.png"" alt=""enter image description here""></p>
"
"<p>What I want to do: Filter on an array, then copy the filtered data onto a different workbook. Then copy that data that was just pasted onto another worksheet in the same workbook, but this time below existing data.</p>

<p>My thinking: The code I used below was used to help me copy and paste from one workbook to another workbook and worked perfectly, </p>

<pre><code>wb.Sheets(""2014 Current Week"").Range(""C2:CC10000"").Copy nwb.Sheets(""2014 YTD"").Range(""C"" &amp; Rows.Count).End(xlUp).Offset(1, 0) 
</code></pre>

<p>but it seems it does not work the same way if I want to copy in the same workbook. Any help would be appreciated. THANKS!</p>

<pre><code>Dim wb as workbook
Dim strs As String
Dim str As String
Dim nwb as workbook


Set wb = ThisWorkbook

strs = wb.Sheets(""Macros"").Range(""H5"") 'the 2014 address can be found in full in cell H5 in the Macros tab

set nwb = Workbooks.Open(strs) 'address of new workbook and opens it

With ActiveSheet

.AutofilterMode = False
'Filter this and that here'

End With



 nwb.Sheets(""ALL DATA"").Range(""A1:CA100000"").Copy wb.Sheets(""2014 Current Week"").Range(""C"" &amp; Rows.Count).End(xlUp) 
'this one works, and copies exactly as I want into the 2014 Current Week tab

 wb.Sheets(""2014 Current Week"").Range(""C2:CC10000"").Copy wb.Sheets(""2014 YTD"").Range(""C"" &amp; Rows.Count).End(xlUp).Offset(1, 0) 
'this one doesn't work, and does not copy or paste at all from that 2014 Current Week into the 2014 YTD tab of the same workbook
</code></pre>
","<p>Your code looks good and should not have any issues.  Since it seems to not be working, you need to look at the actual <code>Worksheets</code> and data involved.</p>

<p>You are using <code>End</code> to find the last row of data.  Given this, it is worth testing this yourself.  Go to the last row of the <code>Worksheet</code> in column <code>C</code> and hit <kbd>CTRL + UP</kbd>.  This will show you where the data is going to be pasted.</p>

<p>Based on your description this last row is the issue.  Since there was some stray data that was affecting <code>End</code>.</p>
"
"<p>I'm currently having an unexpected issue with my code. It's suppose to update two data series of a chart object dynamically. Recently I've added another series to the collection(a total of 3 series now). The data series update properly but the problem is that the formatting for the 3 series now swap around between each other every time an update occurs. Here is my code below where the updating occurs:</p>

<pre><code>Dim WrkSheet As String
WrkSheet = Application.Worksheets(X).Name

If Background &gt; 0 Then
    'Update the background data series
    Application.Worksheets(X).ChartObjects(""Main Chart"").Chart.SeriesCollection(2).Formula = _
    ""=SERIES(""""Background"""",('"" &amp; WrkSheet &amp; ""'!$J$32:$J$"" &amp; (32 + Background - 1) &amp; "",'"" &amp; WrkSheet &amp; ""'!$J$"" &amp; BackgroundStart2 &amp; "":$J$"" &amp; (BackgroundStart2 + Background - 1) &amp; ""),"" _
    &amp; ""('"" &amp; WrkSheet &amp; ""'!$K$32:$K$"" &amp; (32 + Background - 1) &amp; "",'"" &amp; WrkSheet &amp; ""'!$K$"" &amp; BackgroundStart2 &amp; "":$K$"" &amp; (BackgroundStart2 + Background - 1) &amp; ""),2)""
Else
    'Make the application not graph background in this scenario
End If

'Update the Peak data series
Application.Worksheets(X).ChartObjects(""Main Chart"").Chart.SeriesCollection(1).Formula = _
""=SERIES(""""Peak"""",'"" &amp; WrkSheet &amp; ""'!$J$"" &amp; (PeakStart1) &amp; "":$J$"" &amp; PeakEnd1 &amp; "",'"" &amp; WrkSheet &amp; ""'!$K$"" &amp; PeakStart1 &amp; "":$K$"" &amp; PeakEnd1 &amp; "",1)""

'Update the peak background data series
Application.Worksheets(X).ChartObjects(""Main Chart"").Chart.SeriesCollection(3).Formula = _
""=SERIES(""""Step Background"""",'"" &amp; WrkSheet &amp; ""'!$J$"" &amp; (PeakStart1) &amp; "":$J$"" &amp; PeakEnd1 &amp; "",'"" &amp; WrkSheet &amp; ""'!$O$"" &amp; PeakStart1 &amp; "":$O$"" &amp; PeakEnd1 &amp; "",1)""
</code></pre>

<p>Once this code completes, each of the 3 series collection objects update correctly but the associated formatting for each changes. I believe that the series collection may be deleted and recreated removing the formatting, but I'm unsure why this would be the case. Any help would be great.</p>
","<p>The final parameter of the <code>SERIES</code> call is the index order. You have two entries with a 1 and the first one has a 2. They are probably displacing each other as you go. You should number those in order (same order as their spot in the <code>SeriesCollection</code>).</p>

<p><strong>Code</strong> shows changing the last formula which appears to be the errant one.</p>

<pre><code>""=SERIES(""""Step Background"""",'"" &amp; WrkSheet &amp; ""'!$J$"" &amp; (PeakStart1) &amp; "":$J$"" &amp; PeakEnd1 &amp; "",'"" &amp; WrkSheet &amp; ""'!$O$"" &amp; PeakStart1 &amp; "":$O$"" &amp; PeakEnd1 &amp; "",3)""
</code></pre>

<p>Note that I changed the last row from a <code>1</code> to a <code>3</code> to match the <code>SeriesCollection(3)</code></p>

<p>Excellent reference on the <code>SERIES</code> formula.  <a href=""http://peltiertech.com/Excel/ChartsHowTo/ChartSeriesFormula.html"" rel=""nofollow"">http://peltiertech.com/Excel/ChartsHowTo/ChartSeriesFormula.html</a></p>
"
"<p>So the code I have below attempts to find WIP in column H. If we find WIP: copy 3 cells and make 10 replicas of them in the next column either in the same row or the next available row. </p>

<p>For some reason the code only runs the loop successfully for the first ""WIP"" value and then gives a code interruption error. Can someone see why this keeps happening? </p>

<p>Thank you, Ori </p>

<p>Sub Step1_update()</p>

<p>Dim dblSKU As Double
Dim strDesc As String
Dim strType As String
Dim BrowFin As Integer
Dim Browfin1 As Integer
Dim Counter As Integer
Dim Trowfin As Integer</p>

<p>Counter = 0</p>

<p>Worksheets(""Final"").Activate</p>

<p>Trowfin = 5
BrowFin = ActiveSheet.Range(""A"" &amp; Rows.Count).End(xlUp).Row</p>

<pre><code>'loop 1
Do While Trowfin &lt; BrowFin

    'If 1 (set the 3 values)
    If Range(""H"" &amp; Trowfin).Value = Range(""H3"").Value Then

         dblSKU = Range(""F"" &amp; Trowfin).Value
         strDesc = Range(""G"" &amp; Trowfin).Value
         strType = Range(""H"" &amp; Trowfin).Value

         'Find the last used row in Col J
         Browfin1 = (ActiveSheet.Range(""J"" &amp; Rows.Count).End(xlUp).Row)

         Counter = 0
         'paste values 15 times
         Do While Counter &lt; 15

            'If 2
            If Browfin1 &gt; (Trowfin + Counter) Then

                   Range(""J"" &amp; Browfin1).Value = dblSKU
                   Range(""K"" &amp; Browfin1).Value = strDesc
                   Range(""L"" &amp; Browfin1).Value = strType


            ElseIf Browfin1 &lt; (Trowfin + Counter) Then

                   Range(""J"" &amp; (Trowfin + Counter)).Value = dblSKU
                   Range(""K"" &amp; (Trowfin + Counter)).Value = strDesc
                   Range(""L"" &amp; (Trowfin + Counter)).Value = strType

            Else

                   Range(""J"" &amp; (Trowfin + Counter)).Value = dblSKU
                   Range(""K"" &amp; (Trowfin + Counter)).Value = strDesc
                   Range(""L"" &amp; (Trowfin + Counter)).Value = strType

            End If

        'Loop to paste the WIP 15 times
        Loop

             Trowfin = Trowfin + 1
             Counter = 0

    'If cell (H...) is not a WIP
    Else

        Trowfin = Trowfin + 1

    'If 1
    End If



'loop 1
Loop
</code></pre>

<p>End Sub</p>
","<p>Your previous code looked like:</p>

<pre><code>  Else
    Range(""J"" &amp; (Trowfin + Counter)).Value = dblSKU
    Range(""K"" &amp; (Trowfin + Counter)).Value = strDesc
    Range(""L"" &amp; (Trowfin + Counter)).Value = strType

    Counter = Counter + 1
  'If 2
  End If
Loop
</code></pre>

<p>You should do this instead:</p>

<pre><code>  Else
    Range(""J"" &amp; (Trowfin + Counter)).Value = dblSKU
    Range(""K"" &amp; (Trowfin + Counter)).Value = strDesc
    Range(""L"" &amp; (Trowfin + Counter)).Value = strType

  'If 2
  End If
  Counter = Counter + 1
Loop
</code></pre>

<p>Your current code has the increment inside the <code>Else</code> which means there is a chance that it will not be hit when the loop executes.  If this happens, it your loop will go on infinitely, crashing Excel or causing the code interruption.</p>

<p>If you want to loop based on a counter, you need to ensure that the counter will reach the exit condition in a non-infinite length of time.</p>
"
"<p>I have the below code that based on what's entered in K2 it filters my pivot table based on that.  I keep getting an error with a line that says (Set Field = pt.PivotFields) which calls the name of the field.  The field I'm trying to influence is located in field name Locations/ sub field loc name.  When I recorded myself changing it the code call the field the following:</p>

<pre><code>ActiveSheet.PivotTables(""PivotTable1"").PivotFields( _
  ""[Locations].[Loc Name].[Location Name]"").VisibleItemsList = Array( _
  ""[Locations].[Loc Name].[Location Name].&amp;[CENTRAL MISSISSIPPI MED CTR  (CMS-1)]"")

'ActiveSheet.PivotTables(""PivotTable1"").PivotFields( _
  ""[Locations].[Loc Name].[Location Acronym]"").VisibleItemsList = Array("""")
'ActiveSheet.PivotTables(""PivotTable1"").PivotFields( _
  ""[Locations].[Loc Name].[Location Number]"").VisibleItemsList = Array("""")
</code></pre>

<p>Any help on how what I put in cell K2 calls to the corresponding location in the pivot field will be great.</p>

<p>The Code:</p>

<pre><code>Private Sub Worksheet_SelectionChange(ByVal Target As Range)

If Intersect(Target, Range(""K2:K3"")) Is Nothing Then Exit Sub

Dim pt As PivotTable
Dim Field As PivotField
Dim NewCat As String

  Set pt = Worksheets(""Fact Trans"").PivotTables(""PivotTable1"")
  Set Field = pt.PivotFields(""[Locations.Loc Name.Location Name]"").VisibleItemsList
  NewCat = Worksheets(""Fact Trans"").Range(""K2"").Value

  With pt
    Field.ClearAllFilters
    Field.CurrentPage = NewCat
    pt.RefreshTable
  End With

End Sub
</code></pre>
","<p>You are trying to assign an array of <code>String</code> to a <code>PivotField</code> which is not going to work.  This is a result of adding <code>VisibleItemsList</code> to the end of the <code>PivotFields</code> call.</p>

<p><strong>Solutions</strong></p>

<ul>
<li>If you really just want the <code>PivotField</code>, get rid of <code>VisibleItemsList</code>.</li>
<li>If what you really want is that list, you need to <code>Dim Field as Variant</code> so it can run.  That would break downstream code though, so I doubt this is your goal.</li>
</ul>

<p>I suspect you want the former which would be:</p>

<pre><code>Set Field = pt.PivotFields(""[Locations].[Loc Name].[Location Name]"")
</code></pre>

<p>You can take a look at the <a href=""https://msdn.microsoft.com/en-us/library/bb242470(v=office.12).aspx"" rel=""nofollow"">MS support for <code>VisibleItemsList</code></a> if that's the property you really want to work with.  Your macro probably included that in the code because you were changing a manual filter at the time (which is what that property controls).</p>
"
"<p>I am trying to figure out how to concatenate a users First initial, Middle initial, and Last name with an ""@emailaddress.com"". The user's whole name will be in a single cell, separated only by spaces.  I need to pull the first and middle initials along with the last name, concatenate them and add the email address extension, all in another cell.</p>

<p>Example:</p>

<p>Cell 1: John P Smith</p>

<p>Cell 2 (needs to be): jpsmith@emailaddress.com</p>

<p>Thanks All!</p>
","<p>Another approach that assumes there is only a single letter for the middle name.</p>

<pre><code>=SUBSTITUTE(
    LEFT(A1,1) &amp; RIGHT(A1,LEN(A1)-FIND("" "",A1))
  ,"" "","""")&amp;""@emailaddress.com""
</code></pre>

<p><strong>How it works</strong></p>

<ul>
<li>Grabs the first letter with <code>LEFT</code></li>
<li>Finds the end of the first name and grabs the <code>RIGHT</code> of the text from there</li>
<li>Replaces the spaces with nothing using <code>SUBSTITUTE</code></li>
<li>Tacks on the <code>@emailaddress</code> part</li>
</ul>

<p><strong>Picture of ranges and results</strong></p>

<p><img src=""https://i.stack.imgur.com/zJv2k.png"" alt=""enter image description here""></p>
"
"<p>My code:</p>

<pre><code>columns = ws.get_Range(""A:F"", System.Type.Missing);
columns.NumberFormat = ""@"";
</code></pre>

<p>After i debug the program, there is green color flag beside my number cells. </p>

<p>Expectation :
Remove the green color flag after debugging.</p>

<p>What i investigated :</p>

<p><a href=""https://msdn.microsoft.com/en-us/library/office/ff195953.aspx"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/office/ff195953.aspx</a></p>

<p>From the MSDN itself, it only showed VBA can ignore the error in the cells. But i not really believe that c# is unable to do it.</p>
","<p>There is an object on the <code>Application</code> called <code>ErrorCheckingOptions</code>.  You can change the <code>NumberAsText</code> property from <code>true</code> to <code>false</code>.</p>

<pre><code>Application.ErrorCheckingOptions.NumberAsText = false;
</code></pre>

<p>See: <a href=""https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.errorcheckingoptions.numberastext(v=office.11).aspx"" rel=""nofollow"">https://msdn.microsoft.com/en-us/library/microsoft.office.interop.excel.errorcheckingoptions.numberastext(v=office.11).aspx</a></p>

<p>Note that this is a global (Application-level) option.  I haven't tested, but it is likely that this option will persist across Excel instances (that is, once you close and reopen Excel).</p>
"
"<p>I have an excel workbook with 5 worksheets in each of this worksheets there is a table with values.
I then delete some of the rows (using VBA) depending on user selection (using dropdown list).
After my VBA code deleted all the unnecessary rows Excel states that I have ""inconsistent column formulas"" which I'd like to resolve with VBA before the user sees it.</p>

<p>Is there any way to do this with VBA?</p>

<p>I've searched Google the whole day now and still found nothing usefull and the only thing I'd have in my mind would be iterating through all Rows and Columns with formulas in it, checking, if the formula contains an error, which would definitely be super slow...</p>

<p>Note: If this counts as duplicate of <a href=""http://stackoverflow.com/questions/24511585/find-inconsistent-formulas-in-excel-through-vba"">Find inconsistent formulas in Excel through VBA</a> I'm sorry, but the only answer there doesn't work with tables as data range</p>
","<p>If you are trying to reset a formula in a <code>Table</code>, you can use the <code>DataBodyRange.Formula</code> property to reset the formula for the entire column.  This addresses one way to get the <code>Inconsistent Calculated Column Formula</code>.</p>

<p>Example of the error was obtained by setting the formula for the column, changing one cell, and then telling Excel not to change the formula column after that edit.</p>

<p><a href=""https://i.stack.imgur.com/cueVa.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cueVa.png"" alt=""enter image description here""></a></p>

<p>To revert this back to a column formula (and remove the error), you can run VBA that changes the formula for the <code>DataBodyRange</code>.</p>

<p><strong>Code to change back</strong></p>

<pre><code>Sub ResetTableColumnFormula()
    Dim listObj As ListObject
    For Each listObj In ActiveSheet.ListObjects
        listObj.ListColumns(""b"").DataBodyRange.Formula = ""=[@a]""
    Next
End Sub
</code></pre>

<p>Note that I am being a bit lazy by iterating through all <code>ListObjects</code> instead of using the name of the table to get a reference.  This works since there is only a single <code>Table</code> on the <code>Worksheet</code>.</p>

<p><strong>Formulas after that code runs:</strong></p>

<p><a href=""https://i.stack.imgur.com/UmzVO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UmzVO.png"" alt=""enter image description here""></a></p>

<p>Note that this answer is very similar to the <a href=""http://stackoverflow.com/a/13760891/4288101"">answer here.</a></p>
"
"<p>I am trying to filter a range of values and based on my criteria, at times I might have no data that fits my criteria. In that case, I do not want to copy any data from the filtered data. If there is filtered data, then I would like to copy it.</p>

<p>Here is my code:</p>

<pre><code>With Workbooks(KGRReport).Worksheets(spreadSheetName).Range(""A1:I"" &amp; lastrowinSpreadSheet)
    .AutoFilter Field:=3, Criteria1:=LimitCriteria, Operator:=xlFilterValues 'Do the filtering for Limit
     .AutoFilter Field:=9, Criteria1:=UtilizationCriteria, Operator:=xlFilterValues 'Do the filtering for Bank/NonBank
End With

'Clear the template
 Workbooks(mainwb).Worksheets(""Template"").Activate
 Workbooks(mainwb).Worksheets(""Template"").Rows(7 &amp; "":"" &amp; Rows.Count).Delete

 'Copy the filtered data
 Workbooks(KGRReport).Activate
 Set myRange = Workbooks(KGRReport).Worksheets(spreadSheetName).Range(""B2:H"" &amp; lastrowinSpreadSheet).SpecialCells(xlVisible)
 For Each myArea In myRange.Areas
     For Each rw In myArea.Rows
           strFltrdRng = strFltrdRng &amp; rw.Address &amp; "",""
     Next
 Next

 strFltrdRng = Left(strFltrdRng, Len(strFltrdRng) - 1)
 Set myFltrdRange = Range(strFltrdRng)
 myFltrdRange.Copy
 strFltrdRng = """"
</code></pre>

<p>It is giving me an error at </p>

<pre><code>Set myRange = Workbooks(KGRReport).Worksheets(spreadSheetName).Range(""B2:H"" &amp; lastrowinSpreadSheet).SpecialCells(xlVisible)
</code></pre>

<p>When there is no data at all, it is returning an error: ""No cells found"".</p>

<p>Tried error handling like this post: <a href=""http://stackoverflow.com/questions/25380886/1004-error-no-cells-were-found-easy-solution"">1004 Error: No cells were found, easy solution?</a></p>

<p>But it was not helping. Need some guidance on how to solve this.</p>
","<p><strong>An approach without the error handling</strong></p>

<p>It is possible to build the <code>AutoFilter</code> in a way that does not throw the error if nothing is found.  The trick is to <strong>include the header row in the call to the <code>SpecialCells</code></strong>.  This will ensure that at least 1 row is visible even if nothing is found (Excel will not hide the header row).  This prevents the error from jamming up execution and gives you a set of cells to check if data was found.</p>

<p>To check if the resulting range has data, you need to check <code>Rows.Count &gt; 1 Or Areas.Count &gt; 1</code>.  This handles the two possible cases where your data is found directly under the header or in a discontinuous range below the header row.  Either result means that the <code>AutoFilter</code> found valid rows.</p>

<p>Once you check that data was found, you can then do the desired call to <code>SpecialCells</code> on the data only without concern for an error.</p>

<p><strong>Sample data [column C (field 2) will be filtered]:</strong></p>

<p><a href=""https://i.stack.imgur.com/iKHtN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iKHtN.png"" alt=""random data""></a></p>

<pre><code>Sub TestAutoFilter()

    'this is your block of data with headers
    Dim rngDataAndHeader As Range
    Set rngDataAndHeader = Range(""B2"").CurrentRegion

    'this will knock off the header row if you want data only
    Dim rngData As Range
    Set rngData = Intersect(rngDataAndHeader, rngDataAndHeader.Offset(1))

    'autofilter
    rngDataAndHeader.AutoFilter Field:=2, Criteria1:=64

    'get the visible cells INCLUDING the header row
    Dim rngVisible As Range
    Set rngVisible = rngDataAndHeader.SpecialCells(xlCellTypeVisible)

    'check if there are more than 1 rows or if there are multiple areas (discontinuous range)
    If rngVisible.Rows.Count &gt; 1 Or rngVisible.Areas.Count &gt; 1 Then
        Debug.Print ""found data""

        'data is available, this call cannot throw an error now
        Set rngVisible = rngData.SpecialCells(xlCellTypeVisible)

        'do your normal execution here
        '
        '
        '
    Else
        Debug.Print ""only header, no data included""
    End If
End Sub
</code></pre>

<p><strong>Result with Criteria1:=64</strong></p>

<p><code>Immediate window: found data</code></p>

<p><a href=""https://i.stack.imgur.com/u6S0c.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/u6S0c.png"" alt=""enter image description here""></a></p>

<p><strong>Result with Criteria1:=0</strong></p>

<p><code>Immediate window: only header, no data included</code></p>

<p><a href=""https://i.stack.imgur.com/xfiFe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xfiFe.png"" alt=""enter image description here""></a></p>

<p><strong>Other notes:</strong></p>

<ul>
<li>Code includes a separate variable called <code>rngData</code> if you want access to data without headers.  This is just an INTERSECT-OFFSET to bump it one row down.</li>
<li>For the case where a result was found, code resets <code>rngVisible</code> to be the visible cells in the data only (skips header).  Since this call cannot fail now, it is safe without error handling.  This gives you a range that matches what you tried the first time but without the chance of getting an erorr.  This is not required if you can process the original range <code>rngVisible</code> that includes the headers.  If that is true, you can do away with <code>rngData</code> completely (unless you have some other need for it).</li>
</ul>
"