"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[4192],{3905:function(e,r,n){n.d(r,{Zo:function(){return m},kt:function(){return d}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),u=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},m=function(e){var r=u(e.components);return t.createElement(c.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,f=p["".concat(c,".").concat(d)]||p[d]||s[d]||a;return n?t.createElement(f,i(i({ref:r},m),{},{components:n})):t.createElement(f,i({ref:r},m))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2097:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return m},default:function(){return p}});var t=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={},c=void 0,u={unversionedId:"overview-of-values-and-formulas/05-20 TrimSelectionmd",id:"overview-of-values-and-formulas/05-20 TrimSelectionmd",title:"05-20 TrimSelectionmd",description:"TrimSelection.md",source:"@site/docs/05-overview-of-values-and-formulas/05-20 TrimSelectionmd.md",sourceDirName:"05-overview-of-values-and-formulas",slug:"/overview-of-values-and-formulas/05-20 TrimSelectionmd",permalink:"/docs/overview-of-values-and-formulas/05-20 TrimSelectionmd",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05-overview-of-values-and-formulas/05-20 TrimSelectionmd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"05-19 SplitIntoRowsmd",permalink:"/docs/overview-of-values-and-formulas/05-19 SplitIntoRowsmd"},next:{title:"overview of charting",permalink:"/docs/overview-of-charting/06 overview-of-charting"}},m=[{value:"TrimSelection.md",id:"trimselectionmd",children:[],level:2}],s={toc:m};function p(e){var r=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"trimselectionmd"},"TrimSelection.md"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb"},"Public Sub TrimSelection()\n\n    Dim rangeToTrim As Range\n    On Error GoTo errHandler\n    Set rangeToTrim = GetInputOrSelection(\"Select the formulas you'd like to convert to static values\")\n\n    'disable calcs to speed up\n    Application.ScreenUpdating = False\n    Application.EnableEvents = False\n    Application.Calculation = xlCalculationManual\n\n    'force to only consider used range\n    Set rangeToTrim = Intersect(rangeToTrim, rangeToTrim.Parent.UsedRange)\n\n    Dim targetCell As Range\n    For Each targetCell In rangeToTrim\n\n        'only change if needed\n        Dim temporaryTrimHolder As Variant\n        temporaryTrimHolder = Trim(targetCell.Value)\n\n        'added support for char 160\n        'TODO add more characters to remove\n        temporaryTrimHolder = Replace(temporaryTrimHolder, chr(160), vbNullString)\n\n        If temporaryTrimHolder <> targetCell.Value Then targetCell.Value = temporaryTrimHolder\n\n    Next targetCell\n\n    Application.Calculation = xlCalculationAutomatic\n    Application.EnableEvents = True\n    Application.ScreenUpdating = True\n\n    Exit Sub\nerrHandler:\n    MsgBox \"No Delimiter Defined!\"\n    Application.ScreenUpdating = False\n    Application.EnableEvents = False\n    Application.Calculation = xlCalculationManual\nEnd Sub\n")))}p.isMDXComponent=!0}}]);