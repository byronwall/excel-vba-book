"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8293],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(r),f=o,p=m["".concat(u,".").concat(f)]||m[f]||d[f]||a;return r?n.createElement(p,i(i({ref:t},s),{},{components:r})):n.createElement(p,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7345:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={},u=void 0,c={unversionedId:"overview-of-values-and-formulas/05-11 CreateConditionalsForFormattingmd",id:"overview-of-values-and-formulas/05-11 CreateConditionalsForFormattingmd",title:"05-11 CreateConditionalsForFormattingmd",description:"CreateConditionalsForFormatting.md",source:"@site/docs/05-overview-of-values-and-formulas/05-11 CreateConditionalsForFormattingmd.md",sourceDirName:"05-overview-of-values-and-formulas",slug:"/overview-of-values-and-formulas/05-11 CreateConditionalsForFormattingmd",permalink:"/docs/overview-of-values-and-formulas/05-11 CreateConditionalsForFormattingmd",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05-overview-of-values-and-formulas/05-11 CreateConditionalsForFormattingmd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"05-10 SelectedToValuemd",permalink:"/docs/overview-of-values-and-formulas/05-10 SelectedToValuemd"},next:{title:"05-11 SplitAndKeepmd",permalink:"/docs/overview-of-values-and-formulas/05-11 SplitAndKeepmd"}},s=[{value:"CreateConditionalsForFormatting.md",id:"createconditionalsforformattingmd",children:[],level:2}],d={toc:s};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"createconditionalsforformattingmd"},"CreateConditionalsForFormatting.md"),(0,a.kt)("p",null,"TODO: find a better location for this code. Somewhere formatting related?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb"},'Public Sub CreateConditionalsForFormatting()\n\n    On Error GoTo errHandler\n    Dim inputRange As Range\n    Set inputRange = GetInputOrSelection("Select the range of cells to convert")\n    \'add these in as powers of 3, starting at 1 = 10^0\n    Const ARRAY_MARKERS As String = " ,k,M,B,T,Q"\n    Dim arrMarkers As Variant\n    arrMarkers = Split(ARRAY_MARKERS, ",")\n\n    Dim i As Long\n    For i = UBound(arrMarkers) To 0 Step -1\n\n        With inputRange.FormatConditions.Add(xlCellValue, xlGreaterEqual, 10 ^ (3 * i))\n            .NumberFormat = "0.0" & Application.WorksheetFunction.Rept(",", i) & " "" " & arrMarkers(i) & """"\n        End With\n\n    Next\n    Exit Sub\nerrHandler:\n    MsgBox "No Range Selected!"\nEnd Sub\n')))}m.isMDXComponent=!0}}]);