"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7013],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),l=c(r),d=o,p=l["".concat(u,".").concat(d)]||l[d]||f[d]||a;return r?n.createElement(p,i(i({ref:t},m),{},{components:r})):n.createElement(p,i({ref:t},m))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=l;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},5253:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return m},default:function(){return l}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={},u=void 0,c={unversionedId:"overview-of-charting/06-18 UpdateFromChartSeriesmd",id:"overview-of-charting/06-18 UpdateFromChartSeriesmd",title:"06-18 UpdateFromChartSeriesmd",description:"UpdateFromChartSeries.md",source:"@site/docs/06-overview-of-charting/06-18 UpdateFromChartSeriesmd.md",sourceDirName:"06-overview-of-charting",slug:"/overview-of-charting/06-18 UpdateFromChartSeriesmd",permalink:"/docs/overview-of-charting/06-18 UpdateFromChartSeriesmd",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/06-overview-of-charting/06-18 UpdateFromChartSeriesmd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"06-17 RemoveZeroValueDataLabelmd",permalink:"/docs/overview-of-charting/06-17 RemoveZeroValueDataLabelmd"},next:{title:"The Worksheet object",permalink:"/docs/The-Worksheet-object/07 The-Worksheet-object"}},m=[{value:"UpdateFromChartSeries.md",id:"updatefromchartseriesmd",children:[],level:2}],f={toc:m};function l(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"updatefromchartseriesmd"},"UpdateFromChartSeries.md"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vb"},"Public Sub UpdateFromChartSeries(targetSeries As series)\n\n\n    'this will work for the simple case where all items are references\n    Const FIND_STRING As String = \"SERIES(\"\n    Const COMMA As String = \",\"\n    Const CLOSE_BRACKET As String = \")\"\n\n    Set series = targetSeries\n\n    Dim targetForm As Variant\n\n    '=SERIES(\"Y\",Sheet1!$C$8:$C$13,Sheet1!$D$8:$D$13,1)\n\n    'pull in the formula\n    targetForm = targetSeries.Formula\n\n    'uppercase to remove match errors\n    targetForm = UCase(targetForm)\n\n    'remove the front of the formula\n    targetForm = Replace(targetForm, FIND_STRING, vbNullString)\n\n    'find the first foundPosition\n    Dim foundPosition As Long\n    foundPosition = InStr(targetForm, COMMA)\n\n    If foundPosition > 1 Then\n        'need to catch an error here if a text name is used instead of a valid range\n        On Error Resume Next\n        Set Me.name = Range(left(targetForm, foundPosition - 1))\n        If Err <> 0 Then pName = left(targetForm, foundPosition - 1)\n        On Error GoTo 0\n    End If\n\n    'pull out the title from that\n    targetForm = Mid(targetForm, foundPosition + 1)\n\n    foundPosition = InStr(targetForm, COMMA)\n\n    If foundPosition > 1 Then Set Me.XValues = Range(left(targetForm, foundPosition - 1))\n\n    targetForm = Mid(targetForm, foundPosition + 1)\n\n    foundPosition = InStr(targetForm, COMMA)\n    Set Me.Values = Range(left(targetForm, foundPosition - 1))\n    targetForm = Mid(targetForm, foundPosition + 1)\n\n    foundPosition = InStr(targetForm, CLOSE_BRACKET)\n    Me.SeriesNumber = left(targetForm, foundPosition - 1)\n\n    Me.ChartType = targetSeries.ChartType\nEnd Sub\n")))}l.isMDXComponent=!0}}]);