"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[8770],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),a=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=a(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=a(r),f=o,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||i;return r?n.createElement(m,l(l({ref:t},s),{},{components:r})):n.createElement(m,l({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var a=2;a<i;a++)l[a]=r[a];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8664:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return a},toc:function(){return s},default:function(){return d}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),l=["components"],c={},u=void 0,a={unversionedId:"overview-of-utility-code/15-01 ColorInputsmd",id:"overview-of-utility-code/15-01 ColorInputsmd",title:"15-01 ColorInputsmd",description:"ColorInputs.md",source:"@site/docs/15-overview-of-utility-code/15-01 ColorInputsmd.md",sourceDirName:"15-overview-of-utility-code",slug:"/overview-of-utility-code/15-01 ColorInputsmd",permalink:"/docs/overview-of-utility-code/15-01 ColorInputsmd",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/15-overview-of-utility-code/15-01 ColorInputsmd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"overview of utility code",permalink:"/docs/overview-of-utility-code/15 overview-of-utility-code"},next:{title:"15-02 CombineAllSheetsDatamd",permalink:"/docs/overview-of-utility-code/15-02 CombineAllSheetsDatamd"}},s=[{value:"ColorInputs.md",id:"colorinputsmd",children:[],level:2}],p={toc:s};function d(e){var t=e.components,r=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"colorinputsmd"},"ColorInputs.md"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-vb"},'Public Sub ColorInputs()\n\n    Dim targetCell As Range\n    Const FIRST_COLOR_ACCENT As String = "msoThemeColorAccent1"\n    Const SECOND_COLOR_ACCENT As String = "msoThemeColorAccent2"\n    \'This is finding cells that aren\'t blank, but the description says it should be cells with no values..\n    For Each targetCell In Selection\n        If targetCell.Value <> "" Then\n            If targetCell.HasFormula Then\n                targetCell.Interior.ThemeColor = FIRST_COLOR_ACCENT\n            Else\n                targetCell.Interior.ThemeColor = SECOND_COLOR_ACCENT\n            End If\n        End If\n    Next targetCell\n\nEnd Sub\n')))}d.isMDXComponent=!0}}]);